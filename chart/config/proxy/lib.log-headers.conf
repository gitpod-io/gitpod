# lua variables: https://openresty-reference.readthedocs.io/en/latest/Lua_Nginx_API/
# nginx variables: http://nginx.org/en/docs/varindex.html

# expectation1: https://cloud.google.com/logging/docs/structured-logging
# expectation2: https://cloud.google.com/error-reporting/docs/formatting-error-messages


set $log_message_json '{}';

log_by_lua_block {
    local cjson = require("cjson")
    local ck = require("cookie")

    -- extract all cookies
    local cookie, err = ck:new()
    local cookies = nil
    if cookie then
        local fields, err = cookie:get_all()
        cookies = fields
    end

    -- get sessionId from Gitpod-Session-Cookie
    -- local gpCookie = ngx.var.cookie__gh_2088_staging_gitpod_io_
    local gpCookie = ngx.var.cookie_${PROXY_DOMAIN_COOKIE}
    local gitpodSessionId = nil
    if gpCookie then
        local ss, se = string.find(gpCookie, "s%3A", 1, true)
        local es, ee = string.find(gpCookie, ".", 1, true)
        if se and es then
            gitpodSessionId = string.sub(gpCookie, se + 1, es - 1)
        end
    end

    -- translate http-status-codes to GCP-severities
    -- see https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#logseverity
    local severity = 200
    local httpStatus = tonumber(ngx.var.status)
    if httpStatus >= 500 then
        severity = 500
    elseif httpStatus >= 400 then
        severity = 400
    end

    local json = {
        -- known fileds in 'httpRequest' get special highlighting in Stackdriver
        -- see https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#httprequest
        httpRequest={
            requestMethod=ngx.var.request_method,
            requestUrl=ngx.var.uri,
            requestSize=ngx.var.request_length,
            status=ngx.var.status,
            responseSize=ngx.var.bytes_sent,
            userAgent=ngx.var.http_user_agent,
            remoteIp=ngx.var.remote_addr,
            serverIp=ngx.var.server_addr,
            latency=ngx.var.request_time,
            protocol=ngx.var.server_protocol,
        },
        context={
            sessionId=gitpodSessionId
        },
        severity=severity,
        upstreamAddr=ngx.var.upstream_addr,
        requestScheme=ngx.var.scheme,
        requestHost=ngx.var.host,
        requestTime=ngx.var.request_time,
        remotePort=ngx.var.remote_port,
        serverName=ngx.var.server_name,
        serverPort=ngx.var.server_port,
        connection=ngx.var.connection,
        httpXGlbForwarded=ngx.var.http_x_glb_forwarded,
        httpXTLSVersion=ngx.var.http_x_tls_version,
        httpAuthorization=ngx.var.http_Authorization,
        httpConnection=ngx.var.http_Connection,
        httpUpgrade=ngx.var.http_Upgrade,
        proxyHost=ngx.var.proxy_host,
        proxyPort=ngx.var.proxy_port,
        requestHeaders=ngx.req.get_headers(),
        responseHeaders=ngx.resp.get_headers(),
        gzipRatio=ngx.var.gzip_ratio
    }
    json.requestHeaders.cookie=nil
    json.cookies=cookies

    ngx.var.log_message_json = cjson.encode(json)
}