##### Gitpod Plugins
##
## 1. makes a preflight request to the Gitpod server
##  - authorized using a token
##  - passes to the real cloud storage url for upload/download
##
## 2. passes to the provided cloud URL
##

set $action undefined;
set $type undefined;
if ($request_method = GET) {
    set $type   download;
    set $action preflight;
}
if ($arg_checkin) {
    set $action checkin;
}
if ($request_method = PUT) {
    set $type   upload;
    set $action preflight;
}
# require `id` to be set
if ($arg_id ~ "^$") {
    return 400 "Bad Request";
}

# ignore all other request types
if ($type = undefined) {
    return 400 "Bad Request";
}
set $qs "${query_string}";
set $api_key ${SERVER_PROXY_APIKEY};
set_by_lua_block $api_key_encoded { return ngx.encode_args({token = ngx.var.api_key}) }

# Content-Type has to match exactly with the `getSignedUrl` request from gcloud-storage-client.ts
# otherwise the upload will fail with a "signature does not match" error.
proxy_set_header Content-Type '*/*';

if ($action = preflight) {
    set $targetUrl "no-url";
    access_by_lua_block {
        url = "/plugins-preflight?type=" .. ngx.var.type .. "&" .. ngx.var.api_key_encoded .. "&" .. ngx.var.qs;
        response = ngx.location.capture(url);
        if response.status == ngx.HTTP_OK then
            ngx.var.targetUrl = response.body;
        else
            ngx.log(ngx.ERR, "Bad Request: /plugins/preflight returned with code " .. response.status)
            return ngx.exit(400)
        end
    }

    log_by_lua_block {
        ngx.log(ngx.ERR, " proxy_pass to " .. ngx.var.targetUrl)
    }

    proxy_pass $targetUrl;
}

if ($action = checkin) {
    proxy_pass http://apiserver/plugins/checkin?$api_key_encoded&$query_string;
}

# hide original headers
proxy_hide_header x-guploader-uploadid;
proxy_hide_header etag;
proxy_hide_header x-goog-generation;
proxy_hide_header x-goog-metageneration;
proxy_hide_header x-goog-hash;
proxy_hide_header x-goog-stored-content-length;
proxy_hide_header x-gitpod-region;
proxy_hide_header x-goog-stored-content-encoding;
proxy_hide_header x-goog-storage-class;
proxy_hide_header x-goog-generation;
proxy_hide_header x-goog-metageneration;
proxy_hide_header cache-control;
proxy_hide_header expires;
