# Copyright (c) 2020 TypeFox GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

{{- define "ws-daemon.config" }}
{{ $comp := .comp -}}
{{ with .root }}
daemon:
  runtime:
    namespace: {{ .Release.Namespace | quote }}
    containerRuntime:
      runtime: "containerd"
      containerd:
        socket: "/mnt/containerd.sock"
      nodeToContainerMapping:
        {{- range $idx, $pth := $comp.containerRuntime.nodeRoots }}
        {{ $pth | quote }}: "/mnt/node{{ $idx }}"
        {{- end }}
      mounts:
        proc: "/mnt/mounts"
  content:
    workingArea: "/mnt/workingarea"
    workingAreaNode: {{ $comp.hostWorkspaceArea | quote }}
    {{- if (and $comp.workspaceSizeLimit (not (eq $comp.workspaceSizeLimit ""))) }}
    workspaceSizeLimit: {{ ($comp.workspaceSizeLimit | default "0g") | quote }}
    {{- end }}
    storage:
{{ toYaml $comp.remoteStorage | indent 6 }}
    backup:
      timeout: "5m"
      attempts: 3
    fullWorkspaceBackup:
      workdir: "/mnt/node0/gitpod-{{ .Release.Namespace }}"
    initializer:
      command: "/app/content-initializer"
  uidmapper:
    procLocation: "/proc"
    rootUIDRange:
      start: 33333
      size: 1
    userUIDRange:
      - start: 100000
        size: 70000
  resources:
    cgroupBasePath: "/mnt/node-cgroups"
    cpuBuckets: 
{{ .Values.workspaceSizing.dynamic.cpu.buckets | toYaml | indent 6 }}
    processPriorities:
      supervisor: 0
      theia: 5
      shell: 6
      default: 10
    controlPeriod: {{ .Values.workspaceSizing.dynamic.cpu.controlPeriod | quote }}
    samplingPeriod: {{ .Values.workspaceSizing.dynamic.cpu.samplingPeriod | quote }}
  hosts:
    enabled: true
    nodeHostsFile: "/mnt/hosts"
    serviceProxy:
      enabled: true
{{- if .Values.components.registryFacade.daemonSet }}
      fixedHosts:
        registryFacade:
          - alias: {{ (printf "reg.%s" (.Values.components.registryFacade.hostname | default .Values.hostname)) | quote }}
            addr: 127.0.0.1
{{- else }}
      mapping:
        - selector: "component=registry-facade,feature=registry"
          alias: {{ (printf "reg.%s" (.Values.components.registryFacade.hostname | default .Values.hostname)) | quote }}
          proxyPort: {{ $comp.registryProxyPort }}
{{- end }}
  disk:
    path: "/mnt/wsdaemon-workingarea"
    minBytesAvail: 21474836480
service:
  address: ":{{ $comp.servicePort }}"
  tls:
    ca: "/certs/ca.crt"
    crt: "/certs/tls.crt"
    key: "/certs/tls.key"
prometheus:
  address: ":9500"
pprof:
  address: ":6060"
{{ end }}
{{ end }}

{{ $comp := .Values.components.wsDaemon -}}
{{- $this := dict "root" . "gp" $.Values "comp" $comp -}}
{{- if not $comp.disabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: ws-daemon-config
  labels:
    app: {{ template "gitpod.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.json: |-
{{ (include "ws-daemon.config" $this) | fromYaml | toPrettyJson | indent 4 }}
{{- end }}