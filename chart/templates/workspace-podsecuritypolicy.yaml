# Copyright (c) 2020 Gitpod GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

{{ if .Values.installPodSecurityPolicies -}}
# Taken from the examples here:
# Examples: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#example-policies
# File: https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/policy/restricted-psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Release.Namespace }}-ns-workspace
  labels:
    app: {{ template "gitpod.fullname" . }}
    component: workspace
    kind: podsecuritypolicy
    stage: {{ .Values.installation.stage }}
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default,unconfined'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: true
  # # This is redundant with non-root + disallow privilege escalation,
  # # but we can provide it for defense in depth.
  allowedCapabilities:
    - AUDIT_WRITE
    - FSETID
    - KILL
    - NET_BIND_SERVICE
    - SYS_PTRACE
  volumes:
    - 'configMap'
    - 'projected'
    - 'secret'
    - 'hostPath'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
{{- end -}}