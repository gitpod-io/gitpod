# Copyright (c) 2020 Gitpod GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

{{ $comp := .Values.components.nodeDaemon -}}
{{- $this := dict "root" . "gp" $.Values "comp" $comp -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-daemon
  labels:
    app: {{ template "gitpod.fullname" $ }}
    component: {{ .Values.components.nodeDaemon.name }}
    subcomponent: node-daemon
    kind: daemonset
    stage: {{ .Values.installation.stage }}
spec:
  selector:
    matchLabels:
      app: {{ template "gitpod.fullname" $ }}
      component: {{ .Values.components.nodeDaemon.name }}
      subcomponent: node-daemon
      kind: daemonset
      stage: {{ .Values.installation.stage }}
  template:
    metadata:
      labels:
        app: {{ template "gitpod.fullname" $ }}
        component: {{ .Values.components.nodeDaemon.name }}
        subcomponent: node-daemon
        kind: daemonset
        stage: {{ .Values.installation.stage }}
    spec:
{{ include "gitpod.workspaceAffinity" $this | indent 6 }}
      serviceAccountName: node-daemon
      enableServiceLinks: false
      imagePullSecrets:
{{- range $key, $value := .Values.defaults.imagePullSecrets }}
      - name: {{ $value.name }}
{{- end }}
      volumes:
      - name: theia-storage
        hostPath:
          path: {{ .Values.components.nodeDaemon.theiaHostBasePath }}
          type: DirectoryOrCreate
      - hostPath:
          path: /var/lib/node_exporter/textfile_collector
          type: DirectoryOrCreate
        name: node-exporter
      containers:
      - name: node
        image: {{ template "gitpod.comp.imageFull" $this }}
{{ include "gitpod.container.defaultEnv" $this | indent 8 }}
        - name: EXECUTING_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 5m
            memory: 50Mi
      initContainers:
      - name: theia
        image: {{ template "gitpod.comp.imageFull" (dict "root" . "gp" $.Values "comp" .Values.components.theiaServer) }}
        volumeMounts:
          - mountPath: /mnt/theia-storage
            name: theia-storage
        args:
        - --copy-to
        - /mnt/theia-storage/theia/theia-{{ .Values.version }}
        - -d
        - /theia
        securityContext:
          privileged: true
        resources:
          limits:
            memory: 250Mi
          requests:
            cpu: 5m
            memory: 250Mi
      - name: node-init
        image: alpine:3.7
        volumeMounts:
          - mountPath: /mnt/theia-storage
            name: theia-storage
        command:
        - sh
        - -c
        # We want to sleep long but also quit fast when we are killed.
        # So we listen on SIGTERM (sent by kubernetes on kill) and exit.
        - >
          apk add findutils

          trap end 15;
          end() {
            echo "[node] Received SIGTERM, exiting with 0";
            exit 0;
          };
          echo "[node] Start";

          (
            echo "[node] Patching node..." &&
            sysctl -w net.core.somaxconn=4096 &&
            sysctl -w "net.ipv4.ip_local_port_range=5000 65000" &&
            sysctl -w "net.ipv4.tcp_tw_reuse=1" &&
            sysctl -w fs.inotify.max_user_watches=1000000 &&
            sysctl -w "kernel.dmesg_restrict=1"
          ) && echo "[node] done!" || echo "[node] failed!" &&

{{- if .Values.devBranch }}
          if [ -d /mnt/theia-storage/theia ]; then
            echo "[node] Clean up old workspaces on dev-staging...";
            find /mnt/theia-storage/theia -maxdepth 1 -type d -mtime +5 -exec rm -rf {} ';';
          fi &&
{{- end }}

          echo "[node] Initialized."
        securityContext:
          privileged: true
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 5m
            memory: 50Mi
      terminationGracePeriodSeconds: 3
