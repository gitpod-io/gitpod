# Copyright (c) 2020 TypeFox GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

{{ $comp := .Values.components.registryFacade -}}
{{- $this := dict "root" . "gp" $.Values "comp" $comp -}}
{{- if not $comp.disabled -}}
apiVersion: apps/v1
{{- if $comp.daemonSet }}
kind: DaemonSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: registry-facade
  labels:
    app: {{ template "gitpod.fullname" . }}
    component: registry-facade
    kind: deployment
    stage: {{ .Values.installation.stage }}
spec:
  selector:
    matchLabels:
      app: {{ template "gitpod.fullname" . }}
      component: registry-facade
      kind: pod
      stage: {{ .Values.installation.stage }}
{{- if not $comp.daemonSet }}
  replicas: {{ $comp.replicas | default 1 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
{{- end }}
  template:
    metadata:
      name: registry-facade
      labels:
        app: {{ template "gitpod.fullname" . }}
        component: registry-facade
        kind: pod
        stage: {{ .Values.installation.stage }}
    spec:
{{- if $comp.daemonSet }}
{{ include "gitpod.workspaceAffinity" $this | indent 6 }}
{{- else }}
{{ include "gitpod.pod.affinity" $this | indent 6 }}
{{- end }}
      serviceAccountName: registry-facade
      containers:
      - name: registry-facade
        image: {{ template "gitpod.comp.imageFull" $this }}
        args: ["run", "-v", "/mnt/config/config.json"]
{{ include "gitpod.container.imagePullPolicy" $this | indent 8 }}
{{ include "gitpod.container.resources" $this | indent 8 }}
        ports:
        - name: registry
          containerPort: {{ $comp.ports.registry.containerPort }}
{{- if $comp.daemonSet }}
          hostPort: {{ $comp.ports.registry.servicePort }}
{{- end }}
        securityContext:
          privileged: false
          runAsUser: 1000
{{ include "gitpod.container.defaultEnv" $this | indent 8 }}
{{ include "gitpod.container.tracingEnv" $this | indent 8 }}
        volumeMounts:
        - name: config
          mountPath: "/mnt/config"
          readOnly: true
        - name: cache
          mountPath: "/mnt/cache"
        {{- if .Values.components.workspace.pullSecret.secretName }}
        - name: pull-secret
          mountPath: /mnt/pull-secret.json
          subPath: .dockerconfigjson
        {{- end }}
        {{- if (or $comp.certificatesSecret.secretName .Values.certificatesSecret.secretName) }}
        - name: https-certificates
          mountPath: "/mnt/certificates"
        {{- end }}
      volumes:
      - name: cache
        emptyDir: {}
      - name: config
        configMap:
          name: {{ template "gitpod.comp.configMap" $this }}
      {{- if .Values.components.workspace.pullSecret.secretName }}
      - name: pull-secret
        secret:
          secretName: {{ .Values.components.workspace.pullSecret.secretName }}
      {{- end }}
      {{- if $comp.certificatesSecret.secretName }}
      - name: https-certificates
        secret:
          secretName: {{ $comp.certificatesSecret.secretName }}
      {{- else if .Values.certificatesSecret.secretName }}
      - name: https-certificates
        secret:
          secretName: {{ .Values.certificatesSecret.secretName }}
          {{- if (and $.Values.certificatesSecret.fullChainName $.Values.certificatesSecret.chainName $.Values.certificatesSecret.keyName) }}
          items:
          - key: {{ $.Values.certificatesSecret.fullChainName }}
            path: fullchain.pem
          - key: {{ $.Values.certificatesSecret.chainName }}
            path: chain.pem
          - key: {{ $.Values.certificatesSecret.keyName }}
            path: privkey.pem
          {{- end }}
      {{- end }}
{{ toYaml .Values.defaults | indent 6 }}
{{ end }}
