# Copyright (c) 2020 Gitpod GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

{{ $comp := .Values.components.cerc -}}
{{- $this := dict "root" . "gp" $.Values "comp" $comp -}}
{{- define "cerccfg" -}}
service:
  address: :8080
  firstRunDelay: 90s
  retries: 3
  pathways:
  - name: selftest
    endpoint: http://localhost:8080/selftest/positive
    method: POST
    period: {{ .Values.components.cerc.config.selftest.period | default "10s" }}
  - name: server-health
    endpoint: http://server.{{ .Release.Namespace }}.svc.cluster.local:9500/server-health
    method: POST
    period: {{ .Values.components.cerc.config.serverHealth.period | default "1m" }}
    responseURLTemplate: http://cerc.{{ .Release.Namespace }}.svc.cluster.local/callback/{{"{{.Name}}"}}
    timeouts:
      request: 30s
      response: 1m
  - name: workspace-health
    endpoint: http://server.{{ .Release.Namespace }}.svc.cluster.local:9500/workspace-health
    method: POST
    period: {{ .Values.components.cerc.config.workspaceHealth.period | default "1m" }}
    responseURLTemplate: http://cerc.{{ .Release.Namespace }}.svc.cluster.local/callback/{{"{{.Name}}"}}
    timeouts:
      request: 30s
      response: 1m
  - name: workspace-probe
    endpoint: http://server.{{ .Release.Namespace }}.svc.cluster.local:9500/workspace-probe
    method: POST
    period: {{ .Values.components.cerc.config.workspaceProbe.period | default "5m" }}
    # response template 'cerc.{{ .Release.Namespace }}.svc.cluster.local' does not work since it is not allowed to access cerc from workspace pods
    responseURLTemplate: http://{{ if .Values.installation.shortname }}health-{{ .Values.installation.shortname }}.{{ end }}{{ .Values.hostname }}/cerc/callback/{{"{{.Name}}"}}
    timeouts:
      request: 30s
      response: 5m
reporting:
  log: true
  prometheus: true
  httpEndpoint: true
pprof: ":6060"
jsonLogging: true
{{- end -}}
{{- if not .Values.components.cerc.disabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Release.Name}}-cerc-config
  labels:
    app: cerc
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.json: {{ include "cerccfg" . | fromYaml | toJson | quote }}
{{- end -}}
