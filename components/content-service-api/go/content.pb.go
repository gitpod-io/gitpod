// Copyright (c) 2021 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: content.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeleteUserContentRequest struct {
	OwnerId              string   `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteUserContentRequest) Reset()         { *m = DeleteUserContentRequest{} }
func (m *DeleteUserContentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteUserContentRequest) ProtoMessage()    {}
func (*DeleteUserContentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cc9617ce0cf609, []int{0}
}

func (m *DeleteUserContentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserContentRequest.Unmarshal(m, b)
}
func (m *DeleteUserContentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserContentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteUserContentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserContentRequest.Merge(m, src)
}
func (m *DeleteUserContentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteUserContentRequest.Size(m)
}
func (m *DeleteUserContentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserContentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserContentRequest proto.InternalMessageInfo

func (m *DeleteUserContentRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type DeleteUserContentResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteUserContentResponse) Reset()         { *m = DeleteUserContentResponse{} }
func (m *DeleteUserContentResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteUserContentResponse) ProtoMessage()    {}
func (*DeleteUserContentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cc9617ce0cf609, []int{1}
}

func (m *DeleteUserContentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteUserContentResponse.Unmarshal(m, b)
}
func (m *DeleteUserContentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteUserContentResponse.Marshal(b, m, deterministic)
}
func (m *DeleteUserContentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteUserContentResponse.Merge(m, src)
}
func (m *DeleteUserContentResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteUserContentResponse.Size(m)
}
func (m *DeleteUserContentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteUserContentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteUserContentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DeleteUserContentRequest)(nil), "contentservice.DeleteUserContentRequest")
	proto.RegisterType((*DeleteUserContentResponse)(nil), "contentservice.DeleteUserContentResponse")
}

func init() {
	proto.RegisterFile("content.proto", fileDescriptor_61cc9617ce0cf609)
}

var fileDescriptor_61cc9617ce0cf609 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0x2b,
	0x49, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x83, 0x72, 0x8b, 0x53, 0x8b,
	0xca, 0x32, 0x93, 0x53, 0x95, 0x4c, 0xb9, 0x24, 0x5c, 0x52, 0x73, 0x52, 0x4b, 0x52, 0x43, 0x8b,
	0x53, 0x8b, 0x9c, 0x21, 0x72, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x92, 0x5c, 0x1c,
	0xf9, 0xe5, 0x79, 0xa9, 0x45, 0xf1, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0xec,
	0x60, 0xbe, 0x67, 0x8a, 0x92, 0x34, 0x97, 0x24, 0x16, 0x6d, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9,
	0x46, 0x35, 0x5c, 0x7c, 0x50, 0xa1, 0x60, 0x88, 0x2d, 0x42, 0x59, 0x5c, 0x82, 0x18, 0xca, 0x85,
	0x34, 0xf4, 0x50, 0xdd, 0xa2, 0x87, 0xcb, 0x21, 0x52, 0x9a, 0x44, 0xa8, 0x84, 0xd8, 0xad, 0xc4,
	0xe0, 0x64, 0x18, 0xa5, 0x9f, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0x0b, 0x62,
	0x16, 0xe4, 0xa7, 0xe8, 0x66, 0xe6, 0x43, 0x59, 0xfa, 0x50, 0x93, 0x74, 0xa1, 0x46, 0xe9, 0x27,
	0x16, 0x64, 0x26, 0xb1, 0x81, 0xc3, 0xc6, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x99, 0xd3,
	0x32, 0x2c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContentServiceClient is the client API for ContentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentServiceClient interface {
	// DeleteUserContent deletes all content associated with a user.
	DeleteUserContent(ctx context.Context, in *DeleteUserContentRequest, opts ...grpc.CallOption) (*DeleteUserContentResponse, error)
}

type contentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContentServiceClient(cc grpc.ClientConnInterface) ContentServiceClient {
	return &contentServiceClient{cc}
}

func (c *contentServiceClient) DeleteUserContent(ctx context.Context, in *DeleteUserContentRequest, opts ...grpc.CallOption) (*DeleteUserContentResponse, error) {
	out := new(DeleteUserContentResponse)
	err := c.cc.Invoke(ctx, "/contentservice.ContentService/DeleteUserContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServiceServer is the server API for ContentService service.
type ContentServiceServer interface {
	// DeleteUserContent deletes all content associated with a user.
	DeleteUserContent(context.Context, *DeleteUserContentRequest) (*DeleteUserContentResponse, error)
}

// UnimplementedContentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContentServiceServer struct {
}

func (*UnimplementedContentServiceServer) DeleteUserContent(ctx context.Context, req *DeleteUserContentRequest) (*DeleteUserContentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserContent not implemented")
}

func RegisterContentServiceServer(s *grpc.Server, srv ContentServiceServer) {
	s.RegisterService(&_ContentService_serviceDesc, srv)
}

func _ContentService_DeleteUserContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).DeleteUserContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contentservice.ContentService/DeleteUserContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).DeleteUserContent(ctx, req.(*DeleteUserContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contentservice.ContentService",
	HandlerType: (*ContentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteUserContent",
			Handler:    _ContentService_DeleteUserContent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "content.proto",
}
