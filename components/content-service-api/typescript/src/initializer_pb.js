/**
 * Copyright (c) 2022 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License.AGPL.txt in the project root for license information.
 */

// source: initializer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = function () {
    return this || window || global || self || Function("return this")();
}.call(null);

goog.exportSymbol("proto.contentservice.CloneTargetMode", null, global);
goog.exportSymbol("proto.contentservice.CompositeInitializer", null, global);
goog.exportSymbol("proto.contentservice.EmptyInitializer", null, global);
goog.exportSymbol("proto.contentservice.FileDownloadInitializer", null, global);
goog.exportSymbol("proto.contentservice.FileDownloadInitializer.FileInfo", null, global);
goog.exportSymbol("proto.contentservice.FromBackupInitializer", null, global);
goog.exportSymbol("proto.contentservice.GitAuthMethod", null, global);
goog.exportSymbol("proto.contentservice.GitConfig", null, global);
goog.exportSymbol("proto.contentservice.GitInitializer", null, global);
goog.exportSymbol("proto.contentservice.GitStatus", null, global);
goog.exportSymbol("proto.contentservice.PrebuildInitializer", null, global);
goog.exportSymbol("proto.contentservice.SnapshotInitializer", null, global);
goog.exportSymbol("proto.contentservice.WorkspaceInitializer", null, global);
goog.exportSymbol("proto.contentservice.WorkspaceInitializer.SpecCase", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.WorkspaceInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.contentservice.WorkspaceInitializer.oneofGroups_);
};
goog.inherits(proto.contentservice.WorkspaceInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.WorkspaceInitializer.displayName = "proto.contentservice.WorkspaceInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.CompositeInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.contentservice.CompositeInitializer.repeatedFields_, null);
};
goog.inherits(proto.contentservice.CompositeInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.CompositeInitializer.displayName = "proto.contentservice.CompositeInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.FileDownloadInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.contentservice.FileDownloadInitializer.repeatedFields_, null);
};
goog.inherits(proto.contentservice.FileDownloadInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.FileDownloadInitializer.displayName = "proto.contentservice.FileDownloadInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.FileDownloadInitializer.FileInfo = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contentservice.FileDownloadInitializer.FileInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.FileDownloadInitializer.FileInfo.displayName =
        "proto.contentservice.FileDownloadInitializer.FileInfo";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.EmptyInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contentservice.EmptyInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.EmptyInitializer.displayName = "proto.contentservice.EmptyInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.GitInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contentservice.GitInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.GitInitializer.displayName = "proto.contentservice.GitInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.GitConfig = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contentservice.GitConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.GitConfig.displayName = "proto.contentservice.GitConfig";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.SnapshotInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contentservice.SnapshotInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.SnapshotInitializer.displayName = "proto.contentservice.SnapshotInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.PrebuildInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.contentservice.PrebuildInitializer.repeatedFields_, null);
};
goog.inherits(proto.contentservice.PrebuildInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.PrebuildInitializer.displayName = "proto.contentservice.PrebuildInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.FromBackupInitializer = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contentservice.FromBackupInitializer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.FromBackupInitializer.displayName = "proto.contentservice.FromBackupInitializer";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contentservice.GitStatus = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.contentservice.GitStatus.repeatedFields_, null);
};
goog.inherits(proto.contentservice.GitStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.contentservice.GitStatus.displayName = "proto.contentservice.GitStatus";
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.contentservice.WorkspaceInitializer.oneofGroups_ = [[1, 2, 3, 4, 5, 6, 7]];

/**
 * @enum {number}
 */
proto.contentservice.WorkspaceInitializer.SpecCase = {
    SPEC_NOT_SET: 0,
    EMPTY: 1,
    GIT: 2,
    SNAPSHOT: 3,
    PREBUILD: 4,
    COMPOSITE: 5,
    DOWNLOAD: 6,
    BACKUP: 7,
};

/**
 * @return {proto.contentservice.WorkspaceInitializer.SpecCase}
 */
proto.contentservice.WorkspaceInitializer.prototype.getSpecCase = function () {
    return /** @type {proto.contentservice.WorkspaceInitializer.SpecCase} */ (
        jspb.Message.computeOneofCase(this, proto.contentservice.WorkspaceInitializer.oneofGroups_[0])
    );
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.WorkspaceInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.WorkspaceInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.WorkspaceInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.WorkspaceInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                empty: (f = msg.getEmpty()) && proto.contentservice.EmptyInitializer.toObject(includeInstance, f),
                git: (f = msg.getGit()) && proto.contentservice.GitInitializer.toObject(includeInstance, f),
                snapshot:
                    (f = msg.getSnapshot()) && proto.contentservice.SnapshotInitializer.toObject(includeInstance, f),
                prebuild:
                    (f = msg.getPrebuild()) && proto.contentservice.PrebuildInitializer.toObject(includeInstance, f),
                composite:
                    (f = msg.getComposite()) && proto.contentservice.CompositeInitializer.toObject(includeInstance, f),
                download:
                    (f = msg.getDownload()) &&
                    proto.contentservice.FileDownloadInitializer.toObject(includeInstance, f),
                backup:
                    (f = msg.getBackup()) && proto.contentservice.FromBackupInitializer.toObject(includeInstance, f),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.WorkspaceInitializer}
 */
proto.contentservice.WorkspaceInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.WorkspaceInitializer();
    return proto.contentservice.WorkspaceInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.WorkspaceInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.WorkspaceInitializer}
 */
proto.contentservice.WorkspaceInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.contentservice.EmptyInitializer();
                reader.readMessage(value, proto.contentservice.EmptyInitializer.deserializeBinaryFromReader);
                msg.setEmpty(value);
                break;
            case 2:
                var value = new proto.contentservice.GitInitializer();
                reader.readMessage(value, proto.contentservice.GitInitializer.deserializeBinaryFromReader);
                msg.setGit(value);
                break;
            case 3:
                var value = new proto.contentservice.SnapshotInitializer();
                reader.readMessage(value, proto.contentservice.SnapshotInitializer.deserializeBinaryFromReader);
                msg.setSnapshot(value);
                break;
            case 4:
                var value = new proto.contentservice.PrebuildInitializer();
                reader.readMessage(value, proto.contentservice.PrebuildInitializer.deserializeBinaryFromReader);
                msg.setPrebuild(value);
                break;
            case 5:
                var value = new proto.contentservice.CompositeInitializer();
                reader.readMessage(value, proto.contentservice.CompositeInitializer.deserializeBinaryFromReader);
                msg.setComposite(value);
                break;
            case 6:
                var value = new proto.contentservice.FileDownloadInitializer();
                reader.readMessage(value, proto.contentservice.FileDownloadInitializer.deserializeBinaryFromReader);
                msg.setDownload(value);
                break;
            case 7:
                var value = new proto.contentservice.FromBackupInitializer();
                reader.readMessage(value, proto.contentservice.FromBackupInitializer.deserializeBinaryFromReader);
                msg.setBackup(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.WorkspaceInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.WorkspaceInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.WorkspaceInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.WorkspaceInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEmpty();
    if (f != null) {
        writer.writeMessage(1, f, proto.contentservice.EmptyInitializer.serializeBinaryToWriter);
    }
    f = message.getGit();
    if (f != null) {
        writer.writeMessage(2, f, proto.contentservice.GitInitializer.serializeBinaryToWriter);
    }
    f = message.getSnapshot();
    if (f != null) {
        writer.writeMessage(3, f, proto.contentservice.SnapshotInitializer.serializeBinaryToWriter);
    }
    f = message.getPrebuild();
    if (f != null) {
        writer.writeMessage(4, f, proto.contentservice.PrebuildInitializer.serializeBinaryToWriter);
    }
    f = message.getComposite();
    if (f != null) {
        writer.writeMessage(5, f, proto.contentservice.CompositeInitializer.serializeBinaryToWriter);
    }
    f = message.getDownload();
    if (f != null) {
        writer.writeMessage(6, f, proto.contentservice.FileDownloadInitializer.serializeBinaryToWriter);
    }
    f = message.getBackup();
    if (f != null) {
        writer.writeMessage(7, f, proto.contentservice.FromBackupInitializer.serializeBinaryToWriter);
    }
};

/**
 * optional EmptyInitializer empty = 1;
 * @return {?proto.contentservice.EmptyInitializer}
 */
proto.contentservice.WorkspaceInitializer.prototype.getEmpty = function () {
    return /** @type{?proto.contentservice.EmptyInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.EmptyInitializer, 1)
    );
};

/**
 * @param {?proto.contentservice.EmptyInitializer|undefined} value
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.setEmpty = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.contentservice.WorkspaceInitializer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.clearEmpty = function () {
    return this.setEmpty(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.WorkspaceInitializer.prototype.hasEmpty = function () {
    return jspb.Message.getField(this, 1) != null;
};

/**
 * optional GitInitializer git = 2;
 * @return {?proto.contentservice.GitInitializer}
 */
proto.contentservice.WorkspaceInitializer.prototype.getGit = function () {
    return /** @type{?proto.contentservice.GitInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.GitInitializer, 2)
    );
};

/**
 * @param {?proto.contentservice.GitInitializer|undefined} value
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.setGit = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.contentservice.WorkspaceInitializer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.clearGit = function () {
    return this.setGit(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.WorkspaceInitializer.prototype.hasGit = function () {
    return jspb.Message.getField(this, 2) != null;
};

/**
 * optional SnapshotInitializer snapshot = 3;
 * @return {?proto.contentservice.SnapshotInitializer}
 */
proto.contentservice.WorkspaceInitializer.prototype.getSnapshot = function () {
    return /** @type{?proto.contentservice.SnapshotInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.SnapshotInitializer, 3)
    );
};

/**
 * @param {?proto.contentservice.SnapshotInitializer|undefined} value
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.setSnapshot = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.contentservice.WorkspaceInitializer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.clearSnapshot = function () {
    return this.setSnapshot(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.WorkspaceInitializer.prototype.hasSnapshot = function () {
    return jspb.Message.getField(this, 3) != null;
};

/**
 * optional PrebuildInitializer prebuild = 4;
 * @return {?proto.contentservice.PrebuildInitializer}
 */
proto.contentservice.WorkspaceInitializer.prototype.getPrebuild = function () {
    return /** @type{?proto.contentservice.PrebuildInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.PrebuildInitializer, 4)
    );
};

/**
 * @param {?proto.contentservice.PrebuildInitializer|undefined} value
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.setPrebuild = function (value) {
    return jspb.Message.setOneofWrapperField(this, 4, proto.contentservice.WorkspaceInitializer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.clearPrebuild = function () {
    return this.setPrebuild(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.WorkspaceInitializer.prototype.hasPrebuild = function () {
    return jspb.Message.getField(this, 4) != null;
};

/**
 * optional CompositeInitializer composite = 5;
 * @return {?proto.contentservice.CompositeInitializer}
 */
proto.contentservice.WorkspaceInitializer.prototype.getComposite = function () {
    return /** @type{?proto.contentservice.CompositeInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.CompositeInitializer, 5)
    );
};

/**
 * @param {?proto.contentservice.CompositeInitializer|undefined} value
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.setComposite = function (value) {
    return jspb.Message.setOneofWrapperField(this, 5, proto.contentservice.WorkspaceInitializer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.clearComposite = function () {
    return this.setComposite(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.WorkspaceInitializer.prototype.hasComposite = function () {
    return jspb.Message.getField(this, 5) != null;
};

/**
 * optional FileDownloadInitializer download = 6;
 * @return {?proto.contentservice.FileDownloadInitializer}
 */
proto.contentservice.WorkspaceInitializer.prototype.getDownload = function () {
    return /** @type{?proto.contentservice.FileDownloadInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.FileDownloadInitializer, 6)
    );
};

/**
 * @param {?proto.contentservice.FileDownloadInitializer|undefined} value
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.setDownload = function (value) {
    return jspb.Message.setOneofWrapperField(this, 6, proto.contentservice.WorkspaceInitializer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.clearDownload = function () {
    return this.setDownload(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.WorkspaceInitializer.prototype.hasDownload = function () {
    return jspb.Message.getField(this, 6) != null;
};

/**
 * optional FromBackupInitializer backup = 7;
 * @return {?proto.contentservice.FromBackupInitializer}
 */
proto.contentservice.WorkspaceInitializer.prototype.getBackup = function () {
    return /** @type{?proto.contentservice.FromBackupInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.FromBackupInitializer, 7)
    );
};

/**
 * @param {?proto.contentservice.FromBackupInitializer|undefined} value
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.setBackup = function (value) {
    return jspb.Message.setOneofWrapperField(this, 7, proto.contentservice.WorkspaceInitializer.oneofGroups_[0], value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.WorkspaceInitializer} returns this
 */
proto.contentservice.WorkspaceInitializer.prototype.clearBackup = function () {
    return this.setBackup(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.WorkspaceInitializer.prototype.hasBackup = function () {
    return jspb.Message.getField(this, 7) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contentservice.CompositeInitializer.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.CompositeInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.CompositeInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.CompositeInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.CompositeInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                initializerList: jspb.Message.toObjectList(
                    msg.getInitializerList(),
                    proto.contentservice.WorkspaceInitializer.toObject,
                    includeInstance,
                ),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.CompositeInitializer}
 */
proto.contentservice.CompositeInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.CompositeInitializer();
    return proto.contentservice.CompositeInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.CompositeInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.CompositeInitializer}
 */
proto.contentservice.CompositeInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.contentservice.WorkspaceInitializer();
                reader.readMessage(value, proto.contentservice.WorkspaceInitializer.deserializeBinaryFromReader);
                msg.addInitializer(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.CompositeInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.CompositeInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.CompositeInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.CompositeInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getInitializerList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.contentservice.WorkspaceInitializer.serializeBinaryToWriter);
    }
};

/**
 * repeated WorkspaceInitializer initializer = 1;
 * @return {!Array<!proto.contentservice.WorkspaceInitializer>}
 */
proto.contentservice.CompositeInitializer.prototype.getInitializerList = function () {
    return /** @type{!Array<!proto.contentservice.WorkspaceInitializer>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.contentservice.WorkspaceInitializer, 1)
    );
};

/**
 * @param {!Array<!proto.contentservice.WorkspaceInitializer>} value
 * @return {!proto.contentservice.CompositeInitializer} returns this
 */
proto.contentservice.CompositeInitializer.prototype.setInitializerList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.contentservice.WorkspaceInitializer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contentservice.WorkspaceInitializer}
 */
proto.contentservice.CompositeInitializer.prototype.addInitializer = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
        this,
        1,
        opt_value,
        proto.contentservice.WorkspaceInitializer,
        opt_index,
    );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contentservice.CompositeInitializer} returns this
 */
proto.contentservice.CompositeInitializer.prototype.clearInitializerList = function () {
    return this.setInitializerList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contentservice.FileDownloadInitializer.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.FileDownloadInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.FileDownloadInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.FileDownloadInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.FileDownloadInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                filesList: jspb.Message.toObjectList(
                    msg.getFilesList(),
                    proto.contentservice.FileDownloadInitializer.FileInfo.toObject,
                    includeInstance,
                ),
                targetLocation: jspb.Message.getFieldWithDefault(msg, 2, ""),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.FileDownloadInitializer}
 */
proto.contentservice.FileDownloadInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.FileDownloadInitializer();
    return proto.contentservice.FileDownloadInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.FileDownloadInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.FileDownloadInitializer}
 */
proto.contentservice.FileDownloadInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.contentservice.FileDownloadInitializer.FileInfo();
                reader.readMessage(
                    value,
                    proto.contentservice.FileDownloadInitializer.FileInfo.deserializeBinaryFromReader,
                );
                msg.addFiles(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setTargetLocation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.FileDownloadInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.FileDownloadInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.FileDownloadInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.FileDownloadInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFilesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(
            1,
            f,
            proto.contentservice.FileDownloadInitializer.FileInfo.serializeBinaryToWriter,
        );
    }
    f = message.getTargetLocation();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.FileDownloadInitializer.FileInfo.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.FileDownloadInitializer.FileInfo.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.FileDownloadInitializer.FileInfo} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.FileDownloadInitializer.FileInfo.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                url: jspb.Message.getFieldWithDefault(msg, 1, ""),
                filePath: jspb.Message.getFieldWithDefault(msg, 2, ""),
                digest: jspb.Message.getFieldWithDefault(msg, 3, ""),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.FileDownloadInitializer.FileInfo}
 */
proto.contentservice.FileDownloadInitializer.FileInfo.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.FileDownloadInitializer.FileInfo();
    return proto.contentservice.FileDownloadInitializer.FileInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.FileDownloadInitializer.FileInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.FileDownloadInitializer.FileInfo}
 */
proto.contentservice.FileDownloadInitializer.FileInfo.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setFilePath(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDigest(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.FileDownloadInitializer.FileInfo.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.FileDownloadInitializer.FileInfo.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.FileDownloadInitializer.FileInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.FileDownloadInitializer.FileInfo.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getFilePath();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getDigest();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};

/**
 * optional string url = 1;
 * @return {string}
 */
proto.contentservice.FileDownloadInitializer.FileInfo.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.FileDownloadInitializer.FileInfo} returns this
 */
proto.contentservice.FileDownloadInitializer.FileInfo.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string file_path = 2;
 * @return {string}
 */
proto.contentservice.FileDownloadInitializer.FileInfo.prototype.getFilePath = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.FileDownloadInitializer.FileInfo} returns this
 */
proto.contentservice.FileDownloadInitializer.FileInfo.prototype.setFilePath = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string digest = 3;
 * @return {string}
 */
proto.contentservice.FileDownloadInitializer.FileInfo.prototype.getDigest = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.FileDownloadInitializer.FileInfo} returns this
 */
proto.contentservice.FileDownloadInitializer.FileInfo.prototype.setDigest = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * repeated FileInfo files = 1;
 * @return {!Array<!proto.contentservice.FileDownloadInitializer.FileInfo>}
 */
proto.contentservice.FileDownloadInitializer.prototype.getFilesList = function () {
    return /** @type{!Array<!proto.contentservice.FileDownloadInitializer.FileInfo>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.contentservice.FileDownloadInitializer.FileInfo, 1)
    );
};

/**
 * @param {!Array<!proto.contentservice.FileDownloadInitializer.FileInfo>} value
 * @return {!proto.contentservice.FileDownloadInitializer} returns this
 */
proto.contentservice.FileDownloadInitializer.prototype.setFilesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.contentservice.FileDownloadInitializer.FileInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contentservice.FileDownloadInitializer.FileInfo}
 */
proto.contentservice.FileDownloadInitializer.prototype.addFiles = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(
        this,
        1,
        opt_value,
        proto.contentservice.FileDownloadInitializer.FileInfo,
        opt_index,
    );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contentservice.FileDownloadInitializer} returns this
 */
proto.contentservice.FileDownloadInitializer.prototype.clearFilesList = function () {
    return this.setFilesList([]);
};

/**
 * optional string target_location = 2;
 * @return {string}
 */
proto.contentservice.FileDownloadInitializer.prototype.getTargetLocation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.FileDownloadInitializer} returns this
 */
proto.contentservice.FileDownloadInitializer.prototype.setTargetLocation = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.EmptyInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.EmptyInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.EmptyInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.EmptyInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {};

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.EmptyInitializer}
 */
proto.contentservice.EmptyInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.EmptyInitializer();
    return proto.contentservice.EmptyInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.EmptyInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.EmptyInitializer}
 */
proto.contentservice.EmptyInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.EmptyInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.EmptyInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.EmptyInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.EmptyInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.GitInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.GitInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.GitInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.GitInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                remoteUri: jspb.Message.getFieldWithDefault(msg, 1, ""),
                upstreamRemoteUri: jspb.Message.getFieldWithDefault(msg, 2, ""),
                targetMode: jspb.Message.getFieldWithDefault(msg, 3, 0),
                cloneTaget: jspb.Message.getFieldWithDefault(msg, 4, ""),
                checkoutLocation: jspb.Message.getFieldWithDefault(msg, 5, ""),
                config: (f = msg.getConfig()) && proto.contentservice.GitConfig.toObject(includeInstance, f),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.GitInitializer}
 */
proto.contentservice.GitInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.GitInitializer();
    return proto.contentservice.GitInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.GitInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.GitInitializer}
 */
proto.contentservice.GitInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setRemoteUri(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setUpstreamRemoteUri(value);
                break;
            case 3:
                var value = /** @type {!proto.contentservice.CloneTargetMode} */ (reader.readEnum());
                msg.setTargetMode(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setCloneTaget(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setCheckoutLocation(value);
                break;
            case 6:
                var value = new proto.contentservice.GitConfig();
                reader.readMessage(value, proto.contentservice.GitConfig.deserializeBinaryFromReader);
                msg.setConfig(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.GitInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.GitInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.GitInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.GitInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRemoteUri();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getUpstreamRemoteUri();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getTargetMode();
    if (f !== 0.0) {
        writer.writeEnum(3, f);
    }
    f = message.getCloneTaget();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getCheckoutLocation();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getConfig();
    if (f != null) {
        writer.writeMessage(6, f, proto.contentservice.GitConfig.serializeBinaryToWriter);
    }
};

/**
 * optional string remote_uri = 1;
 * @return {string}
 */
proto.contentservice.GitInitializer.prototype.getRemoteUri = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitInitializer} returns this
 */
proto.contentservice.GitInitializer.prototype.setRemoteUri = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string upstream_Remote_uri = 2;
 * @return {string}
 */
proto.contentservice.GitInitializer.prototype.getUpstreamRemoteUri = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitInitializer} returns this
 */
proto.contentservice.GitInitializer.prototype.setUpstreamRemoteUri = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional CloneTargetMode target_mode = 3;
 * @return {!proto.contentservice.CloneTargetMode}
 */
proto.contentservice.GitInitializer.prototype.getTargetMode = function () {
    return /** @type {!proto.contentservice.CloneTargetMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {!proto.contentservice.CloneTargetMode} value
 * @return {!proto.contentservice.GitInitializer} returns this
 */
proto.contentservice.GitInitializer.prototype.setTargetMode = function (value) {
    return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * optional string clone_taget = 4;
 * @return {string}
 */
proto.contentservice.GitInitializer.prototype.getCloneTaget = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitInitializer} returns this
 */
proto.contentservice.GitInitializer.prototype.setCloneTaget = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string checkout_location = 5;
 * @return {string}
 */
proto.contentservice.GitInitializer.prototype.getCheckoutLocation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitInitializer} returns this
 */
proto.contentservice.GitInitializer.prototype.setCheckoutLocation = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional GitConfig config = 6;
 * @return {?proto.contentservice.GitConfig}
 */
proto.contentservice.GitInitializer.prototype.getConfig = function () {
    return /** @type{?proto.contentservice.GitConfig} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.GitConfig, 6)
    );
};

/**
 * @param {?proto.contentservice.GitConfig|undefined} value
 * @return {!proto.contentservice.GitInitializer} returns this
 */
proto.contentservice.GitInitializer.prototype.setConfig = function (value) {
    return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.GitInitializer} returns this
 */
proto.contentservice.GitInitializer.prototype.clearConfig = function () {
    return this.setConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.GitInitializer.prototype.hasConfig = function () {
    return jspb.Message.getField(this, 6) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.GitConfig.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.GitConfig.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.GitConfig} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.GitConfig.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                customConfigMap: (f = msg.getCustomConfigMap()) ? f.toObject(includeInstance, undefined) : [],
                authentication: jspb.Message.getFieldWithDefault(msg, 2, 0),
                authUser: jspb.Message.getFieldWithDefault(msg, 3, ""),
                authPassword: jspb.Message.getFieldWithDefault(msg, 4, ""),
                authOts: jspb.Message.getFieldWithDefault(msg, 5, ""),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.GitConfig}
 */
proto.contentservice.GitConfig.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.GitConfig();
    return proto.contentservice.GitConfig.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.GitConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.GitConfig}
 */
proto.contentservice.GitConfig.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = msg.getCustomConfigMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(
                        message,
                        reader,
                        jspb.BinaryReader.prototype.readString,
                        jspb.BinaryReader.prototype.readString,
                        null,
                        "",
                        "",
                    );
                });
                break;
            case 2:
                var value = /** @type {!proto.contentservice.GitAuthMethod} */ (reader.readEnum());
                msg.setAuthentication(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setAuthUser(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setAuthPassword(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setAuthOts(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.GitConfig.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.GitConfig.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.GitConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.GitConfig.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCustomConfigMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getAuthentication();
    if (f !== 0.0) {
        writer.writeEnum(2, f);
    }
    f = message.getAuthUser();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getAuthPassword();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getAuthOts();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
};

/**
 * map<string, string> custom_config = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.contentservice.GitConfig.prototype.getCustomConfigMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 1, opt_noLazyCreate, null));
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.contentservice.GitConfig} returns this
 */
proto.contentservice.GitConfig.prototype.clearCustomConfigMap = function () {
    this.getCustomConfigMap().clear();
    return this;
};

/**
 * optional GitAuthMethod authentication = 2;
 * @return {!proto.contentservice.GitAuthMethod}
 */
proto.contentservice.GitConfig.prototype.getAuthentication = function () {
    return /** @type {!proto.contentservice.GitAuthMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {!proto.contentservice.GitAuthMethod} value
 * @return {!proto.contentservice.GitConfig} returns this
 */
proto.contentservice.GitConfig.prototype.setAuthentication = function (value) {
    return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional string auth_user = 3;
 * @return {string}
 */
proto.contentservice.GitConfig.prototype.getAuthUser = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitConfig} returns this
 */
proto.contentservice.GitConfig.prototype.setAuthUser = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string auth_password = 4;
 * @return {string}
 */
proto.contentservice.GitConfig.prototype.getAuthPassword = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitConfig} returns this
 */
proto.contentservice.GitConfig.prototype.setAuthPassword = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string auth_ots = 5;
 * @return {string}
 */
proto.contentservice.GitConfig.prototype.getAuthOts = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitConfig} returns this
 */
proto.contentservice.GitConfig.prototype.setAuthOts = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.SnapshotInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.SnapshotInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.SnapshotInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.SnapshotInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                snapshot: jspb.Message.getFieldWithDefault(msg, 1, ""),
                fromVolumeSnapshot: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.SnapshotInitializer}
 */
proto.contentservice.SnapshotInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.SnapshotInitializer();
    return proto.contentservice.SnapshotInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.SnapshotInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.SnapshotInitializer}
 */
proto.contentservice.SnapshotInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSnapshot(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFromVolumeSnapshot(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.SnapshotInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.SnapshotInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.SnapshotInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.SnapshotInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSnapshot();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getFromVolumeSnapshot();
    if (f) {
        writer.writeBool(2, f);
    }
};

/**
 * optional string snapshot = 1;
 * @return {string}
 */
proto.contentservice.SnapshotInitializer.prototype.getSnapshot = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.SnapshotInitializer} returns this
 */
proto.contentservice.SnapshotInitializer.prototype.setSnapshot = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bool from_volume_snapshot = 2;
 * @return {boolean}
 */
proto.contentservice.SnapshotInitializer.prototype.getFromVolumeSnapshot = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};

/**
 * @param {boolean} value
 * @return {!proto.contentservice.SnapshotInitializer} returns this
 */
proto.contentservice.SnapshotInitializer.prototype.setFromVolumeSnapshot = function (value) {
    return jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contentservice.PrebuildInitializer.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.PrebuildInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.PrebuildInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.PrebuildInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.PrebuildInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                prebuild:
                    (f = msg.getPrebuild()) && proto.contentservice.SnapshotInitializer.toObject(includeInstance, f),
                gitList: jspb.Message.toObjectList(
                    msg.getGitList(),
                    proto.contentservice.GitInitializer.toObject,
                    includeInstance,
                ),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.PrebuildInitializer}
 */
proto.contentservice.PrebuildInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.PrebuildInitializer();
    return proto.contentservice.PrebuildInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.PrebuildInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.PrebuildInitializer}
 */
proto.contentservice.PrebuildInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.contentservice.SnapshotInitializer();
                reader.readMessage(value, proto.contentservice.SnapshotInitializer.deserializeBinaryFromReader);
                msg.setPrebuild(value);
                break;
            case 2:
                var value = new proto.contentservice.GitInitializer();
                reader.readMessage(value, proto.contentservice.GitInitializer.deserializeBinaryFromReader);
                msg.addGit(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.PrebuildInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.PrebuildInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.PrebuildInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.PrebuildInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPrebuild();
    if (f != null) {
        writer.writeMessage(1, f, proto.contentservice.SnapshotInitializer.serializeBinaryToWriter);
    }
    f = message.getGitList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.contentservice.GitInitializer.serializeBinaryToWriter);
    }
};

/**
 * optional SnapshotInitializer prebuild = 1;
 * @return {?proto.contentservice.SnapshotInitializer}
 */
proto.contentservice.PrebuildInitializer.prototype.getPrebuild = function () {
    return /** @type{?proto.contentservice.SnapshotInitializer} */ (
        jspb.Message.getWrapperField(this, proto.contentservice.SnapshotInitializer, 1)
    );
};

/**
 * @param {?proto.contentservice.SnapshotInitializer|undefined} value
 * @return {!proto.contentservice.PrebuildInitializer} returns this
 */
proto.contentservice.PrebuildInitializer.prototype.setPrebuild = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.contentservice.PrebuildInitializer} returns this
 */
proto.contentservice.PrebuildInitializer.prototype.clearPrebuild = function () {
    return this.setPrebuild(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contentservice.PrebuildInitializer.prototype.hasPrebuild = function () {
    return jspb.Message.getField(this, 1) != null;
};

/**
 * repeated GitInitializer git = 2;
 * @return {!Array<!proto.contentservice.GitInitializer>}
 */
proto.contentservice.PrebuildInitializer.prototype.getGitList = function () {
    return /** @type{!Array<!proto.contentservice.GitInitializer>} */ (
        jspb.Message.getRepeatedWrapperField(this, proto.contentservice.GitInitializer, 2)
    );
};

/**
 * @param {!Array<!proto.contentservice.GitInitializer>} value
 * @return {!proto.contentservice.PrebuildInitializer} returns this
 */
proto.contentservice.PrebuildInitializer.prototype.setGitList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};

/**
 * @param {!proto.contentservice.GitInitializer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contentservice.GitInitializer}
 */
proto.contentservice.PrebuildInitializer.prototype.addGit = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.contentservice.GitInitializer, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contentservice.PrebuildInitializer} returns this
 */
proto.contentservice.PrebuildInitializer.prototype.clearGitList = function () {
    return this.setGitList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.FromBackupInitializer.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.FromBackupInitializer.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.FromBackupInitializer} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.FromBackupInitializer.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                checkoutLocation: jspb.Message.getFieldWithDefault(msg, 1, ""),
                fromVolumeSnapshot: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.FromBackupInitializer}
 */
proto.contentservice.FromBackupInitializer.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.FromBackupInitializer();
    return proto.contentservice.FromBackupInitializer.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.FromBackupInitializer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.FromBackupInitializer}
 */
proto.contentservice.FromBackupInitializer.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setCheckoutLocation(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFromVolumeSnapshot(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.FromBackupInitializer.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.FromBackupInitializer.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.FromBackupInitializer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.FromBackupInitializer.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getCheckoutLocation();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getFromVolumeSnapshot();
    if (f) {
        writer.writeBool(2, f);
    }
};

/**
 * optional string checkout_location = 1;
 * @return {string}
 */
proto.contentservice.FromBackupInitializer.prototype.getCheckoutLocation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.FromBackupInitializer} returns this
 */
proto.contentservice.FromBackupInitializer.prototype.setCheckoutLocation = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional bool from_volume_snapshot = 2;
 * @return {boolean}
 */
proto.contentservice.FromBackupInitializer.prototype.getFromVolumeSnapshot = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};

/**
 * @param {boolean} value
 * @return {!proto.contentservice.FromBackupInitializer} returns this
 */
proto.contentservice.FromBackupInitializer.prototype.setFromVolumeSnapshot = function (value) {
    return jspb.Message.setProto3BooleanField(this, 2, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contentservice.GitStatus.repeatedFields_ = [3, 4, 5];

if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.contentservice.GitStatus.prototype.toObject = function (opt_includeInstance) {
        return proto.contentservice.GitStatus.toObject(opt_includeInstance, this);
    };

    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.contentservice.GitStatus} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.contentservice.GitStatus.toObject = function (includeInstance, msg) {
        var f,
            obj = {
                branch: jspb.Message.getFieldWithDefault(msg, 1, ""),
                latestCommit: jspb.Message.getFieldWithDefault(msg, 2, ""),
                uncommitedFilesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
                totalUncommitedFiles: jspb.Message.getFieldWithDefault(msg, 6, 0),
                untrackedFilesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
                totalUntrackedFiles: jspb.Message.getFieldWithDefault(msg, 7, 0),
                unpushedCommitsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
                totalUnpushedCommits: jspb.Message.getFieldWithDefault(msg, 8, 0),
            };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contentservice.GitStatus}
 */
proto.contentservice.GitStatus.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.contentservice.GitStatus();
    return proto.contentservice.GitStatus.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contentservice.GitStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contentservice.GitStatus}
 */
proto.contentservice.GitStatus.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setBranch(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLatestCommit(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addUncommitedFiles(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTotalUncommitedFiles(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.addUntrackedFiles(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTotalUntrackedFiles(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.addUnpushedCommits(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTotalUnpushedCommits(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contentservice.GitStatus.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.contentservice.GitStatus.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contentservice.GitStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contentservice.GitStatus.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getBranch();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getLatestCommit();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getUncommitedFilesList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getTotalUncommitedFiles();
    if (f !== 0) {
        writer.writeInt64(6, f);
    }
    f = message.getUntrackedFilesList();
    if (f.length > 0) {
        writer.writeRepeatedString(4, f);
    }
    f = message.getTotalUntrackedFiles();
    if (f !== 0) {
        writer.writeInt64(7, f);
    }
    f = message.getUnpushedCommitsList();
    if (f.length > 0) {
        writer.writeRepeatedString(5, f);
    }
    f = message.getTotalUnpushedCommits();
    if (f !== 0) {
        writer.writeInt64(8, f);
    }
};

/**
 * optional string branch = 1;
 * @return {string}
 */
proto.contentservice.GitStatus.prototype.getBranch = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setBranch = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string latest_commit = 2;
 * @return {string}
 */
proto.contentservice.GitStatus.prototype.getLatestCommit = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setLatestCommit = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * repeated string uncommited_files = 3;
 * @return {!Array<string>}
 */
proto.contentservice.GitStatus.prototype.getUncommitedFilesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setUncommitedFilesList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.addUncommitedFiles = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.clearUncommitedFilesList = function () {
    return this.setUncommitedFilesList([]);
};

/**
 * optional int64 total_uncommited_files = 6;
 * @return {number}
 */
proto.contentservice.GitStatus.prototype.getTotalUncommitedFiles = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setTotalUncommitedFiles = function (value) {
    return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * repeated string untracked_files = 4;
 * @return {!Array<string>}
 */
proto.contentservice.GitStatus.prototype.getUntrackedFilesList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setUntrackedFilesList = function (value) {
    return jspb.Message.setField(this, 4, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.addUntrackedFiles = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.clearUntrackedFilesList = function () {
    return this.setUntrackedFilesList([]);
};

/**
 * optional int64 total_untracked_files = 7;
 * @return {number}
 */
proto.contentservice.GitStatus.prototype.getTotalUntrackedFiles = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};

/**
 * @param {number} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setTotalUntrackedFiles = function (value) {
    return jspb.Message.setProto3IntField(this, 7, value);
};

/**
 * repeated string unpushed_commits = 5;
 * @return {!Array<string>}
 */
proto.contentservice.GitStatus.prototype.getUnpushedCommitsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setUnpushedCommitsList = function (value) {
    return jspb.Message.setField(this, 5, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.addUnpushedCommits = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.clearUnpushedCommitsList = function () {
    return this.setUnpushedCommitsList([]);
};

/**
 * optional int64 total_unpushed_commits = 8;
 * @return {number}
 */
proto.contentservice.GitStatus.prototype.getTotalUnpushedCommits = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};

/**
 * @param {number} value
 * @return {!proto.contentservice.GitStatus} returns this
 */
proto.contentservice.GitStatus.prototype.setTotalUnpushedCommits = function (value) {
    return jspb.Message.setProto3IntField(this, 8, value);
};

/**
 * @enum {number}
 */
proto.contentservice.CloneTargetMode = {
    REMOTE_HEAD: 0,
    REMOTE_COMMIT: 1,
    REMOTE_BRANCH: 2,
    LOCAL_BRANCH: 3,
};

/**
 * @enum {number}
 */
proto.contentservice.GitAuthMethod = {
    NO_AUTH: 0,
    BASIC_AUTH: 1,
    BASIC_AUTH_OTS: 2,
};

goog.object.extend(exports, proto.contentservice);
