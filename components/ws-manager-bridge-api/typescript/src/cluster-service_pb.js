/**
 * Copyright (c) 2021 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License-AGPL.txt in the project root for license information.
 */

// source: cluster-service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.workspacemanagerbridge.ClusterState', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.ClusterStatus', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.DeregisterRequest', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.DeregisterResponse', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.ListRequest', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.ListResponse', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.Preferability', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.RegisterRequest', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.RegisterResponse', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.RegistrationHints', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.TlsConfig', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.UpdateRequest', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.UpdateRequest.PropertyCase', null, global);
goog.exportSymbol('proto.workspacemanagerbridge.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.RegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.RegisterRequest.displayName = 'proto.workspacemanagerbridge.RegisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.RegisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.RegisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.RegisterResponse.displayName = 'proto.workspacemanagerbridge.RegisterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.TlsConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.TlsConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.TlsConfig.displayName = 'proto.workspacemanagerbridge.TlsConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.RegistrationHints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.RegistrationHints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.RegistrationHints.displayName = 'proto.workspacemanagerbridge.RegistrationHints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.ClusterStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.ClusterStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.ClusterStatus.displayName = 'proto.workspacemanagerbridge.ClusterStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_);
};
goog.inherits(proto.workspacemanagerbridge.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.UpdateRequest.displayName = 'proto.workspacemanagerbridge.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.UpdateResponse.displayName = 'proto.workspacemanagerbridge.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.DeregisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.DeregisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.DeregisterRequest.displayName = 'proto.workspacemanagerbridge.DeregisterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.DeregisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.DeregisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.DeregisterResponse.displayName = 'proto.workspacemanagerbridge.DeregisterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.workspacemanagerbridge.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.ListRequest.displayName = 'proto.workspacemanagerbridge.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.workspacemanagerbridge.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.workspacemanagerbridge.ListResponse.repeatedFields_, null);
};
goog.inherits(proto.workspacemanagerbridge.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.workspacemanagerbridge.ListResponse.displayName = 'proto.workspacemanagerbridge.ListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.RegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.RegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.RegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tls: (f = msg.getTls()) && proto.workspacemanagerbridge.TlsConfig.toObject(includeInstance, f),
    hints: (f = msg.getHints()) && proto.workspacemanagerbridge.RegistrationHints.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.RegisterRequest}
 */
proto.workspacemanagerbridge.RegisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.RegisterRequest;
  return proto.workspacemanagerbridge.RegisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.RegisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.RegisterRequest}
 */
proto.workspacemanagerbridge.RegisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = new proto.workspacemanagerbridge.TlsConfig;
      reader.readMessage(value,proto.workspacemanagerbridge.TlsConfig.deserializeBinaryFromReader);
      msg.setTls(value);
      break;
    case 4:
      var value = new proto.workspacemanagerbridge.RegistrationHints;
      reader.readMessage(value,proto.workspacemanagerbridge.RegistrationHints.deserializeBinaryFromReader);
      msg.setHints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.RegisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.RegisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.RegisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTls();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.workspacemanagerbridge.TlsConfig.serializeBinaryToWriter
    );
  }
  f = message.getHints();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.workspacemanagerbridge.RegistrationHints.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.RegisterRequest} returns this
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.RegisterRequest} returns this
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TlsConfig tls = 3;
 * @return {?proto.workspacemanagerbridge.TlsConfig}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.getTls = function() {
  return /** @type{?proto.workspacemanagerbridge.TlsConfig} */ (
    jspb.Message.getWrapperField(this, proto.workspacemanagerbridge.TlsConfig, 3));
};


/**
 * @param {?proto.workspacemanagerbridge.TlsConfig|undefined} value
 * @return {!proto.workspacemanagerbridge.RegisterRequest} returns this
*/
proto.workspacemanagerbridge.RegisterRequest.prototype.setTls = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workspacemanagerbridge.RegisterRequest} returns this
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.clearTls = function() {
  return this.setTls(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.hasTls = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RegistrationHints hints = 4;
 * @return {?proto.workspacemanagerbridge.RegistrationHints}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.getHints = function() {
  return /** @type{?proto.workspacemanagerbridge.RegistrationHints} */ (
    jspb.Message.getWrapperField(this, proto.workspacemanagerbridge.RegistrationHints, 4));
};


/**
 * @param {?proto.workspacemanagerbridge.RegistrationHints|undefined} value
 * @return {!proto.workspacemanagerbridge.RegisterRequest} returns this
*/
proto.workspacemanagerbridge.RegisterRequest.prototype.setHints = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.workspacemanagerbridge.RegisterRequest} returns this
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.clearHints = function() {
  return this.setHints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workspacemanagerbridge.RegisterRequest.prototype.hasHints = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.RegisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.RegisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.RegisterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.RegisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.RegisterResponse}
 */
proto.workspacemanagerbridge.RegisterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.RegisterResponse;
  return proto.workspacemanagerbridge.RegisterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.RegisterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.RegisterResponse}
 */
proto.workspacemanagerbridge.RegisterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.RegisterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.RegisterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.RegisterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.RegisterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.TlsConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.TlsConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.TlsConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.TlsConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    ca: jspb.Message.getFieldWithDefault(msg, 1, ""),
    crt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    key: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.TlsConfig}
 */
proto.workspacemanagerbridge.TlsConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.TlsConfig;
  return proto.workspacemanagerbridge.TlsConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.TlsConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.TlsConfig}
 */
proto.workspacemanagerbridge.TlsConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCa(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCrt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.TlsConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.TlsConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.TlsConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.TlsConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCa();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCrt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string ca = 1;
 * @return {string}
 */
proto.workspacemanagerbridge.TlsConfig.prototype.getCa = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.TlsConfig} returns this
 */
proto.workspacemanagerbridge.TlsConfig.prototype.setCa = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string crt = 2;
 * @return {string}
 */
proto.workspacemanagerbridge.TlsConfig.prototype.getCrt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.TlsConfig} returns this
 */
proto.workspacemanagerbridge.TlsConfig.prototype.setCrt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string key = 3;
 * @return {string}
 */
proto.workspacemanagerbridge.TlsConfig.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.TlsConfig} returns this
 */
proto.workspacemanagerbridge.TlsConfig.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.RegistrationHints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.RegistrationHints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.RegistrationHints.toObject = function(includeInstance, msg) {
  var f, obj = {
    perfereability: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cordoned: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    govern: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.RegistrationHints}
 */
proto.workspacemanagerbridge.RegistrationHints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.RegistrationHints;
  return proto.workspacemanagerbridge.RegistrationHints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.RegistrationHints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.RegistrationHints}
 */
proto.workspacemanagerbridge.RegistrationHints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.workspacemanagerbridge.Preferability} */ (reader.readEnum());
      msg.setPerfereability(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCordoned(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGovern(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.RegistrationHints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.RegistrationHints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.RegistrationHints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPerfereability();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCordoned();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getGovern();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional Preferability perfereability = 1;
 * @return {!proto.workspacemanagerbridge.Preferability}
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.getPerfereability = function() {
  return /** @type {!proto.workspacemanagerbridge.Preferability} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.workspacemanagerbridge.Preferability} value
 * @return {!proto.workspacemanagerbridge.RegistrationHints} returns this
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.setPerfereability = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bool cordoned = 2;
 * @return {boolean}
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.getCordoned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workspacemanagerbridge.RegistrationHints} returns this
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.setCordoned = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool govern = 3;
 * @return {boolean}
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.getGovern = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workspacemanagerbridge.RegistrationHints} returns this
 */
proto.workspacemanagerbridge.RegistrationHints.prototype.setGovern = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.ClusterStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.ClusterStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.ClusterStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: jspb.Message.getFieldWithDefault(msg, 3, 0),
    score: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxScore: jspb.Message.getFieldWithDefault(msg, 5, 0),
    governed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.ClusterStatus}
 */
proto.workspacemanagerbridge.ClusterStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.ClusterStatus;
  return proto.workspacemanagerbridge.ClusterStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.ClusterStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.ClusterStatus}
 */
proto.workspacemanagerbridge.ClusterStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {!proto.workspacemanagerbridge.ClusterState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxScore(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGoverned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.ClusterStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.ClusterStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.ClusterStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getMaxScore();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getGoverned();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.ClusterStatus} returns this
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.ClusterStatus} returns this
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ClusterState state = 3;
 * @return {!proto.workspacemanagerbridge.ClusterState}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.getState = function() {
  return /** @type {!proto.workspacemanagerbridge.ClusterState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.workspacemanagerbridge.ClusterState} value
 * @return {!proto.workspacemanagerbridge.ClusterStatus} returns this
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 score = 4;
 * @return {number}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.workspacemanagerbridge.ClusterStatus} returns this
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.setScore = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 max_score = 5;
 * @return {number}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.getMaxScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.workspacemanagerbridge.ClusterStatus} returns this
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.setMaxScore = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool governed = 6;
 * @return {boolean}
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.getGoverned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workspacemanagerbridge.ClusterStatus} returns this
 */
proto.workspacemanagerbridge.ClusterStatus.prototype.setGoverned = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.workspacemanagerbridge.UpdateRequest.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.workspacemanagerbridge.UpdateRequest.PropertyCase = {
  PROPERTY_NOT_SET: 0,
  SCORE: 2,
  MAX_SCORE: 3,
  CORDONED: 4
};

/**
 * @return {proto.workspacemanagerbridge.UpdateRequest.PropertyCase}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.getPropertyCase = function() {
  return /** @type {proto.workspacemanagerbridge.UpdateRequest.PropertyCase} */(jspb.Message.computeOneofCase(this, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    score: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxScore: jspb.Message.getFieldWithDefault(msg, 3, 0),
    cordoned: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.UpdateRequest}
 */
proto.workspacemanagerbridge.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.UpdateRequest;
  return proto.workspacemanagerbridge.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.UpdateRequest}
 */
proto.workspacemanagerbridge.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxScore(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCordoned(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.UpdateRequest} returns this
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 score = 2;
 * @return {number}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.workspacemanagerbridge.UpdateRequest} returns this
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.setScore = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workspacemanagerbridge.UpdateRequest} returns this
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.clearScore = function() {
  return jspb.Message.setOneofField(this, 2, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.hasScore = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 max_score = 3;
 * @return {number}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.getMaxScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.workspacemanagerbridge.UpdateRequest} returns this
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.setMaxScore = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workspacemanagerbridge.UpdateRequest} returns this
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.clearMaxScore = function() {
  return jspb.Message.setOneofField(this, 3, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.hasMaxScore = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool cordoned = 4;
 * @return {boolean}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.getCordoned = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.workspacemanagerbridge.UpdateRequest} returns this
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.setCordoned = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.workspacemanagerbridge.UpdateRequest} returns this
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.clearCordoned = function() {
  return jspb.Message.setOneofField(this, 4, proto.workspacemanagerbridge.UpdateRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.workspacemanagerbridge.UpdateRequest.prototype.hasCordoned = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.UpdateResponse}
 */
proto.workspacemanagerbridge.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.UpdateResponse;
  return proto.workspacemanagerbridge.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.UpdateResponse}
 */
proto.workspacemanagerbridge.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.DeregisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.DeregisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.DeregisterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.DeregisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.DeregisterRequest}
 */
proto.workspacemanagerbridge.DeregisterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.DeregisterRequest;
  return proto.workspacemanagerbridge.DeregisterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.DeregisterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.DeregisterRequest}
 */
proto.workspacemanagerbridge.DeregisterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.DeregisterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.DeregisterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.DeregisterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.DeregisterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.workspacemanagerbridge.DeregisterRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.workspacemanagerbridge.DeregisterRequest} returns this
 */
proto.workspacemanagerbridge.DeregisterRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.DeregisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.DeregisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.DeregisterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.DeregisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.DeregisterResponse}
 */
proto.workspacemanagerbridge.DeregisterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.DeregisterResponse;
  return proto.workspacemanagerbridge.DeregisterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.DeregisterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.DeregisterResponse}
 */
proto.workspacemanagerbridge.DeregisterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.DeregisterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.DeregisterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.DeregisterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.DeregisterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.ListRequest}
 */
proto.workspacemanagerbridge.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.ListRequest;
  return proto.workspacemanagerbridge.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.ListRequest}
 */
proto.workspacemanagerbridge.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.workspacemanagerbridge.ListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.workspacemanagerbridge.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.workspacemanagerbridge.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.workspacemanagerbridge.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusList: jspb.Message.toObjectList(msg.getStatusList(),
    proto.workspacemanagerbridge.ClusterStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.workspacemanagerbridge.ListResponse}
 */
proto.workspacemanagerbridge.ListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.workspacemanagerbridge.ListResponse;
  return proto.workspacemanagerbridge.ListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.workspacemanagerbridge.ListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.workspacemanagerbridge.ListResponse}
 */
proto.workspacemanagerbridge.ListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.workspacemanagerbridge.ClusterStatus;
      reader.readMessage(value,proto.workspacemanagerbridge.ClusterStatus.deserializeBinaryFromReader);
      msg.addStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.workspacemanagerbridge.ListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.workspacemanagerbridge.ListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.workspacemanagerbridge.ListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.workspacemanagerbridge.ListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.workspacemanagerbridge.ClusterStatus.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClusterStatus status = 1;
 * @return {!Array<!proto.workspacemanagerbridge.ClusterStatus>}
 */
proto.workspacemanagerbridge.ListResponse.prototype.getStatusList = function() {
  return /** @type{!Array<!proto.workspacemanagerbridge.ClusterStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.workspacemanagerbridge.ClusterStatus, 1));
};


/**
 * @param {!Array<!proto.workspacemanagerbridge.ClusterStatus>} value
 * @return {!proto.workspacemanagerbridge.ListResponse} returns this
*/
proto.workspacemanagerbridge.ListResponse.prototype.setStatusList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.workspacemanagerbridge.ClusterStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.workspacemanagerbridge.ClusterStatus}
 */
proto.workspacemanagerbridge.ListResponse.prototype.addStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.workspacemanagerbridge.ClusterStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.workspacemanagerbridge.ListResponse} returns this
 */
proto.workspacemanagerbridge.ListResponse.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * @enum {number}
 */
proto.workspacemanagerbridge.Preferability = {
  NONE: 0,
  PREFER: 1,
  DONTSCHEDULE: 2
};

/**
 * @enum {number}
 */
proto.workspacemanagerbridge.ClusterState = {
  UNKNOWN: 0,
  AVAILABLE: 1,
  CORDONED: 2,
  DRAINING: 3
};

goog.object.extend(exports, proto.workspacemanagerbridge);
