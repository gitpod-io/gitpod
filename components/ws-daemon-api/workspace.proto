syntax = "proto3";

package wsbs;

import "content-service-api/initializer.proto";

option go_package = "github.com/gitpod-io/gitpod/ws-daemon/api";

service InWorkspaceHelper {
    // BackupCanary can prepare workspace content backups. The canary is supposed to be triggered
    // when the workspace is about to shut down, e.g. using the PreStop hook of a Kubernetes container.
    //
    // Note that the request/response flow is inverted here, as it's the server (supervisor) which requests a backup
    // from the client (ws-daemon).
    rpc BackupCanary(stream BackupCanaryResponse) returns (stream BackupCanaryRequest) {}

    // PauseTheia can pause the Theia process and all its children. As long as the request stream
    // is held Theia will be paused.
    // This is a stop-the-world mechanism for preventing concurrent modification during backup.
    rpc PauseTheia(stream PauseTheiaRequest) returns (PauseTheiaResponse) {}

    rpc GitStatus(GitStatusRequest) returns (GitStatusResponse) {}

    // UidmapCanary can establish a uid mapping of a new user namespace spawned within the workspace.
    rpc UidmapCanary(stream UidmapCanaryResponse) returns (stream UidmapCanaryRequest) {}
}

message BackupCanaryRequest {
}
message BackupCanaryResponse {
    bool success = 2;
}

message PauseTheiaRequest {}
message PauseTheiaResponse {}

message GitStatusRequest {}
message GitStatusResponse {
    contentservice.GitStatus repo = 1;
}

message UidmapCanaryResponse {
    string message = 1;
    uint32 error_code = 2;
}
message UidmapCanaryRequest {
    message Mapping {
        uint32 container_id = 1;
        uint32 host_id = 2;
        uint32 size = 3;
    }

    int64 pid = 1;
    bool gid = 2;
    repeated Mapping mapping = 3;
}
