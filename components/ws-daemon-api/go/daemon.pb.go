// Copyright (c) 2020 TypeFox GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: daemon.proto

package api

import (
	context "context"
	fmt "fmt"
	api "github.com/gitpod-io/gitpod/content-service/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// WorkspaceContentState describes the availability and reliability of the workspace content
type WorkspaceContentState int32

const (
	// NONE means that there currently is no workspace content and no work is underway to change that.
	WorkspaceContentState_NONE WorkspaceContentState = 0
	// SETTING_UP indicates that the workspace content is currently being produced/checked out/unarchived and is
	// very likely to change. In this state one must not modify or rely on the workspace content.
	WorkspaceContentState_SETTING_UP WorkspaceContentState = 1
	// AVAILABLE indicates that the workspace content is fully present and ready for use.
	WorkspaceContentState_AVAILABLE WorkspaceContentState = 2
	// WRAPPING_UP means that the workspace is being torn down, i.e. a final backup is being produced and the content
	// is deleted locally. In this state one must not modify or rely on the workspace content.
	WorkspaceContentState_WRAPPING_UP WorkspaceContentState = 3
)

var WorkspaceContentState_name = map[int32]string{
	0: "NONE",
	1: "SETTING_UP",
	2: "AVAILABLE",
	3: "WRAPPING_UP",
}

var WorkspaceContentState_value = map[string]int32{
	"NONE":        0,
	"SETTING_UP":  1,
	"AVAILABLE":   2,
	"WRAPPING_UP": 3,
}

func (x WorkspaceContentState) String() string {
	return proto.EnumName(WorkspaceContentState_name, int32(x))
}

func (WorkspaceContentState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{0}
}

// InitWorkspaceRequest intialises a new workspace folder in the working area
type InitWorkspaceRequest struct {
	// ID is a unique identifier of this workspace. No other workspace with the same name must exist in the realm of this daemon
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata is data associated with this workspace that's required for other parts of Gitpod to function
	Metadata *WorkspaceMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Initializer specifies how the workspace is to be initialized
	Initializer *api.WorkspaceInitializer `protobuf:"bytes,3,opt,name=initializer,proto3" json:"initializer,omitempty"`
	// full_workspace_backup means we ignore the initializer and wait for a workspace pod with the given instance ID to
	// appear at our local containerd.
	FullWorkspaceBackup bool `protobuf:"varint,4,opt,name=full_workspace_backup,json=fullWorkspaceBackup,proto3" json:"full_workspace_backup,omitempty"`
	// content_manifest describes the layers that comprise the workspace image content.
	// This manifest is not used to actually download content, but to produce a new manifest for snapshots and backups.
	// This field is ignored if full_workspace_backup is false.
	ContentManifest      []byte   `protobuf:"bytes,5,opt,name=content_manifest,json=contentManifest,proto3" json:"content_manifest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitWorkspaceRequest) Reset()         { *m = InitWorkspaceRequest{} }
func (m *InitWorkspaceRequest) String() string { return proto.CompactTextString(m) }
func (*InitWorkspaceRequest) ProtoMessage()    {}
func (*InitWorkspaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{0}
}

func (m *InitWorkspaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitWorkspaceRequest.Unmarshal(m, b)
}
func (m *InitWorkspaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitWorkspaceRequest.Marshal(b, m, deterministic)
}
func (m *InitWorkspaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitWorkspaceRequest.Merge(m, src)
}
func (m *InitWorkspaceRequest) XXX_Size() int {
	return xxx_messageInfo_InitWorkspaceRequest.Size(m)
}
func (m *InitWorkspaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitWorkspaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitWorkspaceRequest proto.InternalMessageInfo

func (m *InitWorkspaceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InitWorkspaceRequest) GetMetadata() *WorkspaceMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *InitWorkspaceRequest) GetInitializer() *api.WorkspaceInitializer {
	if m != nil {
		return m.Initializer
	}
	return nil
}

func (m *InitWorkspaceRequest) GetFullWorkspaceBackup() bool {
	if m != nil {
		return m.FullWorkspaceBackup
	}
	return false
}

func (m *InitWorkspaceRequest) GetContentManifest() []byte {
	if m != nil {
		return m.ContentManifest
	}
	return nil
}

// WorkspaceMetadata is data associated with a workspace that's required for other parts of the system to function
type WorkspaceMetadata struct {
	// owner is the ID of the Gitpod user to whom we'll bill this workspace and who we consider responsible for its content
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// meta_id is the workspace ID of this currently running workspace instance on the "meta pool" side
	MetaId               string   `protobuf:"bytes,2,opt,name=meta_id,json=metaId,proto3" json:"meta_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkspaceMetadata) Reset()         { *m = WorkspaceMetadata{} }
func (m *WorkspaceMetadata) String() string { return proto.CompactTextString(m) }
func (*WorkspaceMetadata) ProtoMessage()    {}
func (*WorkspaceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{1}
}

func (m *WorkspaceMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkspaceMetadata.Unmarshal(m, b)
}
func (m *WorkspaceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkspaceMetadata.Marshal(b, m, deterministic)
}
func (m *WorkspaceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkspaceMetadata.Merge(m, src)
}
func (m *WorkspaceMetadata) XXX_Size() int {
	return xxx_messageInfo_WorkspaceMetadata.Size(m)
}
func (m *WorkspaceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkspaceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_WorkspaceMetadata proto.InternalMessageInfo

func (m *WorkspaceMetadata) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *WorkspaceMetadata) GetMetaId() string {
	if m != nil {
		return m.MetaId
	}
	return ""
}

type InitWorkspaceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitWorkspaceResponse) Reset()         { *m = InitWorkspaceResponse{} }
func (m *InitWorkspaceResponse) String() string { return proto.CompactTextString(m) }
func (*InitWorkspaceResponse) ProtoMessage()    {}
func (*InitWorkspaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{2}
}

func (m *InitWorkspaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitWorkspaceResponse.Unmarshal(m, b)
}
func (m *InitWorkspaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitWorkspaceResponse.Marshal(b, m, deterministic)
}
func (m *InitWorkspaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitWorkspaceResponse.Merge(m, src)
}
func (m *InitWorkspaceResponse) XXX_Size() int {
	return xxx_messageInfo_InitWorkspaceResponse.Size(m)
}
func (m *InitWorkspaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitWorkspaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitWorkspaceResponse proto.InternalMessageInfo

// WaitForInitRequest waits for a workspace to be initialized
type WaitForInitRequest struct {
	// ID is a unique identifier of the workspace
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitForInitRequest) Reset()         { *m = WaitForInitRequest{} }
func (m *WaitForInitRequest) String() string { return proto.CompactTextString(m) }
func (*WaitForInitRequest) ProtoMessage()    {}
func (*WaitForInitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{3}
}

func (m *WaitForInitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitForInitRequest.Unmarshal(m, b)
}
func (m *WaitForInitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitForInitRequest.Marshal(b, m, deterministic)
}
func (m *WaitForInitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitForInitRequest.Merge(m, src)
}
func (m *WaitForInitRequest) XXX_Size() int {
	return xxx_messageInfo_WaitForInitRequest.Size(m)
}
func (m *WaitForInitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitForInitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitForInitRequest proto.InternalMessageInfo

func (m *WaitForInitRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type WaitForInitResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitForInitResponse) Reset()         { *m = WaitForInitResponse{} }
func (m *WaitForInitResponse) String() string { return proto.CompactTextString(m) }
func (*WaitForInitResponse) ProtoMessage()    {}
func (*WaitForInitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{4}
}

func (m *WaitForInitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitForInitResponse.Unmarshal(m, b)
}
func (m *WaitForInitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitForInitResponse.Marshal(b, m, deterministic)
}
func (m *WaitForInitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitForInitResponse.Merge(m, src)
}
func (m *WaitForInitResponse) XXX_Size() int {
	return xxx_messageInfo_WaitForInitResponse.Size(m)
}
func (m *WaitForInitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitForInitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WaitForInitResponse proto.InternalMessageInfo

// TakeSnapshotRequest creates a backup/snapshot of a workspace
type TakeSnapshotRequest struct {
	// ID is the identifier of the workspace of which we want to create a snapshot of
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeSnapshotRequest) Reset()         { *m = TakeSnapshotRequest{} }
func (m *TakeSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*TakeSnapshotRequest) ProtoMessage()    {}
func (*TakeSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{5}
}

func (m *TakeSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeSnapshotRequest.Unmarshal(m, b)
}
func (m *TakeSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *TakeSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeSnapshotRequest.Merge(m, src)
}
func (m *TakeSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_TakeSnapshotRequest.Size(m)
}
func (m *TakeSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TakeSnapshotRequest proto.InternalMessageInfo

func (m *TakeSnapshotRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type TakeSnapshotResponse struct {
	// url is the name of the resulting snapshot
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeSnapshotResponse) Reset()         { *m = TakeSnapshotResponse{} }
func (m *TakeSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*TakeSnapshotResponse) ProtoMessage()    {}
func (*TakeSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{6}
}

func (m *TakeSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeSnapshotResponse.Unmarshal(m, b)
}
func (m *TakeSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *TakeSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeSnapshotResponse.Merge(m, src)
}
func (m *TakeSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_TakeSnapshotResponse.Size(m)
}
func (m *TakeSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TakeSnapshotResponse proto.InternalMessageInfo

func (m *TakeSnapshotResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type DisposeWorkspaceRequest struct {
	// ID is a unique identifier of the workspace to dispose of
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Backup triggers a final backup prior to disposal
	Backup               bool     `protobuf:"varint,2,opt,name=backup,proto3" json:"backup,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisposeWorkspaceRequest) Reset()         { *m = DisposeWorkspaceRequest{} }
func (m *DisposeWorkspaceRequest) String() string { return proto.CompactTextString(m) }
func (*DisposeWorkspaceRequest) ProtoMessage()    {}
func (*DisposeWorkspaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{7}
}

func (m *DisposeWorkspaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisposeWorkspaceRequest.Unmarshal(m, b)
}
func (m *DisposeWorkspaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisposeWorkspaceRequest.Marshal(b, m, deterministic)
}
func (m *DisposeWorkspaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisposeWorkspaceRequest.Merge(m, src)
}
func (m *DisposeWorkspaceRequest) XXX_Size() int {
	return xxx_messageInfo_DisposeWorkspaceRequest.Size(m)
}
func (m *DisposeWorkspaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisposeWorkspaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisposeWorkspaceRequest proto.InternalMessageInfo

func (m *DisposeWorkspaceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DisposeWorkspaceRequest) GetBackup() bool {
	if m != nil {
		return m.Backup
	}
	return false
}

type DisposeWorkspaceResponse struct {
	// git_status is the current state of the Git repo in this workspace prior to disposal.
	// If the workspace has no Git repo at its checkout location, this is nil.
	GitStatus            *api.GitStatus `protobuf:"bytes,1,opt,name=git_status,json=gitStatus,proto3" json:"git_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DisposeWorkspaceResponse) Reset()         { *m = DisposeWorkspaceResponse{} }
func (m *DisposeWorkspaceResponse) String() string { return proto.CompactTextString(m) }
func (*DisposeWorkspaceResponse) ProtoMessage()    {}
func (*DisposeWorkspaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3ec90cbc4aa12fc6, []int{8}
}

func (m *DisposeWorkspaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisposeWorkspaceResponse.Unmarshal(m, b)
}
func (m *DisposeWorkspaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisposeWorkspaceResponse.Marshal(b, m, deterministic)
}
func (m *DisposeWorkspaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisposeWorkspaceResponse.Merge(m, src)
}
func (m *DisposeWorkspaceResponse) XXX_Size() int {
	return xxx_messageInfo_DisposeWorkspaceResponse.Size(m)
}
func (m *DisposeWorkspaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisposeWorkspaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisposeWorkspaceResponse proto.InternalMessageInfo

func (m *DisposeWorkspaceResponse) GetGitStatus() *api.GitStatus {
	if m != nil {
		return m.GitStatus
	}
	return nil
}

func init() {
	proto.RegisterEnum("wsdaemon.WorkspaceContentState", WorkspaceContentState_name, WorkspaceContentState_value)
	proto.RegisterType((*InitWorkspaceRequest)(nil), "wsdaemon.InitWorkspaceRequest")
	proto.RegisterType((*WorkspaceMetadata)(nil), "wsdaemon.WorkspaceMetadata")
	proto.RegisterType((*InitWorkspaceResponse)(nil), "wsdaemon.InitWorkspaceResponse")
	proto.RegisterType((*WaitForInitRequest)(nil), "wsdaemon.WaitForInitRequest")
	proto.RegisterType((*WaitForInitResponse)(nil), "wsdaemon.WaitForInitResponse")
	proto.RegisterType((*TakeSnapshotRequest)(nil), "wsdaemon.TakeSnapshotRequest")
	proto.RegisterType((*TakeSnapshotResponse)(nil), "wsdaemon.TakeSnapshotResponse")
	proto.RegisterType((*DisposeWorkspaceRequest)(nil), "wsdaemon.DisposeWorkspaceRequest")
	proto.RegisterType((*DisposeWorkspaceResponse)(nil), "wsdaemon.DisposeWorkspaceResponse")
}

func init() {
	proto.RegisterFile("daemon.proto", fileDescriptor_3ec90cbc4aa12fc6)
}

var fileDescriptor_3ec90cbc4aa12fc6 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0x5d, 0x73, 0xd2, 0x4c,
	0x14, 0x6e, 0xd2, 0x8f, 0x17, 0x0e, 0xfd, 0xc8, 0xbb, 0x2d, 0x12, 0x51, 0x2b, 0x66, 0xda, 0x19,
	0xaa, 0x03, 0xcc, 0xe0, 0x85, 0xde, 0x82, 0xd2, 0x0e, 0x33, 0x94, 0x62, 0x40, 0x99, 0xd1, 0x8b,
	0xcc, 0x42, 0xb6, 0x74, 0x07, 0xc8, 0xc6, 0xec, 0x46, 0x66, 0xfc, 0x01, 0xfe, 0x57, 0xff, 0x85,
	0x93, 0x64, 0x09, 0x01, 0x1a, 0xbd, 0xdb, 0x93, 0xe7, 0xe3, 0x6c, 0xce, 0x73, 0x12, 0x38, 0xb4,
	0x31, 0x99, 0x33, 0xa7, 0xea, 0x7a, 0x4c, 0x30, 0x94, 0x59, 0xf0, 0xa8, 0x2e, 0x5e, 0x8e, 0x99,
	0x23, 0x88, 0x23, 0x2a, 0x9c, 0x78, 0x3f, 0xe8, 0x98, 0x54, 0xb0, 0x4b, 0x6b, 0xd4, 0xa1, 0x82,
	0xe2, 0x19, 0xfd, 0x49, 0xbc, 0x48, 0x60, 0xfc, 0x52, 0xe1, 0xac, 0xed, 0x50, 0x31, 0x64, 0xde,
	0x94, 0xbb, 0x78, 0x4c, 0x4c, 0xf2, 0xdd, 0x27, 0x5c, 0xa0, 0x63, 0x50, 0xa9, 0xad, 0x2b, 0x25,
	0xa5, 0x9c, 0x35, 0x55, 0x6a, 0xa3, 0x77, 0x90, 0x99, 0x13, 0x81, 0x6d, 0x2c, 0xb0, 0xae, 0x96,
	0x94, 0x72, 0xae, 0xfe, 0xac, 0xba, 0x6c, 0x56, 0x8d, 0xd5, 0xb7, 0x92, 0x62, 0xc6, 0x64, 0x74,
	0x0d, 0xb9, 0x44, 0x5b, 0x7d, 0x37, 0xd4, 0x5e, 0x54, 0xe5, 0xf5, 0xe4, 0xed, 0x56, 0x0e, 0xed,
	0x15, 0xd7, 0x4c, 0x0a, 0x51, 0x1d, 0xf2, 0xf7, 0xfe, 0x6c, 0x66, 0x2d, 0x96, 0x4c, 0x6b, 0x84,
	0xc7, 0x53, 0xdf, 0xd5, 0xf7, 0x4a, 0x4a, 0x39, 0x63, 0x9e, 0x06, 0x60, 0xec, 0xd2, 0x0c, 0x21,
	0x74, 0x05, 0x9a, 0xec, 0x63, 0xcd, 0xb1, 0x43, 0xef, 0x09, 0x17, 0xfa, 0x7e, 0x49, 0x29, 0x1f,
	0x9a, 0x27, 0xf2, 0xf9, 0xad, 0x7c, 0x6c, 0x34, 0xe1, 0xff, 0xad, 0xb7, 0x40, 0x67, 0xb0, 0xcf,
	0x16, 0x0e, 0xf1, 0xe4, 0x1c, 0xa2, 0x02, 0x15, 0xe0, 0xbf, 0xe0, 0xed, 0x2c, 0x6a, 0x87, 0x93,
	0xc8, 0x9a, 0x07, 0x41, 0xd9, 0xb6, 0x8d, 0x02, 0xe4, 0x37, 0x66, 0xc9, 0x5d, 0xe6, 0x70, 0x62,
	0x5c, 0x00, 0x1a, 0x62, 0x2a, 0xae, 0x99, 0x17, 0xe0, 0x29, 0x23, 0x36, 0xf2, 0x70, 0xba, 0xc6,
	0x92, 0xe2, 0x4b, 0x38, 0x1d, 0xe0, 0x29, 0xe9, 0x3b, 0xd8, 0xe5, 0x0f, 0x2c, 0x55, 0x5d, 0x86,
	0xb3, 0x75, 0x5a, 0x24, 0x47, 0x1a, 0xec, 0xfa, 0xde, 0x4c, 0x12, 0x83, 0xa3, 0xd1, 0x80, 0xc2,
	0x47, 0xca, 0x5d, 0xc6, 0xc9, 0x3f, 0x53, 0x7f, 0x02, 0x07, 0x72, 0xca, 0x6a, 0x38, 0x65, 0x59,
	0x19, 0x03, 0xd0, 0xb7, 0x2d, 0x64, 0xc3, 0xf7, 0x00, 0x13, 0x2a, 0x2c, 0x2e, 0xb0, 0xf0, 0x79,
	0xe8, 0x95, 0xab, 0x3f, 0xdd, 0xcc, 0xfb, 0x86, 0x8a, 0x7e, 0x48, 0x30, 0xb3, 0x93, 0xe5, 0xf1,
	0xf5, 0x27, 0xc8, 0xc7, 0x76, 0x1f, 0x22, 0x7e, 0x80, 0x10, 0x94, 0x81, 0xbd, 0xee, 0x5d, 0xb7,
	0xa5, 0xed, 0xa0, 0x63, 0x80, 0x7e, 0x6b, 0x30, 0x68, 0x77, 0x6f, 0xac, 0xcf, 0x3d, 0x4d, 0x41,
	0x47, 0x90, 0x6d, 0x7c, 0x69, 0xb4, 0x3b, 0x8d, 0x66, 0xa7, 0xa5, 0xa9, 0xe8, 0x04, 0x72, 0x43,
	0xb3, 0xd1, 0xeb, 0x49, 0x7c, 0xb7, 0xfe, 0x5b, 0x85, 0xc2, 0x96, 0x67, 0x74, 0x07, 0x64, 0xc2,
	0xd1, 0x5a, 0x5c, 0xe8, 0x7c, 0xb5, 0xd1, 0x8f, 0x7d, 0x13, 0xc5, 0x97, 0xa9, 0xb8, 0x8c, 0x6a,
	0x07, 0x75, 0x20, 0x97, 0xc8, 0x10, 0x3d, 0x4f, 0x7c, 0x23, 0x5b, 0x0b, 0x50, 0x7c, 0x91, 0x82,
	0xc6, 0x6e, 0x77, 0x70, 0x98, 0xcc, 0x14, 0x25, 0x04, 0x8f, 0xac, 0x44, 0xf1, 0x3c, 0x0d, 0x8e,
	0x0d, 0xbf, 0x81, 0xb6, 0x99, 0x1b, 0x7a, 0xb5, 0x52, 0xa5, 0xac, 0x45, 0xd1, 0xf8, 0x1b, 0x65,
	0x69, 0xde, 0x7c, 0xf3, 0xf5, 0x6a, 0x42, 0xc5, 0x83, 0x3f, 0xaa, 0x8e, 0xd9, 0xbc, 0x36, 0xa1,
	0xc2, 0x65, 0x76, 0x85, 0x32, 0x79, 0xaa, 0x2d, 0x78, 0x25, 0xf2, 0xa8, 0x61, 0x97, 0x8e, 0x0e,
	0xc2, 0xff, 0xcf, 0xdb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xcf, 0xe8, 0x0b, 0xd6, 0xc0, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorkspaceContentServiceClient is the client API for WorkspaceContentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkspaceContentServiceClient interface {
	// initWorkspace intialises a new workspace folder in the working area
	InitWorkspace(ctx context.Context, in *InitWorkspaceRequest, opts ...grpc.CallOption) (*InitWorkspaceResponse, error)
	// WaitForInit waits until a workspace is fully initialized.
	// If the workspace is already initialized, this function returns immediately.
	// If there is no initialization is going on, an error is returned.
	WaitForInit(ctx context.Context, in *WaitForInitRequest, opts ...grpc.CallOption) (*WaitForInitResponse, error)
	// TakeSnapshot creates a backup/snapshot of a workspace
	TakeSnapshot(ctx context.Context, in *TakeSnapshotRequest, opts ...grpc.CallOption) (*TakeSnapshotResponse, error)
	// disposeWorkspace cleans up a workspace, possibly after taking a final backup
	DisposeWorkspace(ctx context.Context, in *DisposeWorkspaceRequest, opts ...grpc.CallOption) (*DisposeWorkspaceResponse, error)
}

type workspaceContentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkspaceContentServiceClient(cc grpc.ClientConnInterface) WorkspaceContentServiceClient {
	return &workspaceContentServiceClient{cc}
}

func (c *workspaceContentServiceClient) InitWorkspace(ctx context.Context, in *InitWorkspaceRequest, opts ...grpc.CallOption) (*InitWorkspaceResponse, error) {
	out := new(InitWorkspaceResponse)
	err := c.cc.Invoke(ctx, "/wsdaemon.WorkspaceContentService/InitWorkspace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspaceContentServiceClient) WaitForInit(ctx context.Context, in *WaitForInitRequest, opts ...grpc.CallOption) (*WaitForInitResponse, error) {
	out := new(WaitForInitResponse)
	err := c.cc.Invoke(ctx, "/wsdaemon.WorkspaceContentService/WaitForInit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspaceContentServiceClient) TakeSnapshot(ctx context.Context, in *TakeSnapshotRequest, opts ...grpc.CallOption) (*TakeSnapshotResponse, error) {
	out := new(TakeSnapshotResponse)
	err := c.cc.Invoke(ctx, "/wsdaemon.WorkspaceContentService/TakeSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workspaceContentServiceClient) DisposeWorkspace(ctx context.Context, in *DisposeWorkspaceRequest, opts ...grpc.CallOption) (*DisposeWorkspaceResponse, error) {
	out := new(DisposeWorkspaceResponse)
	err := c.cc.Invoke(ctx, "/wsdaemon.WorkspaceContentService/DisposeWorkspace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkspaceContentServiceServer is the server API for WorkspaceContentService service.
type WorkspaceContentServiceServer interface {
	// initWorkspace intialises a new workspace folder in the working area
	InitWorkspace(context.Context, *InitWorkspaceRequest) (*InitWorkspaceResponse, error)
	// WaitForInit waits until a workspace is fully initialized.
	// If the workspace is already initialized, this function returns immediately.
	// If there is no initialization is going on, an error is returned.
	WaitForInit(context.Context, *WaitForInitRequest) (*WaitForInitResponse, error)
	// TakeSnapshot creates a backup/snapshot of a workspace
	TakeSnapshot(context.Context, *TakeSnapshotRequest) (*TakeSnapshotResponse, error)
	// disposeWorkspace cleans up a workspace, possibly after taking a final backup
	DisposeWorkspace(context.Context, *DisposeWorkspaceRequest) (*DisposeWorkspaceResponse, error)
}

// UnimplementedWorkspaceContentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkspaceContentServiceServer struct {
}

func (*UnimplementedWorkspaceContentServiceServer) InitWorkspace(ctx context.Context, req *InitWorkspaceRequest) (*InitWorkspaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitWorkspace not implemented")
}
func (*UnimplementedWorkspaceContentServiceServer) WaitForInit(ctx context.Context, req *WaitForInitRequest) (*WaitForInitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WaitForInit not implemented")
}
func (*UnimplementedWorkspaceContentServiceServer) TakeSnapshot(ctx context.Context, req *TakeSnapshotRequest) (*TakeSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TakeSnapshot not implemented")
}
func (*UnimplementedWorkspaceContentServiceServer) DisposeWorkspace(ctx context.Context, req *DisposeWorkspaceRequest) (*DisposeWorkspaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DisposeWorkspace not implemented")
}

func RegisterWorkspaceContentServiceServer(s *grpc.Server, srv WorkspaceContentServiceServer) {
	s.RegisterService(&_WorkspaceContentService_serviceDesc, srv)
}

func _WorkspaceContentService_InitWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceContentServiceServer).InitWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wsdaemon.WorkspaceContentService/InitWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceContentServiceServer).InitWorkspace(ctx, req.(*InitWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspaceContentService_WaitForInit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitForInitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceContentServiceServer).WaitForInit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wsdaemon.WorkspaceContentService/WaitForInit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceContentServiceServer).WaitForInit(ctx, req.(*WaitForInitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspaceContentService_TakeSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakeSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceContentServiceServer).TakeSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wsdaemon.WorkspaceContentService/TakeSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceContentServiceServer).TakeSnapshot(ctx, req.(*TakeSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkspaceContentService_DisposeWorkspace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisposeWorkspaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkspaceContentServiceServer).DisposeWorkspace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wsdaemon.WorkspaceContentService/DisposeWorkspace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkspaceContentServiceServer).DisposeWorkspace(ctx, req.(*DisposeWorkspaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkspaceContentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wsdaemon.WorkspaceContentService",
	HandlerType: (*WorkspaceContentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitWorkspace",
			Handler:    _WorkspaceContentService_InitWorkspace_Handler,
		},
		{
			MethodName: "WaitForInit",
			Handler:    _WorkspaceContentService_WaitForInit_Handler,
		},
		{
			MethodName: "TakeSnapshot",
			Handler:    _WorkspaceContentService_TakeSnapshot_Handler,
		},
		{
			MethodName: "DisposeWorkspace",
			Handler:    _WorkspaceContentService_DisposeWorkspace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "daemon.proto",
}
