syntax = "proto3";

package gitpod.experimental.v1;

option go_package = "github.com/gitpod-io/gitpod/components/public-api/go/experimental/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

// PersonalAccessToken represents details of an access token for personal use.
message PersonalAccessToken {
    // id is the unique identifier of this token
    // Read only.
    string id = 1;

    // value is the secret value of the token
    // The value property is only populated when the PersonalAccessToken is first created, and never again.
    // If you you want to compare your existing token, use the hash property
    // Read only.
    string value = 2;

    // hash is the SHA-512 hash of the token value
    // You can use the hash to compare a token you hold against the one we keep on record by doing `echo -n $TOKEN | sha256sum`.
    // Read only.
    string hash = 3;

    // name is the name of the token for humans, set by the user
    string name = 4;

    // description is the description of the token set by the user
    string description = 5;

    // expiration_time is the time when the token expires
    // Read only.
    google.protobuf.Timestamp expiration_time = 6;

    // scopes are the permission scopes attached to this token.
    // By default, no scopes are attached and therefore no access is granted to this token.
    // Specifying '*' grants all permissions the owner of the token has.
    repeated string scopes = 7;

    // created_time is the time when the token was first created.
    google.protobuf.Timestamp created_at = 8;
}

service TokensService {

    // CreatePersonalAccessTokenRequest creates a new token.
    rpc CreatePersonalAccessToken(CreatePersonalAccessTokenRequest) returns (CreatePersonalAccessTokenResponse) {}

    // ListPersonalAccessTokens returns token by ID.
    rpc GetPersonalAccessToken(GetPersonalAccessTokenRequest) returns (GetPersonalAccessTokenResponse) {}

    // ListPersonalAccessTokens returns a list of tokens.
    rpc ListPersonalAccessTokens(ListPersonalAccessTokensRequest) returns (ListPersonalAccessTokensResponse) {}

    // RegeneratePersonalAccessToken generates a new token and replaces the previous one.
    rpc RegeneratePersonalAccessToken(RegeneratePersonalAccessTokenRequest) returns (RegeneratePersonalAccessTokenResponse) {}

    // UpdatePersonalAccessToken updates writable properties of a PersonalAccessToken.
    rpc UpdatePersonalAccessToken(UpdatePersonalAccessTokenRequest) returns (UpdatePersonalAccessTokenResponse) {}

    // DeletePersonalAccessToken removes token by ID.
    rpc DeletePersonalAccessToken(DeletePersonalAccessTokenRequest) returns (DeletePersonalAccessTokenResponse) {}
}

message CreatePersonalAccessTokenRequest {
    PersonalAccessToken token = 1;
}

message CreatePersonalAccessTokenResponse {
    PersonalAccessToken token = 1;
}

message GetPersonalAccessTokenRequest {
    string id = 1;
}

message GetPersonalAccessTokenResponse {
    PersonalAccessToken token = 1;
}

message ListPersonalAccessTokensRequest {
}

message ListPersonalAccessTokensResponse {
    repeated PersonalAccessToken tokens = 1;
}

message RegeneratePersonalAccessTokenRequest {
    // expiration time is the time when the new token should expire
    google.protobuf.Timestamp expiration_time = 1;
}

message RegeneratePersonalAccessTokenResponse {
    PersonalAccessToken token = 1;
}

message UpdatePersonalAccessTokenRequest {
    PersonalAccessToken token = 1;
    google.protobuf.FieldMask update_mask = 2;
}

message UpdatePersonalAccessTokenResponse {
    PersonalAccessToken token = 1;
}

message DeletePersonalAccessTokenRequest {
    string id = 1;
}

message DeletePersonalAccessTokenResponse {
}
