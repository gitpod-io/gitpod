syntax = "proto3";

package gitpod.v1;

import "google/protobuf/timestamp.proto";
import "gitpod/v1/pagination.proto";

option go_package = "github.com/gitpod-io/gitpod/components/public-api/go/v1";

service SCMService {
    rpc GetSCMToken(GetSCMTokenRequest) returns (GetSCMTokenResponse) {}
    rpc GuessTokenScopes(GuessTokenScopesRequest) returns (GuessTokenScopesResponse) {}
    rpc SearchRepositories(SearchRepositoriesRequest) returns (SearchRepositoriesResponse) {}
    rpc ListSuggestedRepositories(ListSuggestedRepositoriesRequest) returns (ListSuggestedRepositoriesResponse) {}
}

message GetSCMTokenRequest {
    string host = 1;
}
message GetSCMTokenResponse {
    SCMToken token = 1;
}

message GuessTokenScopesRequest {
    string host = 1;
    string repo_url = 2;
    string git_command = 3;
}
message GuessTokenScopesResponse {
    repeated string scopes = 1;
    string message = 2;
}

message SearchRepositoriesRequest {
    string search_string = 1;
    int32 limit = 2;
}
message SearchRepositoriesResponse {
    repeated SuggestedRepository repositories = 1;
}

message ListSuggestedRepositoriesRequest {
    PaginationRequest pagination = 1;

    string organization_id = 2;
}
message ListSuggestedRepositoriesResponse {
    PaginationResponse pagination = 1;

    repeated SuggestedRepository repositories = 2;
}

message SCMToken {
    string username = 1;
    string value = 2;
    string id_token = 3;
    string refresh_token = 4;
    repeated string scopes = 5;
    google.protobuf.Timestamp update_date = 6;
    google.protobuf.Timestamp expiry_date = 7;
}

message SuggestedRepository {
    string url = 1;
    string repo_name = 2;
    string configuration_id = 3;
    string configuration_name = 4;
}

message Author {
    string name = 1;
    string avatar_url = 2;
}

message Commit {
    string message = 1;
    Author author = 2;
    google.protobuf.Timestamp author_date = 3;
    string sha = 4;
}
