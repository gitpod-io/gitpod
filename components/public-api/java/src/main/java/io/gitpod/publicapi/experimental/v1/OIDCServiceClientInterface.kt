// Copyright (c) 2024 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: gitpod/experimental/v1/oidc.proto
//
package io.gitpod.publicapi.experimental.v1

import com.connectrpc.Headers
import com.connectrpc.ResponseMessage

public interface OIDCServiceClientInterface {
  /**
   *  Creates a new OIDC client configuration.
   */
  public suspend fun createClientConfig(request: Oidc.CreateClientConfigRequest, headers: Headers =
      emptyMap()): ResponseMessage<Oidc.CreateClientConfigResponse>

  /**
   *  Retrieves an OIDC client configuration by ID.
   */
  public suspend fun getClientConfig(request: Oidc.GetClientConfigRequest, headers: Headers =
      emptyMap()): ResponseMessage<Oidc.GetClientConfigResponse>

  /**
   *  Lists OIDC client configurations.
   */
  public suspend fun listClientConfigs(request: Oidc.ListClientConfigsRequest, headers: Headers =
      emptyMap()): ResponseMessage<Oidc.ListClientConfigsResponse>

  /**
   *  Updates modifiable properties of an existing OIDC client configuration.
   */
  public suspend fun updateClientConfig(request: Oidc.UpdateClientConfigRequest, headers: Headers =
      emptyMap()): ResponseMessage<Oidc.UpdateClientConfigResponse>

  /**
   *  Removes an OIDC client configuration by ID.
   */
  public suspend fun deleteClientConfig(request: Oidc.DeleteClientConfigRequest, headers: Headers =
      emptyMap()): ResponseMessage<Oidc.DeleteClientConfigResponse>

  /**
   *  Activates an OIDC client configuration by ID.
   */
  public suspend fun setClientConfigActivation(request: Oidc.SetClientConfigActivationRequest,
      headers: Headers = emptyMap()): ResponseMessage<Oidc.SetClientConfigActivationResponse>
}
