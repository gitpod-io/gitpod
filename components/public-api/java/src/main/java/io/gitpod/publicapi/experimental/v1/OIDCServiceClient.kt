// Copyright (c) 2024 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: gitpod/experimental/v1/oidc.proto
//
package io.gitpod.publicapi.experimental.v1

import com.connectrpc.Headers
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

public class OIDCServiceClient(
  private val client: ProtocolClientInterface,
) : OIDCServiceClientInterface {
  /**
   *  Creates a new OIDC client configuration.
   */
  override suspend fun createClientConfig(request: Oidc.CreateClientConfigRequest,
      headers: Headers): ResponseMessage<Oidc.CreateClientConfigResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "gitpod.experimental.v1.OIDCService/CreateClientConfig",
      io.gitpod.publicapi.experimental.v1.Oidc.CreateClientConfigRequest::class,
      io.gitpod.publicapi.experimental.v1.Oidc.CreateClientConfigResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Retrieves an OIDC client configuration by ID.
   */
  override suspend fun getClientConfig(request: Oidc.GetClientConfigRequest, headers: Headers):
      ResponseMessage<Oidc.GetClientConfigResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "gitpod.experimental.v1.OIDCService/GetClientConfig",
      io.gitpod.publicapi.experimental.v1.Oidc.GetClientConfigRequest::class,
      io.gitpod.publicapi.experimental.v1.Oidc.GetClientConfigResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Lists OIDC client configurations.
   */
  override suspend fun listClientConfigs(request: Oidc.ListClientConfigsRequest, headers: Headers):
      ResponseMessage<Oidc.ListClientConfigsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "gitpod.experimental.v1.OIDCService/ListClientConfigs",
      io.gitpod.publicapi.experimental.v1.Oidc.ListClientConfigsRequest::class,
      io.gitpod.publicapi.experimental.v1.Oidc.ListClientConfigsResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Updates modifiable properties of an existing OIDC client configuration.
   */
  override suspend fun updateClientConfig(request: Oidc.UpdateClientConfigRequest,
      headers: Headers): ResponseMessage<Oidc.UpdateClientConfigResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "gitpod.experimental.v1.OIDCService/UpdateClientConfig",
      io.gitpod.publicapi.experimental.v1.Oidc.UpdateClientConfigRequest::class,
      io.gitpod.publicapi.experimental.v1.Oidc.UpdateClientConfigResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Removes an OIDC client configuration by ID.
   */
  override suspend fun deleteClientConfig(request: Oidc.DeleteClientConfigRequest,
      headers: Headers): ResponseMessage<Oidc.DeleteClientConfigResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "gitpod.experimental.v1.OIDCService/DeleteClientConfig",
      io.gitpod.publicapi.experimental.v1.Oidc.DeleteClientConfigRequest::class,
      io.gitpod.publicapi.experimental.v1.Oidc.DeleteClientConfigResponse::class,
      StreamType.UNARY,
    ),
  )


  /**
   *  Activates an OIDC client configuration by ID.
   */
  override suspend fun setClientConfigActivation(request: Oidc.SetClientConfigActivationRequest,
      headers: Headers): ResponseMessage<Oidc.SetClientConfigActivationResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "gitpod.experimental.v1.OIDCService/SetClientConfigActivation",
      io.gitpod.publicapi.experimental.v1.Oidc.SetClientConfigActivationRequest::class,
      io.gitpod.publicapi.experimental.v1.Oidc.SetClientConfigActivationResponse::class,
      StreamType.UNARY,
    ),
  )

}
