/**
 * Copyright (c) 2024 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License.AGPL.txt in the project root for license information.
 */

// @generated by protoc-gen-connect-es v1.1.2 with parameter "target=ts"
// @generated from file gitpod/experimental/v1/dummy.proto (package gitpod.experimental.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { LotsOfRepliesRequest, LotsOfRepliesResponse, SayHelloRequest, SayHelloResponse } from "./dummy_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * HelloService is a dummy service that says hello. It is used for reliability
 * testing.
 *
 * @generated from service gitpod.experimental.v1.HelloService
 */
export const HelloService = {
  typeName: "gitpod.experimental.v1.HelloService",
  methods: {
    /**
     * Unary RPCs where the client sends a single request to the server and gets a
     * single response back, just like a normal function call.
     *
     * @generated from rpc gitpod.experimental.v1.HelloService.SayHello
     */
    sayHello: {
      name: "SayHello",
      I: SayHelloRequest,
      O: SayHelloResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Server streaming RPCs where the client sends a request to the server and
     * gets a stream to read a sequence of messages back.
     *
     * @generated from rpc gitpod.experimental.v1.HelloService.LotsOfReplies
     */
    lotsOfReplies: {
      name: "LotsOfReplies",
      I: LotsOfRepliesRequest,
      O: LotsOfRepliesResponse,
      kind: MethodKind.ServerStreaming,
    },
  }
} as const;
