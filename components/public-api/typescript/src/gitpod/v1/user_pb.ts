/**
 * Copyright (c) 2024 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License.AGPL.txt in the project root for license information.
 */

// @generated by protoc-gen-es v1.3.3 with parameter "target=ts"
// @generated from file gitpod/v1/user.proto (package gitpod.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Duration, FieldMask, Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { EditorReference } from "./editor_pb.js";
import { PaginationRequest, PaginationResponse } from "./pagination_pb.js";
import { Sort } from "./sorting_pb.js";

/**
 * @generated from enum gitpod.v1.RoleOrPermission
 */
export enum RoleOrPermission {
  /**
   * @generated from enum value: ROLE_OR_PERMISSION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_DEVOPS = 1;
   */
  DEVOPS = 1,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_VIEWER = 2;
   */
  VIEWER = 2,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_ADMIN = 3;
   */
  ADMIN = 3,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_DEVELOPER = 4;
   */
  DEVELOPER = 4,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_REGISTRY_ACCESS = 5;
   */
  REGISTRY_ACCESS = 5,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_ADMIN_PERMISSIONS = 6;
   */
  ADMIN_PERMISSIONS = 6,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_ADMIN_USERS = 7;
   */
  ADMIN_USERS = 7,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_ADMIN_WORKSPACE_CONTENT = 8;
   */
  ADMIN_WORKSPACE_CONTENT = 8,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_ADMIN_WORKSPACES = 9;
   */
  ADMIN_WORKSPACES = 9,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_ADMIN_PROJECTS = 10;
   */
  ADMIN_PROJECTS = 10,

  /**
   * @generated from enum value: ROLE_OR_PERMISSION_NEW_WORKSPACE_CLUSTER = 11;
   */
  NEW_WORKSPACE_CLUSTER = 11,
}
// Retrieve enum metadata with: proto3.getEnumType(RoleOrPermission)
proto3.util.setEnumType(RoleOrPermission, "gitpod.v1.RoleOrPermission", [
  { no: 0, name: "ROLE_OR_PERMISSION_UNSPECIFIED" },
  { no: 1, name: "ROLE_OR_PERMISSION_DEVOPS" },
  { no: 2, name: "ROLE_OR_PERMISSION_VIEWER" },
  { no: 3, name: "ROLE_OR_PERMISSION_ADMIN" },
  { no: 4, name: "ROLE_OR_PERMISSION_DEVELOPER" },
  { no: 5, name: "ROLE_OR_PERMISSION_REGISTRY_ACCESS" },
  { no: 6, name: "ROLE_OR_PERMISSION_ADMIN_PERMISSIONS" },
  { no: 7, name: "ROLE_OR_PERMISSION_ADMIN_USERS" },
  { no: 8, name: "ROLE_OR_PERMISSION_ADMIN_WORKSPACE_CONTENT" },
  { no: 9, name: "ROLE_OR_PERMISSION_ADMIN_WORKSPACES" },
  { no: 10, name: "ROLE_OR_PERMISSION_ADMIN_PROJECTS" },
  { no: 11, name: "ROLE_OR_PERMISSION_NEW_WORKSPACE_CLUSTER" },
]);

/**
 * @generated from message gitpod.v1.GetAuthenticatedUserRequest
 */
export class GetAuthenticatedUserRequest extends Message<GetAuthenticatedUserRequest> {
  constructor(data?: PartialMessage<GetAuthenticatedUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.GetAuthenticatedUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthenticatedUserRequest {
    return new GetAuthenticatedUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthenticatedUserRequest {
    return new GetAuthenticatedUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthenticatedUserRequest {
    return new GetAuthenticatedUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthenticatedUserRequest | PlainMessage<GetAuthenticatedUserRequest> | undefined, b: GetAuthenticatedUserRequest | PlainMessage<GetAuthenticatedUserRequest> | undefined): boolean {
    return proto3.util.equals(GetAuthenticatedUserRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.GetAuthenticatedUserResponse
 */
export class GetAuthenticatedUserResponse extends Message<GetAuthenticatedUserResponse> {
  /**
   * @generated from field: gitpod.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<GetAuthenticatedUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.GetAuthenticatedUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthenticatedUserResponse {
    return new GetAuthenticatedUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthenticatedUserResponse {
    return new GetAuthenticatedUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthenticatedUserResponse {
    return new GetAuthenticatedUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthenticatedUserResponse | PlainMessage<GetAuthenticatedUserResponse> | undefined, b: GetAuthenticatedUserResponse | PlainMessage<GetAuthenticatedUserResponse> | undefined): boolean {
    return proto3.util.equals(GetAuthenticatedUserResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.SetWorkspaceAutoStartOptionsRequest
 */
export class SetWorkspaceAutoStartOptionsRequest extends Message<SetWorkspaceAutoStartOptionsRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: repeated gitpod.v1.SetWorkspaceAutoStartOptionsRequest.WorkspaceAutostartOption workspace_autostart_options = 2;
   */
  workspaceAutostartOptions: SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption[] = [];

  constructor(data?: PartialMessage<SetWorkspaceAutoStartOptionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.SetWorkspaceAutoStartOptionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "workspace_autostart_options", kind: "message", T: SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetWorkspaceAutoStartOptionsRequest {
    return new SetWorkspaceAutoStartOptionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetWorkspaceAutoStartOptionsRequest {
    return new SetWorkspaceAutoStartOptionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetWorkspaceAutoStartOptionsRequest {
    return new SetWorkspaceAutoStartOptionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetWorkspaceAutoStartOptionsRequest | PlainMessage<SetWorkspaceAutoStartOptionsRequest> | undefined, b: SetWorkspaceAutoStartOptionsRequest | PlainMessage<SetWorkspaceAutoStartOptionsRequest> | undefined): boolean {
    return proto3.util.equals(SetWorkspaceAutoStartOptionsRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.SetWorkspaceAutoStartOptionsRequest.WorkspaceAutostartOption
 */
export class SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption extends Message<SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption> {
  /**
   * @generated from field: string clone_url = 1;
   */
  cloneUrl = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: optional string workspace_class = 3;
   */
  workspaceClass?: string;

  /**
   * @generated from field: optional gitpod.v1.EditorReference editor_settings = 4;
   */
  editorSettings?: EditorReference;

  /**
   * @generated from field: optional string region = 5;
   */
  region?: string;

  constructor(data?: PartialMessage<SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.SetWorkspaceAutoStartOptionsRequest.WorkspaceAutostartOption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "clone_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "workspace_class", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "editor_settings", kind: "message", T: EditorReference, opt: true },
    { no: 5, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption {
    return new SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption {
    return new SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption {
    return new SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption().fromJsonString(jsonString, options);
  }

  static equals(a: SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption | PlainMessage<SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption> | undefined, b: SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption | PlainMessage<SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption> | undefined): boolean {
    return proto3.util.equals(SetWorkspaceAutoStartOptionsRequest_WorkspaceAutostartOption, a, b);
  }
}

/**
 * @generated from message gitpod.v1.SetWorkspaceAutoStartOptionsResponse
 */
export class SetWorkspaceAutoStartOptionsResponse extends Message<SetWorkspaceAutoStartOptionsResponse> {
  constructor(data?: PartialMessage<SetWorkspaceAutoStartOptionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.SetWorkspaceAutoStartOptionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetWorkspaceAutoStartOptionsResponse {
    return new SetWorkspaceAutoStartOptionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetWorkspaceAutoStartOptionsResponse {
    return new SetWorkspaceAutoStartOptionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetWorkspaceAutoStartOptionsResponse {
    return new SetWorkspaceAutoStartOptionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetWorkspaceAutoStartOptionsResponse | PlainMessage<SetWorkspaceAutoStartOptionsResponse> | undefined, b: SetWorkspaceAutoStartOptionsResponse | PlainMessage<SetWorkspaceAutoStartOptionsResponse> | undefined): boolean {
    return proto3.util.equals(SetWorkspaceAutoStartOptionsResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateUserRequest
 */
export class UpdateUserRequest extends Message<UpdateUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string accepted_privacy_policy_date = 3;
   */
  acceptedPrivacyPolicyDate?: string;

  /**
   * @generated from field: optional gitpod.v1.UpdateUserRequest.ProfileDetails profile = 4;
   */
  profile?: UpdateUserRequest_ProfileDetails;

  /**
   * @generated from field: optional string email_address = 5;
   */
  emailAddress?: string;

  /**
   * @generated from field: optional gitpod.v1.EditorReference editor_settings = 6;
   */
  editorSettings?: EditorReference;

  /**
   * @generated from field: optional gitpod.v1.UpdateUserRequest.EmailNotificationSettings email_notification_settings = 7;
   */
  emailNotificationSettings?: UpdateUserRequest_EmailNotificationSettings;

  /**
   * @generated from field: optional gitpod.v1.UpdateUserRequest.WorkspaceTimeoutSettings workspace_timeout_settings = 8;
   */
  workspaceTimeoutSettings?: UpdateUserRequest_WorkspaceTimeoutSettings;

  /**
   * @generated from field: optional string dotfile_repo = 9;
   */
  dotfileRepo?: string;

  constructor(data?: PartialMessage<UpdateUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "accepted_privacy_policy_date", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "profile", kind: "message", T: UpdateUserRequest_ProfileDetails, opt: true },
    { no: 5, name: "email_address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "editor_settings", kind: "message", T: EditorReference, opt: true },
    { no: 7, name: "email_notification_settings", kind: "message", T: UpdateUserRequest_EmailNotificationSettings, opt: true },
    { no: 8, name: "workspace_timeout_settings", kind: "message", T: UpdateUserRequest_WorkspaceTimeoutSettings, opt: true },
    { no: 9, name: "dotfile_repo", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest {
    return new UpdateUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined, b: UpdateUserRequest | PlainMessage<UpdateUserRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateUserRequest.ProfileDetails
 */
export class UpdateUserRequest_ProfileDetails extends Message<UpdateUserRequest_ProfileDetails> {
  /**
   * @generated from field: optional string last_updated_details_nudge = 1;
   */
  lastUpdatedDetailsNudge?: string;

  /**
   * @generated from field: optional string accepted_privacy_policy_date = 2;
   */
  acceptedPrivacyPolicyDate?: string;

  /**
   * @generated from field: optional string company_name = 3;
   */
  companyName?: string;

  /**
   * @generated from field: optional string email_address = 4;
   */
  emailAddress?: string;

  /**
   * @generated from field: optional string job_role = 5;
   */
  jobRole?: string;

  /**
   * @generated from field: optional string job_role_other = 6;
   */
  jobRoleOther?: string;

  /**
   * @generated from field: repeated string exploration_reasons = 7;
   */
  explorationReasons: string[] = [];

  /**
   * @generated from field: repeated string signup_goals = 8;
   */
  signupGoals: string[] = [];

  /**
   * @generated from field: optional string signup_goals_other = 10;
   */
  signupGoalsOther?: string;

  /**
   * @generated from field: optional string onboarded_timestamp = 11;
   */
  onboardedTimestamp?: string;

  /**
   * @generated from field: optional string company_size = 12;
   */
  companySize?: string;

  /**
   * @generated from field: map<string, string> coachmarks_dismissals = 13;
   */
  coachmarksDismissals: { [key: string]: string } = {};

  constructor(data?: PartialMessage<UpdateUserRequest_ProfileDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateUserRequest.ProfileDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "last_updated_details_nudge", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "accepted_privacy_policy_date", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "company_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "email_address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "job_role", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "job_role_other", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "exploration_reasons", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "signup_goals", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "signup_goals_other", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "onboarded_timestamp", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "company_size", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "coachmarks_dismissals", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest_ProfileDetails {
    return new UpdateUserRequest_ProfileDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest_ProfileDetails {
    return new UpdateUserRequest_ProfileDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest_ProfileDetails {
    return new UpdateUserRequest_ProfileDetails().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserRequest_ProfileDetails | PlainMessage<UpdateUserRequest_ProfileDetails> | undefined, b: UpdateUserRequest_ProfileDetails | PlainMessage<UpdateUserRequest_ProfileDetails> | undefined): boolean {
    return proto3.util.equals(UpdateUserRequest_ProfileDetails, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateUserRequest.EmailNotificationSettings
 */
export class UpdateUserRequest_EmailNotificationSettings extends Message<UpdateUserRequest_EmailNotificationSettings> {
  /**
   * @generated from field: optional bool allows_changelog_mail = 1;
   */
  allowsChangelogMail?: boolean;

  /**
   * @generated from field: optional bool allows_devx_mail = 2;
   */
  allowsDevxMail?: boolean;

  /**
   * @generated from field: optional bool allows_onboarding_mail = 3;
   */
  allowsOnboardingMail?: boolean;

  constructor(data?: PartialMessage<UpdateUserRequest_EmailNotificationSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateUserRequest.EmailNotificationSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allows_changelog_mail", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "allows_devx_mail", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "allows_onboarding_mail", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest_EmailNotificationSettings {
    return new UpdateUserRequest_EmailNotificationSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest_EmailNotificationSettings {
    return new UpdateUserRequest_EmailNotificationSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest_EmailNotificationSettings {
    return new UpdateUserRequest_EmailNotificationSettings().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserRequest_EmailNotificationSettings | PlainMessage<UpdateUserRequest_EmailNotificationSettings> | undefined, b: UpdateUserRequest_EmailNotificationSettings | PlainMessage<UpdateUserRequest_EmailNotificationSettings> | undefined): boolean {
    return proto3.util.equals(UpdateUserRequest_EmailNotificationSettings, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateUserRequest.WorkspaceTimeoutSettings
 */
export class UpdateUserRequest_WorkspaceTimeoutSettings extends Message<UpdateUserRequest_WorkspaceTimeoutSettings> {
  /**
   * @generated from field: optional google.protobuf.Duration inactivity = 1;
   */
  inactivity?: Duration;

  /**
   * @generated from field: optional bool disabled_disconnected = 2;
   */
  disabledDisconnected?: boolean;

  constructor(data?: PartialMessage<UpdateUserRequest_WorkspaceTimeoutSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateUserRequest.WorkspaceTimeoutSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "inactivity", kind: "message", T: Duration, opt: true },
    { no: 2, name: "disabled_disconnected", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserRequest_WorkspaceTimeoutSettings {
    return new UpdateUserRequest_WorkspaceTimeoutSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserRequest_WorkspaceTimeoutSettings {
    return new UpdateUserRequest_WorkspaceTimeoutSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserRequest_WorkspaceTimeoutSettings {
    return new UpdateUserRequest_WorkspaceTimeoutSettings().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserRequest_WorkspaceTimeoutSettings | PlainMessage<UpdateUserRequest_WorkspaceTimeoutSettings> | undefined, b: UpdateUserRequest_WorkspaceTimeoutSettings | PlainMessage<UpdateUserRequest_WorkspaceTimeoutSettings> | undefined): boolean {
    return proto3.util.equals(UpdateUserRequest_WorkspaceTimeoutSettings, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateUserResponse
 */
export class UpdateUserResponse extends Message<UpdateUserResponse> {
  /**
   * @generated from field: gitpod.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<UpdateUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserResponse {
    return new UpdateUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserResponse {
    return new UpdateUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserResponse {
    return new UpdateUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserResponse | PlainMessage<UpdateUserResponse> | undefined, b: UpdateUserResponse | PlainMessage<UpdateUserResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.DeleteUserRequest
 */
export class DeleteUserRequest extends Message<DeleteUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<DeleteUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.DeleteUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserRequest {
    return new DeleteUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined, b: DeleteUserRequest | PlainMessage<DeleteUserRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUserRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.DeleteUserResponse
 */
export class DeleteUserResponse extends Message<DeleteUserResponse> {
  constructor(data?: PartialMessage<DeleteUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.DeleteUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserResponse {
    return new DeleteUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserResponse {
    return new DeleteUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserResponse {
    return new DeleteUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserResponse | PlainMessage<DeleteUserResponse> | undefined, b: DeleteUserResponse | PlainMessage<DeleteUserResponse> | undefined): boolean {
    return proto3.util.equals(DeleteUserResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.VerifyUserRequest
 */
export class VerifyUserRequest extends Message<VerifyUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<VerifyUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.VerifyUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyUserRequest {
    return new VerifyUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyUserRequest {
    return new VerifyUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyUserRequest {
    return new VerifyUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyUserRequest | PlainMessage<VerifyUserRequest> | undefined, b: VerifyUserRequest | PlainMessage<VerifyUserRequest> | undefined): boolean {
    return proto3.util.equals(VerifyUserRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.VerifyUserResponse
 */
export class VerifyUserResponse extends Message<VerifyUserResponse> {
  /**
   * @generated from field: gitpod.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<VerifyUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.VerifyUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyUserResponse {
    return new VerifyUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyUserResponse {
    return new VerifyUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyUserResponse {
    return new VerifyUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyUserResponse | PlainMessage<VerifyUserResponse> | undefined, b: VerifyUserResponse | PlainMessage<VerifyUserResponse> | undefined): boolean {
    return proto3.util.equals(VerifyUserResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.BlockUserRequest
 */
export class BlockUserRequest extends Message<BlockUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: bool blocked = 2;
   */
  blocked = false;

  constructor(data?: PartialMessage<BlockUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.BlockUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "blocked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockUserRequest {
    return new BlockUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockUserRequest {
    return new BlockUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockUserRequest {
    return new BlockUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: BlockUserRequest | PlainMessage<BlockUserRequest> | undefined, b: BlockUserRequest | PlainMessage<BlockUserRequest> | undefined): boolean {
    return proto3.util.equals(BlockUserRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.BlockUserResponse
 */
export class BlockUserResponse extends Message<BlockUserResponse> {
  /**
   * @generated from field: gitpod.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<BlockUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.BlockUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockUserResponse {
    return new BlockUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockUserResponse {
    return new BlockUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockUserResponse {
    return new BlockUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BlockUserResponse | PlainMessage<BlockUserResponse> | undefined, b: BlockUserResponse | PlainMessage<BlockUserResponse> | undefined): boolean {
    return proto3.util.equals(BlockUserResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ListUsersRequest
 */
export class ListUsersRequest extends Message<ListUsersRequest> {
  /**
   * @generated from field: string search_term = 1;
   */
  searchTerm = "";

  /**
   * @generated from field: gitpod.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * Users can be sorted by "creationDate"
   *
   * @generated from field: repeated gitpod.v1.Sort sort = 3;
   */
  sort: Sort[] = [];

  constructor(data?: PartialMessage<ListUsersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ListUsersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "search_term", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PaginationRequest },
    { no: 3, name: "sort", kind: "message", T: Sort, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersRequest {
    return new ListUsersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined, b: ListUsersRequest | PlainMessage<ListUsersRequest> | undefined): boolean {
    return proto3.util.equals(ListUsersRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ListUsersResponse
 */
export class ListUsersResponse extends Message<ListUsersResponse> {
  /**
   * @generated from field: repeated gitpod.v1.User users = 1;
   */
  users: User[] = [];

  /**
   * @generated from field: gitpod.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  constructor(data?: PartialMessage<ListUsersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ListUsersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "users", kind: "message", T: User, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PaginationResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUsersResponse {
    return new ListUsersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined, b: ListUsersResponse | PlainMessage<ListUsersResponse> | undefined): boolean {
    return proto3.util.equals(ListUsersResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.GetUserRequest
 */
export class GetUserRequest extends Message<GetUserRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GetUserRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.GetUserRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserRequest {
    return new GetUserRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserRequest {
    return new GetUserRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserRequest {
    return new GetUserRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserRequest | PlainMessage<GetUserRequest> | undefined, b: GetUserRequest | PlainMessage<GetUserRequest> | undefined): boolean {
    return proto3.util.equals(GetUserRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.GetUserResponse
 */
export class GetUserResponse extends Message<GetUserResponse> {
  /**
   * @generated from field: gitpod.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<GetUserResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.GetUserResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUserResponse {
    return new GetUserResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUserResponse {
    return new GetUserResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUserResponse {
    return new GetUserResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetUserResponse | PlainMessage<GetUserResponse> | undefined, b: GetUserResponse | PlainMessage<GetUserResponse> | undefined): boolean {
    return proto3.util.equals(GetUserResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.SetRolesOrPermissionsRequest
 */
export class SetRolesOrPermissionsRequest extends Message<SetRolesOrPermissionsRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  /**
   * @generated from field: repeated gitpod.v1.RoleOrPermission roles_or_permissions = 2;
   */
  rolesOrPermissions: RoleOrPermission[] = [];

  /**
   * @generated from field: google.protobuf.FieldMask reset_mask = 3;
   */
  resetMask?: FieldMask;

  constructor(data?: PartialMessage<SetRolesOrPermissionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.SetRolesOrPermissionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "roles_or_permissions", kind: "enum", T: proto3.getEnumType(RoleOrPermission), repeated: true },
    { no: 3, name: "reset_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRolesOrPermissionsRequest {
    return new SetRolesOrPermissionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRolesOrPermissionsRequest {
    return new SetRolesOrPermissionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRolesOrPermissionsRequest {
    return new SetRolesOrPermissionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetRolesOrPermissionsRequest | PlainMessage<SetRolesOrPermissionsRequest> | undefined, b: SetRolesOrPermissionsRequest | PlainMessage<SetRolesOrPermissionsRequest> | undefined): boolean {
    return proto3.util.equals(SetRolesOrPermissionsRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.SetRolesOrPermissionsResponse
 */
export class SetRolesOrPermissionsResponse extends Message<SetRolesOrPermissionsResponse> {
  /**
   * @generated from field: gitpod.v1.User user = 1;
   */
  user?: User;

  constructor(data?: PartialMessage<SetRolesOrPermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.SetRolesOrPermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user", kind: "message", T: User },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRolesOrPermissionsResponse {
    return new SetRolesOrPermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRolesOrPermissionsResponse {
    return new SetRolesOrPermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRolesOrPermissionsResponse {
    return new SetRolesOrPermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetRolesOrPermissionsResponse | PlainMessage<SetRolesOrPermissionsResponse> | undefined, b: SetRolesOrPermissionsResponse | PlainMessage<SetRolesOrPermissionsResponse> | undefined): boolean {
    return proto3.util.equals(SetRolesOrPermissionsResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.User
 */
export class User extends Message<User> {
  /**
   * id is a UUID of the user
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * organization_id is the id of the organization this account is owned by.
   *
   * +optional if not set, this account is owned by the installation.
   *
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * name is the full name of the user
   *
   * @generated from field: string name = 3;
   */
  name = "";

  /**
   * avatar_url is a link to the user avatar
   *
   * @generated from field: string avatar_url = 4;
   */
  avatarUrl = "";

  /**
   * created_at is the creation time
   *
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: repeated gitpod.v1.Identity identities = 6;
   */
  identities: Identity[] = [];

  /**
   * blocked indicates whether the account is blocked, e.g. due to vialoation of ToS.
   *
   * @generated from field: bool blocked = 7;
   */
  blocked = false;

  /**
   * last_verification_time is the last time this account was verified.
   *
   * +optional if not set, this account is not verified.
   *
   * @generated from field: google.protobuf.Timestamp last_verification_time = 8;
   */
  lastVerificationTime?: Timestamp;

  /**
   * verification_phone_number is the phone number used for the last verification.
   *
   * @generated from field: string verification_phone_number = 9;
   */
  verificationPhoneNumber = "";

  /**
   * user global workspace timeout settings
   *
   * +optional
   *
   * @generated from field: gitpod.v1.User.WorkspaceTimeoutSettings workspace_timeout_settings = 10;
   */
  workspaceTimeoutSettings?: User_WorkspaceTimeoutSettings;

  /**
   * +optional
   *
   * @generated from field: gitpod.v1.User.EmailNotificationSettings email_notification_settings = 11;
   */
  emailNotificationSettings?: User_EmailNotificationSettings;

  /**
   * +optional
   *
   * @generated from field: gitpod.v1.EditorReference editor_settings = 12;
   */
  editorSettings?: EditorReference;

  /**
   * Git clone URL pointing to the user's dotfile repo
   *
   * // +optional
   *
   * @generated from field: string dotfile_repo = 13;
   */
  dotfileRepo = "";

  /**
   * preferred workspace class
   *
   * +optional
   *
   * @generated from field: string workspace_class = 14;
   */
  workspaceClass = "";

  /**
   * additional user profile data
   *
   * +optional
   *
   * @generated from field: gitpod.v1.User.ProfileDetails profile = 15;
   */
  profile?: User_ProfileDetails;

  /**
   * remembered workspace auto start options
   *
   * +optional
   *
   * @generated from field: repeated gitpod.v1.User.WorkspaceAutostartOption workspace_autostart_options = 16;
   */
  workspaceAutostartOptions: User_WorkspaceAutostartOption[] = [];

  /**
   * usage_attribution_id specifies the organization or account to which all of the
   * user's workspace usage is attributed to, e.g. for billing purposes
   *
   * @generated from field: string usage_attribution_id = 17;
   */
  usageAttributionId = "";

  /**
   * per-user settings to control workspace behavior
   *
   * @generated from field: repeated gitpod.v1.User.UserFeatureFlag workspace_feature_flags = 18;
   */
  workspaceFeatureFlags: User_UserFeatureFlag[] = [];

  /**
   * specifies the permissions and/or roles the user has
   *
   * @generated from field: repeated gitpod.v1.RoleOrPermission roles_or_permissions = 19;
   */
  rolesOrPermissions: RoleOrPermission[] = [];

  constructor(data?: PartialMessage<User>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.User";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "avatar_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "identities", kind: "message", T: Identity, repeated: true },
    { no: 7, name: "blocked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "last_verification_time", kind: "message", T: Timestamp },
    { no: 9, name: "verification_phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "workspace_timeout_settings", kind: "message", T: User_WorkspaceTimeoutSettings },
    { no: 11, name: "email_notification_settings", kind: "message", T: User_EmailNotificationSettings },
    { no: 12, name: "editor_settings", kind: "message", T: EditorReference },
    { no: 13, name: "dotfile_repo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "workspace_class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "profile", kind: "message", T: User_ProfileDetails },
    { no: 16, name: "workspace_autostart_options", kind: "message", T: User_WorkspaceAutostartOption, repeated: true },
    { no: 17, name: "usage_attribution_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "workspace_feature_flags", kind: "enum", T: proto3.getEnumType(User_UserFeatureFlag), repeated: true },
    { no: 19, name: "roles_or_permissions", kind: "enum", T: proto3.getEnumType(RoleOrPermission), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User {
    return new User().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User {
    return new User().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User {
    return new User().fromJsonString(jsonString, options);
  }

  static equals(a: User | PlainMessage<User> | undefined, b: User | PlainMessage<User> | undefined): boolean {
    return proto3.util.equals(User, a, b);
  }
}

/**
 * @generated from enum gitpod.v1.User.UserFeatureFlag
 */
export enum User_UserFeatureFlag {
  /**
   * @generated from enum value: USER_FEATURE_FLAG_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_FEATURE_FLAG_FULL_WORKSPACE_BACKUP = 1;
   */
  FULL_WORKSPACE_BACKUP = 1,

  /**
   * @generated from enum value: USER_FEATURE_FLAG_WORKSPACE_CLASS_LIMITING = 2;
   */
  WORKSPACE_CLASS_LIMITING = 2,

  /**
   * @generated from enum value: USER_FEATURE_FLAG_WORKSPACE_CONNECTION_LIMITING = 3;
   */
  WORKSPACE_CONNECTION_LIMITING = 3,

  /**
   * @generated from enum value: USER_FEATURE_FLAG_WORKSPACE_PSI = 4;
   */
  WORKSPACE_PSI = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(User_UserFeatureFlag)
proto3.util.setEnumType(User_UserFeatureFlag, "gitpod.v1.User.UserFeatureFlag", [
  { no: 0, name: "USER_FEATURE_FLAG_UNSPECIFIED" },
  { no: 1, name: "USER_FEATURE_FLAG_FULL_WORKSPACE_BACKUP" },
  { no: 2, name: "USER_FEATURE_FLAG_WORKSPACE_CLASS_LIMITING" },
  { no: 3, name: "USER_FEATURE_FLAG_WORKSPACE_CONNECTION_LIMITING" },
  { no: 4, name: "USER_FEATURE_FLAG_WORKSPACE_PSI" },
]);

/**
 * @generated from message gitpod.v1.User.WorkspaceTimeoutSettings
 */
export class User_WorkspaceTimeoutSettings extends Message<User_WorkspaceTimeoutSettings> {
  /**
   * inacitivity is the maximum time of inactivity before the workspace is stopped or paused
   *
   * @generated from field: google.protobuf.Duration inactivity = 1;
   */
  inactivity?: Duration;

  /**
   * control whether to enable the closed timeout of a workspace, i.e. close web ide, disconnect ssh connection
   *
   * +optional
   *
   * @generated from field: bool disabled_disconnected = 2;
   */
  disabledDisconnected = false;

  constructor(data?: PartialMessage<User_WorkspaceTimeoutSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.User.WorkspaceTimeoutSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "inactivity", kind: "message", T: Duration },
    { no: 2, name: "disabled_disconnected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User_WorkspaceTimeoutSettings {
    return new User_WorkspaceTimeoutSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User_WorkspaceTimeoutSettings {
    return new User_WorkspaceTimeoutSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User_WorkspaceTimeoutSettings {
    return new User_WorkspaceTimeoutSettings().fromJsonString(jsonString, options);
  }

  static equals(a: User_WorkspaceTimeoutSettings | PlainMessage<User_WorkspaceTimeoutSettings> | undefined, b: User_WorkspaceTimeoutSettings | PlainMessage<User_WorkspaceTimeoutSettings> | undefined): boolean {
    return proto3.util.equals(User_WorkspaceTimeoutSettings, a, b);
  }
}

/**
 * @generated from message gitpod.v1.User.EmailNotificationSettings
 */
export class User_EmailNotificationSettings extends Message<User_EmailNotificationSettings> {
  /**
   * +optional
   *
   * @generated from field: bool allows_changelog_mail = 1;
   */
  allowsChangelogMail = false;

  /**
   * +optional
   *
   * @generated from field: bool allows_devx_mail = 2;
   */
  allowsDevxMail = false;

  /**
   * +optional
   *
   * @generated from field: bool allows_onboarding_mail = 3;
   */
  allowsOnboardingMail = false;

  constructor(data?: PartialMessage<User_EmailNotificationSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.User.EmailNotificationSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allows_changelog_mail", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "allows_devx_mail", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "allows_onboarding_mail", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User_EmailNotificationSettings {
    return new User_EmailNotificationSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User_EmailNotificationSettings {
    return new User_EmailNotificationSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User_EmailNotificationSettings {
    return new User_EmailNotificationSettings().fromJsonString(jsonString, options);
  }

  static equals(a: User_EmailNotificationSettings | PlainMessage<User_EmailNotificationSettings> | undefined, b: User_EmailNotificationSettings | PlainMessage<User_EmailNotificationSettings> | undefined): boolean {
    return proto3.util.equals(User_EmailNotificationSettings, a, b);
  }
}

/**
 * @generated from message gitpod.v1.User.ProfileDetails
 */
export class User_ProfileDetails extends Message<User_ProfileDetails> {
  /**
   * when was the last time the user updated their profile information or has been nudged to do so.
   *
   * +optional
   *
   * @generated from field: string last_updated_details_nudge = 1;
   */
  lastUpdatedDetailsNudge = "";

  /**
   * when was the last time the user has accepted our privacy policy
   *
   * +optional
   *
   * @generated from field: string accepted_privacy_policy_date = 2;
   */
  acceptedPrivacyPolicyDate = "";

  /**
   * the user's company name
   *
   * +optional
   *
   * @generated from field: string company_name = 3;
   */
  companyName = "";

  /**
   * the user's email
   *
   * +optional
   *
   * @generated from field: string email_address = 4;
   */
  emailAddress = "";

  /**
   * type of role user has in their job
   *
   * +optional
   *
   * @generated from field: string job_role = 5;
   */
  jobRole = "";

  /**
   * freeform entry for job role user works in (when jobRole is "other")
   *
   * +optional
   *
   * @generated from field: string job_role_other = 6;
   */
  jobRoleOther = "";

  /**
   * Reasons user is exploring Gitpod when they signed up
   *
   * +optional
   *
   * @generated from field: repeated string exploration_reasons = 7;
   */
  explorationReasons: string[] = [];

  /**
   * what user hopes to accomplish when they signed up
   *
   * +optional
   *
   * @generated from field: repeated string signup_goals = 8;
   */
  signupGoals: string[] = [];

  /**
   * freeform entry for signup goals (when signupGoals is "other")
   *
   * +optional
   *
   * @generated from field: string signup_goals_other = 10;
   */
  signupGoalsOther = "";

  /**
   * Set after a user completes the onboarding flow
   *
   * +optional
   *
   * @generated from field: string onboarded_timestamp = 11;
   */
  onboardedTimestamp = "";

  /**
   * Onboarding question about a user's company size
   *
   * +optional
   *
   * @generated from field: string company_size = 12;
   */
  companySize = "";

  /**
   * key-value pairs of dialogs in the UI which should only appear once. The value usually is a timestamp of the last dismissal
   *
   * +optional
   *
   * @generated from field: map<string, string> coachmarks_dismissals = 13;
   */
  coachmarksDismissals: { [key: string]: string } = {};

  constructor(data?: PartialMessage<User_ProfileDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.User.ProfileDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "last_updated_details_nudge", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "accepted_privacy_policy_date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "company_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "email_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "job_role", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "job_role_other", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "exploration_reasons", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "signup_goals", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 10, name: "signup_goals_other", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "onboarded_timestamp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "company_size", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "coachmarks_dismissals", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User_ProfileDetails {
    return new User_ProfileDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User_ProfileDetails {
    return new User_ProfileDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User_ProfileDetails {
    return new User_ProfileDetails().fromJsonString(jsonString, options);
  }

  static equals(a: User_ProfileDetails | PlainMessage<User_ProfileDetails> | undefined, b: User_ProfileDetails | PlainMessage<User_ProfileDetails> | undefined): boolean {
    return proto3.util.equals(User_ProfileDetails, a, b);
  }
}

/**
 * @generated from message gitpod.v1.User.WorkspaceAutostartOption
 */
export class User_WorkspaceAutostartOption extends Message<User_WorkspaceAutostartOption> {
  /**
   * @generated from field: string clone_url = 1;
   */
  cloneUrl = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: string workspace_class = 3;
   */
  workspaceClass = "";

  /**
   * +optional
   *
   * @generated from field: gitpod.v1.EditorReference editor_settings = 4;
   */
  editorSettings?: EditorReference;

  /**
   * +optional
   *
   * @generated from field: string region = 5;
   */
  region = "";

  constructor(data?: PartialMessage<User_WorkspaceAutostartOption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.User.WorkspaceAutostartOption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "clone_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "workspace_class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "editor_settings", kind: "message", T: EditorReference },
    { no: 5, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): User_WorkspaceAutostartOption {
    return new User_WorkspaceAutostartOption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): User_WorkspaceAutostartOption {
    return new User_WorkspaceAutostartOption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): User_WorkspaceAutostartOption {
    return new User_WorkspaceAutostartOption().fromJsonString(jsonString, options);
  }

  static equals(a: User_WorkspaceAutostartOption | PlainMessage<User_WorkspaceAutostartOption> | undefined, b: User_WorkspaceAutostartOption | PlainMessage<User_WorkspaceAutostartOption> | undefined): boolean {
    return proto3.util.equals(User_WorkspaceAutostartOption, a, b);
  }
}

/**
 * @generated from message gitpod.v1.Identity
 */
export class Identity extends Message<Identity> {
  /**
   * The id of the auth provider this identity was created with.
   *
   * @generated from field: string auth_provider_id = 1;
   */
  authProviderId = "";

  /**
   * The external account id this identity was created for.
   *
   * @generated from field: string auth_id = 2;
   */
  authId = "";

  /**
   * The external account name this identity was created for.
   *
   * @generated from field: string auth_name = 3;
   */
  authName = "";

  /**
   * The primary email of the external account.
   *
   * @generated from field: string primary_email = 4;
   */
  primaryEmail = "";

  /**
   * The time of last signin.
   *
   * +optional
   *
   * @generated from field: google.protobuf.Timestamp last_signin_time = 6;
   */
  lastSigninTime?: Timestamp;

  constructor(data?: PartialMessage<Identity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.Identity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "auth_provider_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "auth_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "auth_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "primary_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "last_signin_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Identity {
    return new Identity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Identity {
    return new Identity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Identity {
    return new Identity().fromJsonString(jsonString, options);
  }

  static equals(a: Identity | PlainMessage<Identity> | undefined, b: Identity | PlainMessage<Identity> | undefined): boolean {
    return proto3.util.equals(Identity, a, b);
  }
}
