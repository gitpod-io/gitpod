/**
 * Copyright (c) 2024 Gitpod GmbH. All rights reserved.
 * Licensed under the GNU Affero General Public License (AGPL).
 * See License.AGPL.txt in the project root for license information.
 */

// @generated by protoc-gen-es v1.3.3 with parameter "target=ts"
// @generated from file gitpod/v1/envvar.proto (package gitpod.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { PaginationRequest, PaginationResponse } from "./pagination_pb.js";

/**
 * @generated from enum gitpod.v1.EnvironmentVariableAdmission
 */
export enum EnvironmentVariableAdmission {
  /**
   * @generated from enum value: ENVIRONMENT_VARIABLE_ADMISSION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ENVIRONMENT_VARIABLE_ADMISSION_PREBUILD = 1;
   */
  PREBUILD = 1,

  /**
   * @generated from enum value: ENVIRONMENT_VARIABLE_ADMISSION_EVERYWHERE = 2;
   */
  EVERYWHERE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(EnvironmentVariableAdmission)
proto3.util.setEnumType(EnvironmentVariableAdmission, "gitpod.v1.EnvironmentVariableAdmission", [
  { no: 0, name: "ENVIRONMENT_VARIABLE_ADMISSION_UNSPECIFIED" },
  { no: 1, name: "ENVIRONMENT_VARIABLE_ADMISSION_PREBUILD" },
  { no: 2, name: "ENVIRONMENT_VARIABLE_ADMISSION_EVERYWHERE" },
]);

/**
 * @generated from message gitpod.v1.UserEnvironmentVariable
 */
export class UserEnvironmentVariable extends Message<UserEnvironmentVariable> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string value = 3;
   */
  value = "";

  /**
   * @generated from field: string repository_pattern = 4;
   */
  repositoryPattern = "";

  constructor(data?: PartialMessage<UserEnvironmentVariable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UserEnvironmentVariable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "repository_pattern", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserEnvironmentVariable {
    return new UserEnvironmentVariable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserEnvironmentVariable {
    return new UserEnvironmentVariable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserEnvironmentVariable {
    return new UserEnvironmentVariable().fromJsonString(jsonString, options);
  }

  static equals(a: UserEnvironmentVariable | PlainMessage<UserEnvironmentVariable> | undefined, b: UserEnvironmentVariable | PlainMessage<UserEnvironmentVariable> | undefined): boolean {
    return proto3.util.equals(UserEnvironmentVariable, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ListUserEnvironmentVariablesRequest
 */
export class ListUserEnvironmentVariablesRequest extends Message<ListUserEnvironmentVariablesRequest> {
  /**
   * @generated from field: gitpod.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  constructor(data?: PartialMessage<ListUserEnvironmentVariablesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ListUserEnvironmentVariablesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pagination", kind: "message", T: PaginationRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserEnvironmentVariablesRequest {
    return new ListUserEnvironmentVariablesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserEnvironmentVariablesRequest {
    return new ListUserEnvironmentVariablesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserEnvironmentVariablesRequest {
    return new ListUserEnvironmentVariablesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserEnvironmentVariablesRequest | PlainMessage<ListUserEnvironmentVariablesRequest> | undefined, b: ListUserEnvironmentVariablesRequest | PlainMessage<ListUserEnvironmentVariablesRequest> | undefined): boolean {
    return proto3.util.equals(ListUserEnvironmentVariablesRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ListUserEnvironmentVariablesResponse
 */
export class ListUserEnvironmentVariablesResponse extends Message<ListUserEnvironmentVariablesResponse> {
  /**
   * @generated from field: repeated gitpod.v1.UserEnvironmentVariable environment_variables = 1;
   */
  environmentVariables: UserEnvironmentVariable[] = [];

  /**
   * @generated from field: gitpod.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  constructor(data?: PartialMessage<ListUserEnvironmentVariablesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ListUserEnvironmentVariablesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variables", kind: "message", T: UserEnvironmentVariable, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PaginationResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListUserEnvironmentVariablesResponse {
    return new ListUserEnvironmentVariablesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListUserEnvironmentVariablesResponse {
    return new ListUserEnvironmentVariablesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListUserEnvironmentVariablesResponse {
    return new ListUserEnvironmentVariablesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListUserEnvironmentVariablesResponse | PlainMessage<ListUserEnvironmentVariablesResponse> | undefined, b: ListUserEnvironmentVariablesResponse | PlainMessage<ListUserEnvironmentVariablesResponse> | undefined): boolean {
    return proto3.util.equals(ListUserEnvironmentVariablesResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateUserEnvironmentVariableRequest
 */
export class UpdateUserEnvironmentVariableRequest extends Message<UpdateUserEnvironmentVariableRequest> {
  /**
   * @generated from field: string environment_variable_id = 1;
   */
  environmentVariableId = "";

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional string value = 3;
   */
  value?: string;

  /**
   * @generated from field: optional string repository_pattern = 4;
   */
  repositoryPattern?: string;

  constructor(data?: PartialMessage<UpdateUserEnvironmentVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateUserEnvironmentVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variable_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "repository_pattern", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserEnvironmentVariableRequest {
    return new UpdateUserEnvironmentVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserEnvironmentVariableRequest {
    return new UpdateUserEnvironmentVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserEnvironmentVariableRequest {
    return new UpdateUserEnvironmentVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserEnvironmentVariableRequest | PlainMessage<UpdateUserEnvironmentVariableRequest> | undefined, b: UpdateUserEnvironmentVariableRequest | PlainMessage<UpdateUserEnvironmentVariableRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserEnvironmentVariableRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateUserEnvironmentVariableResponse
 */
export class UpdateUserEnvironmentVariableResponse extends Message<UpdateUserEnvironmentVariableResponse> {
  /**
   * @generated from field: gitpod.v1.UserEnvironmentVariable environment_variable = 1;
   */
  environmentVariable?: UserEnvironmentVariable;

  constructor(data?: PartialMessage<UpdateUserEnvironmentVariableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateUserEnvironmentVariableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variable", kind: "message", T: UserEnvironmentVariable },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserEnvironmentVariableResponse {
    return new UpdateUserEnvironmentVariableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserEnvironmentVariableResponse {
    return new UpdateUserEnvironmentVariableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserEnvironmentVariableResponse {
    return new UpdateUserEnvironmentVariableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserEnvironmentVariableResponse | PlainMessage<UpdateUserEnvironmentVariableResponse> | undefined, b: UpdateUserEnvironmentVariableResponse | PlainMessage<UpdateUserEnvironmentVariableResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserEnvironmentVariableResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.CreateUserEnvironmentVariableRequest
 */
export class CreateUserEnvironmentVariableRequest extends Message<CreateUserEnvironmentVariableRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string value = 2;
   */
  value = "";

  /**
   * @generated from field: string repository_pattern = 3;
   */
  repositoryPattern = "";

  constructor(data?: PartialMessage<CreateUserEnvironmentVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.CreateUserEnvironmentVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "repository_pattern", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserEnvironmentVariableRequest {
    return new CreateUserEnvironmentVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserEnvironmentVariableRequest {
    return new CreateUserEnvironmentVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserEnvironmentVariableRequest {
    return new CreateUserEnvironmentVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserEnvironmentVariableRequest | PlainMessage<CreateUserEnvironmentVariableRequest> | undefined, b: CreateUserEnvironmentVariableRequest | PlainMessage<CreateUserEnvironmentVariableRequest> | undefined): boolean {
    return proto3.util.equals(CreateUserEnvironmentVariableRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.CreateUserEnvironmentVariableResponse
 */
export class CreateUserEnvironmentVariableResponse extends Message<CreateUserEnvironmentVariableResponse> {
  /**
   * @generated from field: gitpod.v1.UserEnvironmentVariable environment_variable = 1;
   */
  environmentVariable?: UserEnvironmentVariable;

  constructor(data?: PartialMessage<CreateUserEnvironmentVariableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.CreateUserEnvironmentVariableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variable", kind: "message", T: UserEnvironmentVariable },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateUserEnvironmentVariableResponse {
    return new CreateUserEnvironmentVariableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateUserEnvironmentVariableResponse {
    return new CreateUserEnvironmentVariableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateUserEnvironmentVariableResponse {
    return new CreateUserEnvironmentVariableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateUserEnvironmentVariableResponse | PlainMessage<CreateUserEnvironmentVariableResponse> | undefined, b: CreateUserEnvironmentVariableResponse | PlainMessage<CreateUserEnvironmentVariableResponse> | undefined): boolean {
    return proto3.util.equals(CreateUserEnvironmentVariableResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.DeleteUserEnvironmentVariableRequest
 */
export class DeleteUserEnvironmentVariableRequest extends Message<DeleteUserEnvironmentVariableRequest> {
  /**
   * @generated from field: string environment_variable_id = 1;
   */
  environmentVariableId = "";

  constructor(data?: PartialMessage<DeleteUserEnvironmentVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.DeleteUserEnvironmentVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variable_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserEnvironmentVariableRequest {
    return new DeleteUserEnvironmentVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserEnvironmentVariableRequest {
    return new DeleteUserEnvironmentVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserEnvironmentVariableRequest {
    return new DeleteUserEnvironmentVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserEnvironmentVariableRequest | PlainMessage<DeleteUserEnvironmentVariableRequest> | undefined, b: DeleteUserEnvironmentVariableRequest | PlainMessage<DeleteUserEnvironmentVariableRequest> | undefined): boolean {
    return proto3.util.equals(DeleteUserEnvironmentVariableRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.DeleteUserEnvironmentVariableResponse
 */
export class DeleteUserEnvironmentVariableResponse extends Message<DeleteUserEnvironmentVariableResponse> {
  constructor(data?: PartialMessage<DeleteUserEnvironmentVariableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.DeleteUserEnvironmentVariableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteUserEnvironmentVariableResponse {
    return new DeleteUserEnvironmentVariableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteUserEnvironmentVariableResponse {
    return new DeleteUserEnvironmentVariableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteUserEnvironmentVariableResponse {
    return new DeleteUserEnvironmentVariableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteUserEnvironmentVariableResponse | PlainMessage<DeleteUserEnvironmentVariableResponse> | undefined, b: DeleteUserEnvironmentVariableResponse | PlainMessage<DeleteUserEnvironmentVariableResponse> | undefined): boolean {
    return proto3.util.equals(DeleteUserEnvironmentVariableResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ConfigurationEnvironmentVariable
 */
export class ConfigurationEnvironmentVariable extends Message<ConfigurationEnvironmentVariable> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string configuration_id = 4;
   */
  configurationId = "";

  /**
   * @generated from field: gitpod.v1.EnvironmentVariableAdmission admission = 5;
   */
  admission = EnvironmentVariableAdmission.UNSPECIFIED;

  constructor(data?: PartialMessage<ConfigurationEnvironmentVariable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ConfigurationEnvironmentVariable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "configuration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "admission", kind: "enum", T: proto3.getEnumType(EnvironmentVariableAdmission) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConfigurationEnvironmentVariable {
    return new ConfigurationEnvironmentVariable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConfigurationEnvironmentVariable {
    return new ConfigurationEnvironmentVariable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConfigurationEnvironmentVariable {
    return new ConfigurationEnvironmentVariable().fromJsonString(jsonString, options);
  }

  static equals(a: ConfigurationEnvironmentVariable | PlainMessage<ConfigurationEnvironmentVariable> | undefined, b: ConfigurationEnvironmentVariable | PlainMessage<ConfigurationEnvironmentVariable> | undefined): boolean {
    return proto3.util.equals(ConfigurationEnvironmentVariable, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ListConfigurationEnvironmentVariablesRequest
 */
export class ListConfigurationEnvironmentVariablesRequest extends Message<ListConfigurationEnvironmentVariablesRequest> {
  /**
   * @generated from field: string configuration_id = 1;
   */
  configurationId = "";

  /**
   * @generated from field: gitpod.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  constructor(data?: PartialMessage<ListConfigurationEnvironmentVariablesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ListConfigurationEnvironmentVariablesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "configuration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "pagination", kind: "message", T: PaginationRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConfigurationEnvironmentVariablesRequest {
    return new ListConfigurationEnvironmentVariablesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConfigurationEnvironmentVariablesRequest {
    return new ListConfigurationEnvironmentVariablesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConfigurationEnvironmentVariablesRequest {
    return new ListConfigurationEnvironmentVariablesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListConfigurationEnvironmentVariablesRequest | PlainMessage<ListConfigurationEnvironmentVariablesRequest> | undefined, b: ListConfigurationEnvironmentVariablesRequest | PlainMessage<ListConfigurationEnvironmentVariablesRequest> | undefined): boolean {
    return proto3.util.equals(ListConfigurationEnvironmentVariablesRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ListConfigurationEnvironmentVariablesResponse
 */
export class ListConfigurationEnvironmentVariablesResponse extends Message<ListConfigurationEnvironmentVariablesResponse> {
  /**
   * @generated from field: repeated gitpod.v1.ConfigurationEnvironmentVariable environment_variables = 1;
   */
  environmentVariables: ConfigurationEnvironmentVariable[] = [];

  /**
   * @generated from field: gitpod.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  constructor(data?: PartialMessage<ListConfigurationEnvironmentVariablesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ListConfigurationEnvironmentVariablesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variables", kind: "message", T: ConfigurationEnvironmentVariable, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PaginationResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConfigurationEnvironmentVariablesResponse {
    return new ListConfigurationEnvironmentVariablesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConfigurationEnvironmentVariablesResponse {
    return new ListConfigurationEnvironmentVariablesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConfigurationEnvironmentVariablesResponse {
    return new ListConfigurationEnvironmentVariablesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListConfigurationEnvironmentVariablesResponse | PlainMessage<ListConfigurationEnvironmentVariablesResponse> | undefined, b: ListConfigurationEnvironmentVariablesResponse | PlainMessage<ListConfigurationEnvironmentVariablesResponse> | undefined): boolean {
    return proto3.util.equals(ListConfigurationEnvironmentVariablesResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateConfigurationEnvironmentVariableRequest
 */
export class UpdateConfigurationEnvironmentVariableRequest extends Message<UpdateConfigurationEnvironmentVariableRequest> {
  /**
   * @generated from field: string configuration_id = 1;
   */
  configurationId = "";

  /**
   * @generated from field: string environment_variable_id = 2;
   */
  environmentVariableId = "";

  /**
   * @generated from field: optional string name = 3;
   */
  name?: string;

  /**
   * @generated from field: optional string value = 4;
   */
  value?: string;

  /**
   * @generated from field: optional gitpod.v1.EnvironmentVariableAdmission admission = 5;
   */
  admission?: EnvironmentVariableAdmission;

  constructor(data?: PartialMessage<UpdateConfigurationEnvironmentVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateConfigurationEnvironmentVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "configuration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_variable_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "admission", kind: "enum", T: proto3.getEnumType(EnvironmentVariableAdmission), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConfigurationEnvironmentVariableRequest {
    return new UpdateConfigurationEnvironmentVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConfigurationEnvironmentVariableRequest {
    return new UpdateConfigurationEnvironmentVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConfigurationEnvironmentVariableRequest {
    return new UpdateConfigurationEnvironmentVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConfigurationEnvironmentVariableRequest | PlainMessage<UpdateConfigurationEnvironmentVariableRequest> | undefined, b: UpdateConfigurationEnvironmentVariableRequest | PlainMessage<UpdateConfigurationEnvironmentVariableRequest> | undefined): boolean {
    return proto3.util.equals(UpdateConfigurationEnvironmentVariableRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.UpdateConfigurationEnvironmentVariableResponse
 */
export class UpdateConfigurationEnvironmentVariableResponse extends Message<UpdateConfigurationEnvironmentVariableResponse> {
  /**
   * @generated from field: gitpod.v1.ConfigurationEnvironmentVariable environment_variable = 1;
   */
  environmentVariable?: ConfigurationEnvironmentVariable;

  constructor(data?: PartialMessage<UpdateConfigurationEnvironmentVariableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.UpdateConfigurationEnvironmentVariableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variable", kind: "message", T: ConfigurationEnvironmentVariable },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConfigurationEnvironmentVariableResponse {
    return new UpdateConfigurationEnvironmentVariableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConfigurationEnvironmentVariableResponse {
    return new UpdateConfigurationEnvironmentVariableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConfigurationEnvironmentVariableResponse {
    return new UpdateConfigurationEnvironmentVariableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConfigurationEnvironmentVariableResponse | PlainMessage<UpdateConfigurationEnvironmentVariableResponse> | undefined, b: UpdateConfigurationEnvironmentVariableResponse | PlainMessage<UpdateConfigurationEnvironmentVariableResponse> | undefined): boolean {
    return proto3.util.equals(UpdateConfigurationEnvironmentVariableResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.CreateConfigurationEnvironmentVariableRequest
 */
export class CreateConfigurationEnvironmentVariableRequest extends Message<CreateConfigurationEnvironmentVariableRequest> {
  /**
   * @generated from field: string configuration_id = 1;
   */
  configurationId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string value = 3;
   */
  value = "";

  /**
   * @generated from field: gitpod.v1.EnvironmentVariableAdmission admission = 4;
   */
  admission = EnvironmentVariableAdmission.UNSPECIFIED;

  constructor(data?: PartialMessage<CreateConfigurationEnvironmentVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.CreateConfigurationEnvironmentVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "configuration_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "admission", kind: "enum", T: proto3.getEnumType(EnvironmentVariableAdmission) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConfigurationEnvironmentVariableRequest {
    return new CreateConfigurationEnvironmentVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConfigurationEnvironmentVariableRequest {
    return new CreateConfigurationEnvironmentVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConfigurationEnvironmentVariableRequest {
    return new CreateConfigurationEnvironmentVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConfigurationEnvironmentVariableRequest | PlainMessage<CreateConfigurationEnvironmentVariableRequest> | undefined, b: CreateConfigurationEnvironmentVariableRequest | PlainMessage<CreateConfigurationEnvironmentVariableRequest> | undefined): boolean {
    return proto3.util.equals(CreateConfigurationEnvironmentVariableRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.CreateConfigurationEnvironmentVariableResponse
 */
export class CreateConfigurationEnvironmentVariableResponse extends Message<CreateConfigurationEnvironmentVariableResponse> {
  /**
   * @generated from field: gitpod.v1.ConfigurationEnvironmentVariable environment_variable = 1;
   */
  environmentVariable?: ConfigurationEnvironmentVariable;

  constructor(data?: PartialMessage<CreateConfigurationEnvironmentVariableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.CreateConfigurationEnvironmentVariableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variable", kind: "message", T: ConfigurationEnvironmentVariable },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConfigurationEnvironmentVariableResponse {
    return new CreateConfigurationEnvironmentVariableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConfigurationEnvironmentVariableResponse {
    return new CreateConfigurationEnvironmentVariableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConfigurationEnvironmentVariableResponse {
    return new CreateConfigurationEnvironmentVariableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConfigurationEnvironmentVariableResponse | PlainMessage<CreateConfigurationEnvironmentVariableResponse> | undefined, b: CreateConfigurationEnvironmentVariableResponse | PlainMessage<CreateConfigurationEnvironmentVariableResponse> | undefined): boolean {
    return proto3.util.equals(CreateConfigurationEnvironmentVariableResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.DeleteConfigurationEnvironmentVariableRequest
 */
export class DeleteConfigurationEnvironmentVariableRequest extends Message<DeleteConfigurationEnvironmentVariableRequest> {
  /**
   * @generated from field: string environment_variable_id = 1;
   */
  environmentVariableId = "";

  constructor(data?: PartialMessage<DeleteConfigurationEnvironmentVariableRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.DeleteConfigurationEnvironmentVariableRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variable_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConfigurationEnvironmentVariableRequest {
    return new DeleteConfigurationEnvironmentVariableRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConfigurationEnvironmentVariableRequest {
    return new DeleteConfigurationEnvironmentVariableRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConfigurationEnvironmentVariableRequest {
    return new DeleteConfigurationEnvironmentVariableRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConfigurationEnvironmentVariableRequest | PlainMessage<DeleteConfigurationEnvironmentVariableRequest> | undefined, b: DeleteConfigurationEnvironmentVariableRequest | PlainMessage<DeleteConfigurationEnvironmentVariableRequest> | undefined): boolean {
    return proto3.util.equals(DeleteConfigurationEnvironmentVariableRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.DeleteConfigurationEnvironmentVariableResponse
 */
export class DeleteConfigurationEnvironmentVariableResponse extends Message<DeleteConfigurationEnvironmentVariableResponse> {
  constructor(data?: PartialMessage<DeleteConfigurationEnvironmentVariableResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.DeleteConfigurationEnvironmentVariableResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConfigurationEnvironmentVariableResponse {
    return new DeleteConfigurationEnvironmentVariableResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConfigurationEnvironmentVariableResponse {
    return new DeleteConfigurationEnvironmentVariableResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConfigurationEnvironmentVariableResponse {
    return new DeleteConfigurationEnvironmentVariableResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConfigurationEnvironmentVariableResponse | PlainMessage<DeleteConfigurationEnvironmentVariableResponse> | undefined, b: DeleteConfigurationEnvironmentVariableResponse | PlainMessage<DeleteConfigurationEnvironmentVariableResponse> | undefined): boolean {
    return proto3.util.equals(DeleteConfigurationEnvironmentVariableResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ResolveWorkspaceEnvironmentVariablesRequest
 */
export class ResolveWorkspaceEnvironmentVariablesRequest extends Message<ResolveWorkspaceEnvironmentVariablesRequest> {
  /**
   * @generated from field: string workspace_id = 1;
   */
  workspaceId = "";

  constructor(data?: PartialMessage<ResolveWorkspaceEnvironmentVariablesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ResolveWorkspaceEnvironmentVariablesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "workspace_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveWorkspaceEnvironmentVariablesRequest {
    return new ResolveWorkspaceEnvironmentVariablesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveWorkspaceEnvironmentVariablesRequest {
    return new ResolveWorkspaceEnvironmentVariablesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveWorkspaceEnvironmentVariablesRequest {
    return new ResolveWorkspaceEnvironmentVariablesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ResolveWorkspaceEnvironmentVariablesRequest | PlainMessage<ResolveWorkspaceEnvironmentVariablesRequest> | undefined, b: ResolveWorkspaceEnvironmentVariablesRequest | PlainMessage<ResolveWorkspaceEnvironmentVariablesRequest> | undefined): boolean {
    return proto3.util.equals(ResolveWorkspaceEnvironmentVariablesRequest, a, b);
  }
}

/**
 * @generated from message gitpod.v1.ResolveWorkspaceEnvironmentVariablesResponse
 */
export class ResolveWorkspaceEnvironmentVariablesResponse extends Message<ResolveWorkspaceEnvironmentVariablesResponse> {
  /**
   * @generated from field: repeated gitpod.v1.EnvironmentVariable environment_variables = 1;
   */
  environmentVariables: EnvironmentVariable[] = [];

  constructor(data?: PartialMessage<ResolveWorkspaceEnvironmentVariablesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.ResolveWorkspaceEnvironmentVariablesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_variables", kind: "message", T: EnvironmentVariable, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveWorkspaceEnvironmentVariablesResponse {
    return new ResolveWorkspaceEnvironmentVariablesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveWorkspaceEnvironmentVariablesResponse {
    return new ResolveWorkspaceEnvironmentVariablesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveWorkspaceEnvironmentVariablesResponse {
    return new ResolveWorkspaceEnvironmentVariablesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ResolveWorkspaceEnvironmentVariablesResponse | PlainMessage<ResolveWorkspaceEnvironmentVariablesResponse> | undefined, b: ResolveWorkspaceEnvironmentVariablesResponse | PlainMessage<ResolveWorkspaceEnvironmentVariablesResponse> | undefined): boolean {
    return proto3.util.equals(ResolveWorkspaceEnvironmentVariablesResponse, a, b);
  }
}

/**
 * @generated from message gitpod.v1.EnvironmentVariable
 */
export class EnvironmentVariable extends Message<EnvironmentVariable> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string value = 2;
   */
  value = "";

  constructor(data?: PartialMessage<EnvironmentVariable>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "gitpod.v1.EnvironmentVariable";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnvironmentVariable {
    return new EnvironmentVariable().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnvironmentVariable {
    return new EnvironmentVariable().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnvironmentVariable {
    return new EnvironmentVariable().fromJsonString(jsonString, options);
  }

  static equals(a: EnvironmentVariable | PlainMessage<EnvironmentVariable> | undefined, b: EnvironmentVariable | PlainMessage<EnvironmentVariable> | undefined): boolean {
    return proto3.util.equals(EnvironmentVariable, a, b);
  }
}
