// Copyright (c) 2024 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: gitpod/v1/prebuild.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListOrganizationPrebuildsRequest_Filter_State int32

const (
	ListOrganizationPrebuildsRequest_Filter_STATE_UNSPECIFIED ListOrganizationPrebuildsRequest_Filter_State = 0
	ListOrganizationPrebuildsRequest_Filter_STATE_SUCCEEDED   ListOrganizationPrebuildsRequest_Filter_State = 1
	ListOrganizationPrebuildsRequest_Filter_STATE_FAILED      ListOrganizationPrebuildsRequest_Filter_State = 2
	ListOrganizationPrebuildsRequest_Filter_STATE_UNFINISHED  ListOrganizationPrebuildsRequest_Filter_State = 3
)

// Enum value maps for ListOrganizationPrebuildsRequest_Filter_State.
var (
	ListOrganizationPrebuildsRequest_Filter_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "STATE_SUCCEEDED",
		2: "STATE_FAILED",
		3: "STATE_UNFINISHED",
	}
	ListOrganizationPrebuildsRequest_Filter_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"STATE_SUCCEEDED":   1,
		"STATE_FAILED":      2,
		"STATE_UNFINISHED":  3,
	}
)

func (x ListOrganizationPrebuildsRequest_Filter_State) Enum() *ListOrganizationPrebuildsRequest_Filter_State {
	p := new(ListOrganizationPrebuildsRequest_Filter_State)
	*p = x
	return p
}

func (x ListOrganizationPrebuildsRequest_Filter_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOrganizationPrebuildsRequest_Filter_State) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_v1_prebuild_proto_enumTypes[0].Descriptor()
}

func (ListOrganizationPrebuildsRequest_Filter_State) Type() protoreflect.EnumType {
	return &file_gitpod_v1_prebuild_proto_enumTypes[0]
}

func (x ListOrganizationPrebuildsRequest_Filter_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOrganizationPrebuildsRequest_Filter_State.Descriptor instead.
func (ListOrganizationPrebuildsRequest_Filter_State) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{10, 0, 0}
}

type PrebuildPhase_Phase int32

const (
	PrebuildPhase_PHASE_UNSPECIFIED PrebuildPhase_Phase = 0
	PrebuildPhase_PHASE_QUEUED      PrebuildPhase_Phase = 1
	PrebuildPhase_PHASE_BUILDING    PrebuildPhase_Phase = 2
	PrebuildPhase_PHASE_ABORTED     PrebuildPhase_Phase = 3
	PrebuildPhase_PHASE_TIMEOUT     PrebuildPhase_Phase = 4
	PrebuildPhase_PHASE_AVAILABLE   PrebuildPhase_Phase = 5
	PrebuildPhase_PHASE_FAILED      PrebuildPhase_Phase = 6
)

// Enum value maps for PrebuildPhase_Phase.
var (
	PrebuildPhase_Phase_name = map[int32]string{
		0: "PHASE_UNSPECIFIED",
		1: "PHASE_QUEUED",
		2: "PHASE_BUILDING",
		3: "PHASE_ABORTED",
		4: "PHASE_TIMEOUT",
		5: "PHASE_AVAILABLE",
		6: "PHASE_FAILED",
	}
	PrebuildPhase_Phase_value = map[string]int32{
		"PHASE_UNSPECIFIED": 0,
		"PHASE_QUEUED":      1,
		"PHASE_BUILDING":    2,
		"PHASE_ABORTED":     3,
		"PHASE_TIMEOUT":     4,
		"PHASE_AVAILABLE":   5,
		"PHASE_FAILED":      6,
	}
)

func (x PrebuildPhase_Phase) Enum() *PrebuildPhase_Phase {
	p := new(PrebuildPhase_Phase)
	*p = x
	return p
}

func (x PrebuildPhase_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrebuildPhase_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_v1_prebuild_proto_enumTypes[1].Descriptor()
}

func (PrebuildPhase_Phase) Type() protoreflect.EnumType {
	return &file_gitpod_v1_prebuild_proto_enumTypes[1]
}

func (x PrebuildPhase_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrebuildPhase_Phase.Descriptor instead.
func (PrebuildPhase_Phase) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{14, 0}
}

type GetPrebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrebuildId string `protobuf:"bytes,1,opt,name=prebuild_id,json=prebuildId,proto3" json:"prebuild_id,omitempty"`
}

func (x *GetPrebuildRequest) Reset() {
	*x = GetPrebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrebuildRequest) ProtoMessage() {}

func (x *GetPrebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrebuildRequest.ProtoReflect.Descriptor instead.
func (*GetPrebuildRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{0}
}

func (x *GetPrebuildRequest) GetPrebuildId() string {
	if x != nil {
		return x.PrebuildId
	}
	return ""
}

type GetPrebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prebuild *Prebuild `protobuf:"bytes,1,opt,name=prebuild,proto3" json:"prebuild,omitempty"`
}

func (x *GetPrebuildResponse) Reset() {
	*x = GetPrebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPrebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrebuildResponse) ProtoMessage() {}

func (x *GetPrebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrebuildResponse.ProtoReflect.Descriptor instead.
func (*GetPrebuildResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{1}
}

func (x *GetPrebuildResponse) GetPrebuild() *Prebuild {
	if x != nil {
		return x.Prebuild
	}
	return nil
}

type ListPrebuildsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// it is for backward compatiblity with the current dashboard, use prebuild_id
	// instead
	//
	// Deprecated: Do not use.
	WorkspaceId     string `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ConfigurationId string `protobuf:"bytes,3,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	GitRef          string `protobuf:"bytes,4,opt,name=git_ref,json=gitRef,proto3" json:"git_ref,omitempty"`
}

func (x *ListPrebuildsRequest) Reset() {
	*x = ListPrebuildsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrebuildsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrebuildsRequest) ProtoMessage() {}

func (x *ListPrebuildsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrebuildsRequest.ProtoReflect.Descriptor instead.
func (*ListPrebuildsRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{2}
}

func (x *ListPrebuildsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Deprecated: Do not use.
func (x *ListPrebuildsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ListPrebuildsRequest) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *ListPrebuildsRequest) GetGitRef() string {
	if x != nil {
		return x.GitRef
	}
	return ""
}

type ListPrebuildsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Prebuilds  []*Prebuild         `protobuf:"bytes,2,rep,name=prebuilds,proto3" json:"prebuilds,omitempty"`
}

func (x *ListPrebuildsResponse) Reset() {
	*x = ListPrebuildsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPrebuildsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrebuildsResponse) ProtoMessage() {}

func (x *ListPrebuildsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrebuildsResponse.ProtoReflect.Descriptor instead.
func (*ListPrebuildsResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{3}
}

func (x *ListPrebuildsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPrebuildsResponse) GetPrebuilds() []*Prebuild {
	if x != nil {
		return x.Prebuilds
	}
	return nil
}

type StartPrebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigurationId string `protobuf:"bytes,1,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	GitRef          string `protobuf:"bytes,2,opt,name=git_ref,json=gitRef,proto3" json:"git_ref,omitempty"`
}

func (x *StartPrebuildRequest) Reset() {
	*x = StartPrebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPrebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPrebuildRequest) ProtoMessage() {}

func (x *StartPrebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPrebuildRequest.ProtoReflect.Descriptor instead.
func (*StartPrebuildRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{4}
}

func (x *StartPrebuildRequest) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *StartPrebuildRequest) GetGitRef() string {
	if x != nil {
		return x.GitRef
	}
	return ""
}

type StartPrebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrebuildId string `protobuf:"bytes,1,opt,name=prebuild_id,json=prebuildId,proto3" json:"prebuild_id,omitempty"`
}

func (x *StartPrebuildResponse) Reset() {
	*x = StartPrebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPrebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPrebuildResponse) ProtoMessage() {}

func (x *StartPrebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPrebuildResponse.ProtoReflect.Descriptor instead.
func (*StartPrebuildResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{5}
}

func (x *StartPrebuildResponse) GetPrebuildId() string {
	if x != nil {
		return x.PrebuildId
	}
	return ""
}

type CancelPrebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrebuildId string `protobuf:"bytes,1,opt,name=prebuild_id,json=prebuildId,proto3" json:"prebuild_id,omitempty"`
}

func (x *CancelPrebuildRequest) Reset() {
	*x = CancelPrebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPrebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPrebuildRequest) ProtoMessage() {}

func (x *CancelPrebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPrebuildRequest.ProtoReflect.Descriptor instead.
func (*CancelPrebuildRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{6}
}

func (x *CancelPrebuildRequest) GetPrebuildId() string {
	if x != nil {
		return x.PrebuildId
	}
	return ""
}

type CancelPrebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelPrebuildResponse) Reset() {
	*x = CancelPrebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelPrebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPrebuildResponse) ProtoMessage() {}

func (x *CancelPrebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPrebuildResponse.ProtoReflect.Descriptor instead.
func (*CancelPrebuildResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{7}
}

type WatchPrebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Scope:
	//
	//	*WatchPrebuildRequest_PrebuildId
	//	*WatchPrebuildRequest_ConfigurationId
	Scope isWatchPrebuildRequest_Scope `protobuf_oneof:"scope"`
}

func (x *WatchPrebuildRequest) Reset() {
	*x = WatchPrebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPrebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPrebuildRequest) ProtoMessage() {}

func (x *WatchPrebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPrebuildRequest.ProtoReflect.Descriptor instead.
func (*WatchPrebuildRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{8}
}

func (m *WatchPrebuildRequest) GetScope() isWatchPrebuildRequest_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (x *WatchPrebuildRequest) GetPrebuildId() string {
	if x, ok := x.GetScope().(*WatchPrebuildRequest_PrebuildId); ok {
		return x.PrebuildId
	}
	return ""
}

func (x *WatchPrebuildRequest) GetConfigurationId() string {
	if x, ok := x.GetScope().(*WatchPrebuildRequest_ConfigurationId); ok {
		return x.ConfigurationId
	}
	return ""
}

type isWatchPrebuildRequest_Scope interface {
	isWatchPrebuildRequest_Scope()
}

type WatchPrebuildRequest_PrebuildId struct {
	PrebuildId string `protobuf:"bytes,1,opt,name=prebuild_id,json=prebuildId,proto3,oneof"`
}

type WatchPrebuildRequest_ConfigurationId struct {
	ConfigurationId string `protobuf:"bytes,2,opt,name=configuration_id,json=configurationId,proto3,oneof"`
}

func (*WatchPrebuildRequest_PrebuildId) isWatchPrebuildRequest_Scope() {}

func (*WatchPrebuildRequest_ConfigurationId) isWatchPrebuildRequest_Scope() {}

type WatchPrebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prebuild *Prebuild `protobuf:"bytes,1,opt,name=prebuild,proto3" json:"prebuild,omitempty"`
}

func (x *WatchPrebuildResponse) Reset() {
	*x = WatchPrebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPrebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPrebuildResponse) ProtoMessage() {}

func (x *WatchPrebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPrebuildResponse.ProtoReflect.Descriptor instead.
func (*WatchPrebuildResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{9}
}

func (x *WatchPrebuildResponse) GetPrebuild() *Prebuild {
	if x != nil {
		return x.Prebuild
	}
	return nil
}

type ListOrganizationPrebuildsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination     *PaginationRequest                       `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	OrganizationId string                                   `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Filter         *ListOrganizationPrebuildsRequest_Filter `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Sort           []*Sort                                  `protobuf:"bytes,4,rep,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListOrganizationPrebuildsRequest) Reset() {
	*x = ListOrganizationPrebuildsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationPrebuildsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationPrebuildsRequest) ProtoMessage() {}

func (x *ListOrganizationPrebuildsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationPrebuildsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationPrebuildsRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{10}
}

func (x *ListOrganizationPrebuildsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListOrganizationPrebuildsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListOrganizationPrebuildsRequest) GetFilter() *ListOrganizationPrebuildsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListOrganizationPrebuildsRequest) GetSort() []*Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ListOrganizationPrebuildsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Prebuilds  []*Prebuild         `protobuf:"bytes,2,rep,name=prebuilds,proto3" json:"prebuilds,omitempty"`
}

func (x *ListOrganizationPrebuildsResponse) Reset() {
	*x = ListOrganizationPrebuildsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationPrebuildsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationPrebuildsResponse) ProtoMessage() {}

func (x *ListOrganizationPrebuildsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationPrebuildsResponse.ProtoReflect.Descriptor instead.
func (*ListOrganizationPrebuildsResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{11}
}

func (x *ListOrganizationPrebuildsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListOrganizationPrebuildsResponse) GetPrebuilds() []*Prebuild {
	if x != nil {
		return x.Prebuilds
	}
	return nil
}

type Prebuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// it is for backward compatiblity with the current dashboard, use id instead
	//
	// Deprecated: Do not use.
	WorkspaceId       string          `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	BasedOnPrebuildId string          `protobuf:"bytes,3,opt,name=based_on_prebuild_id,json=basedOnPrebuildId,proto3" json:"based_on_prebuild_id,omitempty"`
	ConfigurationId   string          `protobuf:"bytes,4,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	Ref               string          `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	Commit            *Commit         `protobuf:"bytes,6,opt,name=commit,proto3" json:"commit,omitempty"`
	ContextUrl        string          `protobuf:"bytes,7,opt,name=context_url,json=contextUrl,proto3" json:"context_url,omitempty"`
	Status            *PrebuildStatus `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	ConfigurationName string          `protobuf:"bytes,9,opt,name=configuration_name,json=configurationName,proto3" json:"configuration_name,omitempty"`
}

func (x *Prebuild) Reset() {
	*x = Prebuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prebuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prebuild) ProtoMessage() {}

func (x *Prebuild) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prebuild.ProtoReflect.Descriptor instead.
func (*Prebuild) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{12}
}

func (x *Prebuild) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Deprecated: Do not use.
func (x *Prebuild) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *Prebuild) GetBasedOnPrebuildId() string {
	if x != nil {
		return x.BasedOnPrebuildId
	}
	return ""
}

func (x *Prebuild) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *Prebuild) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Prebuild) GetCommit() *Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *Prebuild) GetContextUrl() string {
	if x != nil {
		return x.ContextUrl
	}
	return ""
}

func (x *Prebuild) GetStatus() *PrebuildStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Prebuild) GetConfigurationName() string {
	if x != nil {
		return x.ConfigurationName
	}
	return ""
}

type PrebuildStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase     *PrebuildPhase         `protobuf:"bytes,1,opt,name=phase,proto3" json:"phase,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// message is an optional human-readable message detailing the current phase
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	LogUrl  string `protobuf:"bytes,4,opt,name=log_url,json=logUrl,proto3" json:"log_url,omitempty"`
}

func (x *PrebuildStatus) Reset() {
	*x = PrebuildStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrebuildStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrebuildStatus) ProtoMessage() {}

func (x *PrebuildStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrebuildStatus.ProtoReflect.Descriptor instead.
func (*PrebuildStatus) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{13}
}

func (x *PrebuildStatus) GetPhase() *PrebuildPhase {
	if x != nil {
		return x.Phase
	}
	return nil
}

func (x *PrebuildStatus) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PrebuildStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PrebuildStatus) GetLogUrl() string {
	if x != nil {
		return x.LogUrl
	}
	return ""
}

type PrebuildPhase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name PrebuildPhase_Phase `protobuf:"varint,1,opt,name=name,proto3,enum=gitpod.v1.PrebuildPhase_Phase" json:"name,omitempty"`
}

func (x *PrebuildPhase) Reset() {
	*x = PrebuildPhase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrebuildPhase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrebuildPhase) ProtoMessage() {}

func (x *PrebuildPhase) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrebuildPhase.ProtoReflect.Descriptor instead.
func (*PrebuildPhase) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{14}
}

func (x *PrebuildPhase) GetName() PrebuildPhase_Phase {
	if x != nil {
		return x.Name
	}
	return PrebuildPhase_PHASE_UNSPECIFIED
}

type ListOrganizationPrebuildsRequest_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State         ListOrganizationPrebuildsRequest_Filter_State          `protobuf:"varint,1,opt,name=state,proto3,enum=gitpod.v1.ListOrganizationPrebuildsRequest_Filter_State" json:"state,omitempty"`
	Configuration *ListOrganizationPrebuildsRequest_Filter_Configuration `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// Filter the search down by searching for configuration names matching the
	// query
	SearchTerm string `protobuf:"bytes,3,opt,name=search_term,json=searchTerm,proto3" json:"search_term,omitempty"`
}

func (x *ListOrganizationPrebuildsRequest_Filter) Reset() {
	*x = ListOrganizationPrebuildsRequest_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationPrebuildsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationPrebuildsRequest_Filter) ProtoMessage() {}

func (x *ListOrganizationPrebuildsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationPrebuildsRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListOrganizationPrebuildsRequest_Filter) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ListOrganizationPrebuildsRequest_Filter) GetState() ListOrganizationPrebuildsRequest_Filter_State {
	if x != nil {
		return x.State
	}
	return ListOrganizationPrebuildsRequest_Filter_STATE_UNSPECIFIED
}

func (x *ListOrganizationPrebuildsRequest_Filter) GetConfiguration() *ListOrganizationPrebuildsRequest_Filter_Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ListOrganizationPrebuildsRequest_Filter) GetSearchTerm() string {
	if x != nil {
		return x.SearchTerm
	}
	return ""
}

type ListOrganizationPrebuildsRequest_Filter_Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Branch string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *ListOrganizationPrebuildsRequest_Filter_Configuration) Reset() {
	*x = ListOrganizationPrebuildsRequest_Filter_Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_prebuild_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrganizationPrebuildsRequest_Filter_Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationPrebuildsRequest_Filter_Configuration) ProtoMessage() {}

func (x *ListOrganizationPrebuildsRequest_Filter_Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_prebuild_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationPrebuildsRequest_Filter_Configuration.ProtoReflect.Descriptor instead.
func (*ListOrganizationPrebuildsRequest_Filter_Configuration) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_prebuild_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *ListOrganizationPrebuildsRequest_Filter_Configuration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListOrganizationPrebuildsRequest_Filter_Configuration) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

var File_gitpod_v1_prebuild_proto protoreflect.FileDescriptor

var file_gitpod_v1_prebuild_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x08, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22,
	0xbf, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x52, 0x65,
	0x66, 0x22, 0x89, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x52, 0x09, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x22, 0x5a, 0x0a,
	0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x69, 0x74, 0x52, 0x65, 0x66, 0x22, 0x38, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x15, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x18, 0x0a,
	0x16, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x14, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x08, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x22, 0xf4, 0x04, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4a,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x1a,
	0xf7, 0x02, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x72, 0x6d, 0x1a, 0x37, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x22, 0x5b, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x46,
	0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x03, 0x22, 0x95, 0x01, 0x0a, 0x21, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31,
	0x0a, 0x09, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x09, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x73, 0x22, 0xdd, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x6f,
	0x6e, 0x5f, 0x70, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x73, 0x65, 0x64, 0x4f, 0x6e, 0x50, 0x72, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x72, 0x65, 0x66, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xae, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x67,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x55,
	0x72, 0x6c, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x48, 0x41,
	0x53, 0x45, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50,
	0x48, 0x41, 0x53, 0x45, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x11, 0x0a, 0x0d, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x4f, 0x55, 0x54, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x5f, 0x41,
	0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x48,
	0x41, 0x53, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x32, 0xb8, 0x04, 0x0a,
	0x0f, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x54, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x69, 0x74,
	0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1d,
	0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x54, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x12, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x78, 0x0a,
	0x19, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x2b, 0x2e, 0x67, 0x69, 0x74,
	0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d, 0x69, 0x6f, 0x2f,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitpod_v1_prebuild_proto_rawDescOnce sync.Once
	file_gitpod_v1_prebuild_proto_rawDescData = file_gitpod_v1_prebuild_proto_rawDesc
)

func file_gitpod_v1_prebuild_proto_rawDescGZIP() []byte {
	file_gitpod_v1_prebuild_proto_rawDescOnce.Do(func() {
		file_gitpod_v1_prebuild_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitpod_v1_prebuild_proto_rawDescData)
	})
	return file_gitpod_v1_prebuild_proto_rawDescData
}

var file_gitpod_v1_prebuild_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gitpod_v1_prebuild_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_gitpod_v1_prebuild_proto_goTypes = []interface{}{
	(ListOrganizationPrebuildsRequest_Filter_State)(0),            // 0: gitpod.v1.ListOrganizationPrebuildsRequest.Filter.State
	(PrebuildPhase_Phase)(0),                                      // 1: gitpod.v1.PrebuildPhase.Phase
	(*GetPrebuildRequest)(nil),                                    // 2: gitpod.v1.GetPrebuildRequest
	(*GetPrebuildResponse)(nil),                                   // 3: gitpod.v1.GetPrebuildResponse
	(*ListPrebuildsRequest)(nil),                                  // 4: gitpod.v1.ListPrebuildsRequest
	(*ListPrebuildsResponse)(nil),                                 // 5: gitpod.v1.ListPrebuildsResponse
	(*StartPrebuildRequest)(nil),                                  // 6: gitpod.v1.StartPrebuildRequest
	(*StartPrebuildResponse)(nil),                                 // 7: gitpod.v1.StartPrebuildResponse
	(*CancelPrebuildRequest)(nil),                                 // 8: gitpod.v1.CancelPrebuildRequest
	(*CancelPrebuildResponse)(nil),                                // 9: gitpod.v1.CancelPrebuildResponse
	(*WatchPrebuildRequest)(nil),                                  // 10: gitpod.v1.WatchPrebuildRequest
	(*WatchPrebuildResponse)(nil),                                 // 11: gitpod.v1.WatchPrebuildResponse
	(*ListOrganizationPrebuildsRequest)(nil),                      // 12: gitpod.v1.ListOrganizationPrebuildsRequest
	(*ListOrganizationPrebuildsResponse)(nil),                     // 13: gitpod.v1.ListOrganizationPrebuildsResponse
	(*Prebuild)(nil),                                              // 14: gitpod.v1.Prebuild
	(*PrebuildStatus)(nil),                                        // 15: gitpod.v1.PrebuildStatus
	(*PrebuildPhase)(nil),                                         // 16: gitpod.v1.PrebuildPhase
	(*ListOrganizationPrebuildsRequest_Filter)(nil),               // 17: gitpod.v1.ListOrganizationPrebuildsRequest.Filter
	(*ListOrganizationPrebuildsRequest_Filter_Configuration)(nil), // 18: gitpod.v1.ListOrganizationPrebuildsRequest.Filter.Configuration
	(*PaginationRequest)(nil),                                     // 19: gitpod.v1.PaginationRequest
	(*PaginationResponse)(nil),                                    // 20: gitpod.v1.PaginationResponse
	(*Sort)(nil),                                                  // 21: gitpod.v1.Sort
	(*Commit)(nil),                                                // 22: gitpod.v1.Commit
	(*timestamppb.Timestamp)(nil),                                 // 23: google.protobuf.Timestamp
}
var file_gitpod_v1_prebuild_proto_depIdxs = []int32{
	14, // 0: gitpod.v1.GetPrebuildResponse.prebuild:type_name -> gitpod.v1.Prebuild
	19, // 1: gitpod.v1.ListPrebuildsRequest.pagination:type_name -> gitpod.v1.PaginationRequest
	20, // 2: gitpod.v1.ListPrebuildsResponse.pagination:type_name -> gitpod.v1.PaginationResponse
	14, // 3: gitpod.v1.ListPrebuildsResponse.prebuilds:type_name -> gitpod.v1.Prebuild
	14, // 4: gitpod.v1.WatchPrebuildResponse.prebuild:type_name -> gitpod.v1.Prebuild
	19, // 5: gitpod.v1.ListOrganizationPrebuildsRequest.pagination:type_name -> gitpod.v1.PaginationRequest
	17, // 6: gitpod.v1.ListOrganizationPrebuildsRequest.filter:type_name -> gitpod.v1.ListOrganizationPrebuildsRequest.Filter
	21, // 7: gitpod.v1.ListOrganizationPrebuildsRequest.sort:type_name -> gitpod.v1.Sort
	20, // 8: gitpod.v1.ListOrganizationPrebuildsResponse.pagination:type_name -> gitpod.v1.PaginationResponse
	14, // 9: gitpod.v1.ListOrganizationPrebuildsResponse.prebuilds:type_name -> gitpod.v1.Prebuild
	22, // 10: gitpod.v1.Prebuild.commit:type_name -> gitpod.v1.Commit
	15, // 11: gitpod.v1.Prebuild.status:type_name -> gitpod.v1.PrebuildStatus
	16, // 12: gitpod.v1.PrebuildStatus.phase:type_name -> gitpod.v1.PrebuildPhase
	23, // 13: gitpod.v1.PrebuildStatus.start_time:type_name -> google.protobuf.Timestamp
	1,  // 14: gitpod.v1.PrebuildPhase.name:type_name -> gitpod.v1.PrebuildPhase.Phase
	0,  // 15: gitpod.v1.ListOrganizationPrebuildsRequest.Filter.state:type_name -> gitpod.v1.ListOrganizationPrebuildsRequest.Filter.State
	18, // 16: gitpod.v1.ListOrganizationPrebuildsRequest.Filter.configuration:type_name -> gitpod.v1.ListOrganizationPrebuildsRequest.Filter.Configuration
	6,  // 17: gitpod.v1.PrebuildService.StartPrebuild:input_type -> gitpod.v1.StartPrebuildRequest
	8,  // 18: gitpod.v1.PrebuildService.CancelPrebuild:input_type -> gitpod.v1.CancelPrebuildRequest
	2,  // 19: gitpod.v1.PrebuildService.GetPrebuild:input_type -> gitpod.v1.GetPrebuildRequest
	4,  // 20: gitpod.v1.PrebuildService.ListPrebuilds:input_type -> gitpod.v1.ListPrebuildsRequest
	10, // 21: gitpod.v1.PrebuildService.WatchPrebuild:input_type -> gitpod.v1.WatchPrebuildRequest
	12, // 22: gitpod.v1.PrebuildService.ListOrganizationPrebuilds:input_type -> gitpod.v1.ListOrganizationPrebuildsRequest
	7,  // 23: gitpod.v1.PrebuildService.StartPrebuild:output_type -> gitpod.v1.StartPrebuildResponse
	9,  // 24: gitpod.v1.PrebuildService.CancelPrebuild:output_type -> gitpod.v1.CancelPrebuildResponse
	3,  // 25: gitpod.v1.PrebuildService.GetPrebuild:output_type -> gitpod.v1.GetPrebuildResponse
	5,  // 26: gitpod.v1.PrebuildService.ListPrebuilds:output_type -> gitpod.v1.ListPrebuildsResponse
	11, // 27: gitpod.v1.PrebuildService.WatchPrebuild:output_type -> gitpod.v1.WatchPrebuildResponse
	13, // 28: gitpod.v1.PrebuildService.ListOrganizationPrebuilds:output_type -> gitpod.v1.ListOrganizationPrebuildsResponse
	23, // [23:29] is the sub-list for method output_type
	17, // [17:23] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_gitpod_v1_prebuild_proto_init() }
func file_gitpod_v1_prebuild_proto_init() {
	if File_gitpod_v1_prebuild_proto != nil {
		return
	}
	file_gitpod_v1_pagination_proto_init()
	file_gitpod_v1_scm_proto_init()
	file_gitpod_v1_sorting_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gitpod_v1_prebuild_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPrebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrebuildsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPrebuildsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPrebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartPrebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPrebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelPrebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPrebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPrebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationPrebuildsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationPrebuildsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prebuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrebuildStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrebuildPhase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationPrebuildsRequest_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_prebuild_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrganizationPrebuildsRequest_Filter_Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gitpod_v1_prebuild_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*WatchPrebuildRequest_PrebuildId)(nil),
		(*WatchPrebuildRequest_ConfigurationId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitpod_v1_prebuild_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitpod_v1_prebuild_proto_goTypes,
		DependencyIndexes: file_gitpod_v1_prebuild_proto_depIdxs,
		EnumInfos:         file_gitpod_v1_prebuild_proto_enumTypes,
		MessageInfos:      file_gitpod_v1_prebuild_proto_msgTypes,
	}.Build()
	File_gitpod_v1_prebuild_proto = out.File
	file_gitpod_v1_prebuild_proto_rawDesc = nil
	file_gitpod_v1_prebuild_proto_goTypes = nil
	file_gitpod_v1_prebuild_proto_depIdxs = nil
}
