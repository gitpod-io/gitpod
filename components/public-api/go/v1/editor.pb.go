// Copyright (c) 2023 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: gitpod/v1/editor.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Editor_Type int32

const (
	Editor_TYPE_UNSPECIFIED Editor_Type = 0
	Editor_TYPE_BROWSER     Editor_Type = 1
	Editor_TYPE_DESKTOP     Editor_Type = 2
)

// Enum value maps for Editor_Type.
var (
	Editor_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_BROWSER",
		2: "TYPE_DESKTOP",
	}
	Editor_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_BROWSER":     1,
		"TYPE_DESKTOP":     2,
	}
)

func (x Editor_Type) Enum() *Editor_Type {
	p := new(Editor_Type)
	*p = x
	return p
}

func (x Editor_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Editor_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_v1_editor_proto_enumTypes[0].Descriptor()
}

func (Editor_Type) Type() protoreflect.EnumType {
	return &file_gitpod_v1_editor_proto_enumTypes[0]
}

func (x Editor_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Editor_Type.Descriptor instead.
func (Editor_Type) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{4, 0}
}

type ListEditorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination contains the pagination options for resources
	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListEditorsRequest) Reset() {
	*x = ListEditorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_editor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEditorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorsRequest) ProtoMessage() {}

func (x *ListEditorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorsRequest.ProtoReflect.Descriptor instead.
func (*ListEditorsRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{0}
}

func (x *ListEditorsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListEditorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pagination contains the pagination options for resources
	Pagination *PaginationResponse `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Editors    []*Editor           `protobuf:"bytes,2,rep,name=editors,proto3" json:"editors,omitempty"`
}

func (x *ListEditorsResponse) Reset() {
	*x = ListEditorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_editor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEditorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorsResponse) ProtoMessage() {}

func (x *ListEditorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorsResponse.ProtoReflect.Descriptor instead.
func (*ListEditorsResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{1}
}

func (x *ListEditorsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListEditorsResponse) GetEditors() []*Editor {
	if x != nil {
		return x.Editors
	}
	return nil
}

type GetEditorInstallationStepsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// editor is the editor to get installation steps
	Editor *EditorReference `protobuf:"bytes,1,opt,name=editor,proto3" json:"editor,omitempty"`
}

func (x *GetEditorInstallationStepsRequest) Reset() {
	*x = GetEditorInstallationStepsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_editor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditorInstallationStepsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditorInstallationStepsRequest) ProtoMessage() {}

func (x *GetEditorInstallationStepsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditorInstallationStepsRequest.ProtoReflect.Descriptor instead.
func (*GetEditorInstallationStepsRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{2}
}

func (x *GetEditorInstallationStepsRequest) GetEditor() *EditorReference {
	if x != nil {
		return x.Editor
	}
	return nil
}

type GetEditorInstallationStepsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steps []string `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty"`
}

func (x *GetEditorInstallationStepsResponse) Reset() {
	*x = GetEditorInstallationStepsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_editor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditorInstallationStepsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditorInstallationStepsResponse) ProtoMessage() {}

func (x *GetEditorInstallationStepsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditorInstallationStepsResponse.ProtoReflect.Descriptor instead.
func (*GetEditorInstallationStepsResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{3}
}

func (x *GetEditorInstallationStepsResponse) GetSteps() []string {
	if x != nil {
		return x.Steps
	}
	return nil
}

type Editor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the editor.
	// It refers to the editor key which can be used in CreateAndStartWorkspace
	// method.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// title is the display name of the editor
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// type is the type of the editor
	Type Editor_Type `protobuf:"varint,3,opt,name=type,proto3,enum=gitpod.v1.Editor_Type" json:"type,omitempty"`
	// logo is the logo url of the editor
	Logo string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	// image_version is the version of the stable editor image
	ImageVersion string `protobuf:"bytes,5,opt,name=image_version,json=imageVersion,proto3" json:"image_version,omitempty"`
	// latest_image_version is the version of the latest editor image
	LatestImageVersion string `protobuf:"bytes,6,opt,name=latest_image_version,json=latestImageVersion,proto3" json:"latest_image_version,omitempty"`
}

func (x *Editor) Reset() {
	*x = Editor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_editor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Editor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Editor) ProtoMessage() {}

func (x *Editor) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Editor.ProtoReflect.Descriptor instead.
func (*Editor) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{4}
}

func (x *Editor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Editor) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Editor) GetType() Editor_Type {
	if x != nil {
		return x.Type
	}
	return Editor_TYPE_UNSPECIFIED
}

func (x *Editor) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Editor) GetImageVersion() string {
	if x != nil {
		return x.ImageVersion
	}
	return ""
}

func (x *Editor) GetLatestImageVersion() string {
	if x != nil {
		return x.LatestImageVersion
	}
	return ""
}

type EditorReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *EditorReference) Reset() {
	*x = EditorReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_editor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorReference) ProtoMessage() {}

func (x *EditorReference) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_editor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorReference.ProtoReflect.Descriptor instead.
func (*EditorReference) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_editor_proto_rawDescGZIP(), []int{5}
}

func (x *EditorReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EditorReference) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_gitpod_v1_editor_proto protoreflect.FileDescriptor

var file_gitpod_v1_editor_proto_rawDesc = []byte{
	0x0a, 0x16, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x52, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x07,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x57, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x65, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06,
	0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x22, 0x3a, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x8b, 0x02, 0x0a,
	0x06, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42,
	0x52, 0x4f, 0x57, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x45, 0x53, 0x4b, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x22, 0x3f, 0x0a, 0x0f, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0xdc, 0x01, 0x0a, 0x0d,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x67,
	0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x2c, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d,
	0x69, 0x6f, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitpod_v1_editor_proto_rawDescOnce sync.Once
	file_gitpod_v1_editor_proto_rawDescData = file_gitpod_v1_editor_proto_rawDesc
)

func file_gitpod_v1_editor_proto_rawDescGZIP() []byte {
	file_gitpod_v1_editor_proto_rawDescOnce.Do(func() {
		file_gitpod_v1_editor_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitpod_v1_editor_proto_rawDescData)
	})
	return file_gitpod_v1_editor_proto_rawDescData
}

var file_gitpod_v1_editor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gitpod_v1_editor_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_gitpod_v1_editor_proto_goTypes = []interface{}{
	(Editor_Type)(0),                           // 0: gitpod.v1.Editor.Type
	(*ListEditorsRequest)(nil),                 // 1: gitpod.v1.ListEditorsRequest
	(*ListEditorsResponse)(nil),                // 2: gitpod.v1.ListEditorsResponse
	(*GetEditorInstallationStepsRequest)(nil),  // 3: gitpod.v1.GetEditorInstallationStepsRequest
	(*GetEditorInstallationStepsResponse)(nil), // 4: gitpod.v1.GetEditorInstallationStepsResponse
	(*Editor)(nil),                             // 5: gitpod.v1.Editor
	(*EditorReference)(nil),                    // 6: gitpod.v1.EditorReference
	(*PaginationRequest)(nil),                  // 7: gitpod.v1.PaginationRequest
	(*PaginationResponse)(nil),                 // 8: gitpod.v1.PaginationResponse
}
var file_gitpod_v1_editor_proto_depIdxs = []int32{
	7, // 0: gitpod.v1.ListEditorsRequest.pagination:type_name -> gitpod.v1.PaginationRequest
	8, // 1: gitpod.v1.ListEditorsResponse.pagination:type_name -> gitpod.v1.PaginationResponse
	5, // 2: gitpod.v1.ListEditorsResponse.editors:type_name -> gitpod.v1.Editor
	6, // 3: gitpod.v1.GetEditorInstallationStepsRequest.editor:type_name -> gitpod.v1.EditorReference
	0, // 4: gitpod.v1.Editor.type:type_name -> gitpod.v1.Editor.Type
	1, // 5: gitpod.v1.EditorService.ListEditors:input_type -> gitpod.v1.ListEditorsRequest
	3, // 6: gitpod.v1.EditorService.GetEditorInstallationSteps:input_type -> gitpod.v1.GetEditorInstallationStepsRequest
	2, // 7: gitpod.v1.EditorService.ListEditors:output_type -> gitpod.v1.ListEditorsResponse
	4, // 8: gitpod.v1.EditorService.GetEditorInstallationSteps:output_type -> gitpod.v1.GetEditorInstallationStepsResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_gitpod_v1_editor_proto_init() }
func file_gitpod_v1_editor_proto_init() {
	if File_gitpod_v1_editor_proto != nil {
		return
	}
	file_gitpod_v1_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gitpod_v1_editor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEditorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_editor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEditorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_editor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditorInstallationStepsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_editor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditorInstallationStepsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_editor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Editor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_editor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitpod_v1_editor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitpod_v1_editor_proto_goTypes,
		DependencyIndexes: file_gitpod_v1_editor_proto_depIdxs,
		EnumInfos:         file_gitpod_v1_editor_proto_enumTypes,
		MessageInfos:      file_gitpod_v1_editor_proto_msgTypes,
	}.Build()
	File_gitpod_v1_editor_proto = out.File
	file_gitpod_v1_editor_proto_rawDesc = nil
	file_gitpod_v1_editor_proto_goTypes = nil
	file_gitpod_v1_editor_proto_depIdxs = nil
}
