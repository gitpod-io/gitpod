// Copyright (c) 2024 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: gitpod/v1/authprovider.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthProviderType int32

const (
	// This value is not allowed.
	AuthProviderType_AUTH_PROVIDER_TYPE_UNSPECIFIED      AuthProviderType = 0
	AuthProviderType_AUTH_PROVIDER_TYPE_GITHUB           AuthProviderType = 1
	AuthProviderType_AUTH_PROVIDER_TYPE_GITLAB           AuthProviderType = 2
	AuthProviderType_AUTH_PROVIDER_TYPE_BITBUCKET        AuthProviderType = 3
	AuthProviderType_AUTH_PROVIDER_TYPE_BITBUCKET_SERVER AuthProviderType = 4
)

// Enum value maps for AuthProviderType.
var (
	AuthProviderType_name = map[int32]string{
		0: "AUTH_PROVIDER_TYPE_UNSPECIFIED",
		1: "AUTH_PROVIDER_TYPE_GITHUB",
		2: "AUTH_PROVIDER_TYPE_GITLAB",
		3: "AUTH_PROVIDER_TYPE_BITBUCKET",
		4: "AUTH_PROVIDER_TYPE_BITBUCKET_SERVER",
	}
	AuthProviderType_value = map[string]int32{
		"AUTH_PROVIDER_TYPE_UNSPECIFIED":      0,
		"AUTH_PROVIDER_TYPE_GITHUB":           1,
		"AUTH_PROVIDER_TYPE_GITLAB":           2,
		"AUTH_PROVIDER_TYPE_BITBUCKET":        3,
		"AUTH_PROVIDER_TYPE_BITBUCKET_SERVER": 4,
	}
)

func (x AuthProviderType) Enum() *AuthProviderType {
	p := new(AuthProviderType)
	*p = x
	return p
}

func (x AuthProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_v1_authprovider_proto_enumTypes[0].Descriptor()
}

func (AuthProviderType) Type() protoreflect.EnumType {
	return &file_gitpod_v1_authprovider_proto_enumTypes[0]
}

func (x AuthProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthProviderType.Descriptor instead.
func (AuthProviderType) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{0}
}

type CreateAuthProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Owner:
	//
	//	*CreateAuthProviderRequest_OwnerId
	//	*CreateAuthProviderRequest_OrganizationId
	Owner        isCreateAuthProviderRequest_Owner `protobuf_oneof:"owner"`
	Type         AuthProviderType                  `protobuf:"varint,3,opt,name=type,proto3,enum=gitpod.v1.AuthProviderType" json:"type,omitempty"`
	Host         string                            `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Oauth2Config *OAuth2Config                     `protobuf:"bytes,5,opt,name=oauth2_config,json=oauth2Config,proto3" json:"oauth2_config,omitempty"`
}

func (x *CreateAuthProviderRequest) Reset() {
	*x = CreateAuthProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthProviderRequest) ProtoMessage() {}

func (x *CreateAuthProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthProviderRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthProviderRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{0}
}

func (m *CreateAuthProviderRequest) GetOwner() isCreateAuthProviderRequest_Owner {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (x *CreateAuthProviderRequest) GetOwnerId() string {
	if x, ok := x.GetOwner().(*CreateAuthProviderRequest_OwnerId); ok {
		return x.OwnerId
	}
	return ""
}

func (x *CreateAuthProviderRequest) GetOrganizationId() string {
	if x, ok := x.GetOwner().(*CreateAuthProviderRequest_OrganizationId); ok {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateAuthProviderRequest) GetType() AuthProviderType {
	if x != nil {
		return x.Type
	}
	return AuthProviderType_AUTH_PROVIDER_TYPE_UNSPECIFIED
}

func (x *CreateAuthProviderRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateAuthProviderRequest) GetOauth2Config() *OAuth2Config {
	if x != nil {
		return x.Oauth2Config
	}
	return nil
}

type isCreateAuthProviderRequest_Owner interface {
	isCreateAuthProviderRequest_Owner()
}

type CreateAuthProviderRequest_OwnerId struct {
	OwnerId string `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3,oneof"`
}

type CreateAuthProviderRequest_OrganizationId struct {
	OrganizationId string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3,oneof"`
}

func (*CreateAuthProviderRequest_OwnerId) isCreateAuthProviderRequest_Owner() {}

func (*CreateAuthProviderRequest_OrganizationId) isCreateAuthProviderRequest_Owner() {}

type CreateAuthProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthProvider *AuthProvider `protobuf:"bytes,1,opt,name=auth_provider,json=authProvider,proto3" json:"auth_provider,omitempty"`
}

func (x *CreateAuthProviderResponse) Reset() {
	*x = CreateAuthProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthProviderResponse) ProtoMessage() {}

func (x *CreateAuthProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthProviderResponse.ProtoReflect.Descriptor instead.
func (*CreateAuthProviderResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAuthProviderResponse) GetAuthProvider() *AuthProvider {
	if x != nil {
		return x.AuthProvider
	}
	return nil
}

type GetAuthProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthProviderId string `protobuf:"bytes,1,opt,name=auth_provider_id,json=authProviderId,proto3" json:"auth_provider_id,omitempty"`
}

func (x *GetAuthProviderRequest) Reset() {
	*x = GetAuthProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthProviderRequest) ProtoMessage() {}

func (x *GetAuthProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthProviderRequest.ProtoReflect.Descriptor instead.
func (*GetAuthProviderRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{2}
}

func (x *GetAuthProviderRequest) GetAuthProviderId() string {
	if x != nil {
		return x.AuthProviderId
	}
	return ""
}

type GetAuthProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthProvider *AuthProvider `protobuf:"bytes,1,opt,name=auth_provider,json=authProvider,proto3" json:"auth_provider,omitempty"`
}

func (x *GetAuthProviderResponse) Reset() {
	*x = GetAuthProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthProviderResponse) ProtoMessage() {}

func (x *GetAuthProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthProviderResponse.ProtoReflect.Descriptor instead.
func (*GetAuthProviderResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{3}
}

func (x *GetAuthProviderResponse) GetAuthProvider() *AuthProvider {
	if x != nil {
		return x.AuthProvider
	}
	return nil
}

type ListAuthProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Types that are assignable to Id:
	//
	//	*ListAuthProvidersRequest_UserId
	//	*ListAuthProvidersRequest_OrganizationId
	Id isListAuthProvidersRequest_Id `protobuf_oneof:"id"`
}

func (x *ListAuthProvidersRequest) Reset() {
	*x = ListAuthProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthProvidersRequest) ProtoMessage() {}

func (x *ListAuthProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthProvidersRequest.ProtoReflect.Descriptor instead.
func (*ListAuthProvidersRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{4}
}

func (x *ListAuthProvidersRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (m *ListAuthProvidersRequest) GetId() isListAuthProvidersRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *ListAuthProvidersRequest) GetUserId() string {
	if x, ok := x.GetId().(*ListAuthProvidersRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *ListAuthProvidersRequest) GetOrganizationId() string {
	if x, ok := x.GetId().(*ListAuthProvidersRequest_OrganizationId); ok {
		return x.OrganizationId
	}
	return ""
}

type isListAuthProvidersRequest_Id interface {
	isListAuthProvidersRequest_Id()
}

type ListAuthProvidersRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type ListAuthProvidersRequest_OrganizationId struct {
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3,oneof"`
}

func (*ListAuthProvidersRequest_UserId) isListAuthProvidersRequest_Id() {}

func (*ListAuthProvidersRequest_OrganizationId) isListAuthProvidersRequest_Id() {}

type ListAuthProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthProviders []*AuthProvider     `protobuf:"bytes,1,rep,name=auth_providers,json=authProviders,proto3" json:"auth_providers,omitempty"`
	Pagination    *PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAuthProvidersResponse) Reset() {
	*x = ListAuthProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthProvidersResponse) ProtoMessage() {}

func (x *ListAuthProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthProvidersResponse.ProtoReflect.Descriptor instead.
func (*ListAuthProvidersResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{5}
}

func (x *ListAuthProvidersResponse) GetAuthProviders() []*AuthProvider {
	if x != nil {
		return x.AuthProviders
	}
	return nil
}

func (x *ListAuthProvidersResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListAuthProviderDescriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Types that are assignable to Id:
	//
	//	*ListAuthProviderDescriptionsRequest_UserId
	//	*ListAuthProviderDescriptionsRequest_OrganizationId
	Id isListAuthProviderDescriptionsRequest_Id `protobuf_oneof:"id"`
}

func (x *ListAuthProviderDescriptionsRequest) Reset() {
	*x = ListAuthProviderDescriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthProviderDescriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthProviderDescriptionsRequest) ProtoMessage() {}

func (x *ListAuthProviderDescriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthProviderDescriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListAuthProviderDescriptionsRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{6}
}

func (x *ListAuthProviderDescriptionsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (m *ListAuthProviderDescriptionsRequest) GetId() isListAuthProviderDescriptionsRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (x *ListAuthProviderDescriptionsRequest) GetUserId() string {
	if x, ok := x.GetId().(*ListAuthProviderDescriptionsRequest_UserId); ok {
		return x.UserId
	}
	return ""
}

func (x *ListAuthProviderDescriptionsRequest) GetOrganizationId() string {
	if x, ok := x.GetId().(*ListAuthProviderDescriptionsRequest_OrganizationId); ok {
		return x.OrganizationId
	}
	return ""
}

type isListAuthProviderDescriptionsRequest_Id interface {
	isListAuthProviderDescriptionsRequest_Id()
}

type ListAuthProviderDescriptionsRequest_UserId struct {
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof"`
}

type ListAuthProviderDescriptionsRequest_OrganizationId struct {
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3,oneof"`
}

func (*ListAuthProviderDescriptionsRequest_UserId) isListAuthProviderDescriptionsRequest_Id() {}

func (*ListAuthProviderDescriptionsRequest_OrganizationId) isListAuthProviderDescriptionsRequest_Id() {
}

type ListAuthProviderDescriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptions []*AuthProviderDescription `protobuf:"bytes,1,rep,name=descriptions,proto3" json:"descriptions,omitempty"`
	Pagination   *PaginationResponse        `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAuthProviderDescriptionsResponse) Reset() {
	*x = ListAuthProviderDescriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAuthProviderDescriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthProviderDescriptionsResponse) ProtoMessage() {}

func (x *ListAuthProviderDescriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuthProviderDescriptionsResponse.ProtoReflect.Descriptor instead.
func (*ListAuthProviderDescriptionsResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{7}
}

func (x *ListAuthProviderDescriptionsResponse) GetDescriptions() []*AuthProviderDescription {
	if x != nil {
		return x.Descriptions
	}
	return nil
}

func (x *ListAuthProviderDescriptionsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type UpdateAuthProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthProviderId string  `protobuf:"bytes,1,opt,name=auth_provider_id,json=authProviderId,proto3" json:"auth_provider_id,omitempty"`
	ClientId       *string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	ClientSecret   *string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3,oneof" json:"client_secret,omitempty"`
}

func (x *UpdateAuthProviderRequest) Reset() {
	*x = UpdateAuthProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthProviderRequest) ProtoMessage() {}

func (x *UpdateAuthProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthProviderRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuthProviderRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAuthProviderRequest) GetAuthProviderId() string {
	if x != nil {
		return x.AuthProviderId
	}
	return ""
}

func (x *UpdateAuthProviderRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *UpdateAuthProviderRequest) GetClientSecret() string {
	if x != nil && x.ClientSecret != nil {
		return *x.ClientSecret
	}
	return ""
}

type UpdateAuthProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthProvider *AuthProvider `protobuf:"bytes,1,opt,name=auth_provider,json=authProvider,proto3" json:"auth_provider,omitempty"`
}

func (x *UpdateAuthProviderResponse) Reset() {
	*x = UpdateAuthProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthProviderResponse) ProtoMessage() {}

func (x *UpdateAuthProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthProviderResponse.ProtoReflect.Descriptor instead.
func (*UpdateAuthProviderResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAuthProviderResponse) GetAuthProvider() *AuthProvider {
	if x != nil {
		return x.AuthProvider
	}
	return nil
}

type DeleteAuthProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthProviderId string `protobuf:"bytes,1,opt,name=auth_provider_id,json=authProviderId,proto3" json:"auth_provider_id,omitempty"`
}

func (x *DeleteAuthProviderRequest) Reset() {
	*x = DeleteAuthProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthProviderRequest) ProtoMessage() {}

func (x *DeleteAuthProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthProviderRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuthProviderRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteAuthProviderRequest) GetAuthProviderId() string {
	if x != nil {
		return x.AuthProviderId
	}
	return ""
}

type DeleteAuthProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAuthProviderResponse) Reset() {
	*x = DeleteAuthProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthProviderResponse) ProtoMessage() {}

func (x *DeleteAuthProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthProviderResponse.ProtoReflect.Descriptor instead.
func (*DeleteAuthProviderResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{11}
}

type AuthProviderDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type        AuthProviderType `protobuf:"varint,4,opt,name=type,proto3,enum=gitpod.v1.AuthProviderType" json:"type,omitempty"`
	Host        string           `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	Icon        string           `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Description string           `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AuthProviderDescription) Reset() {
	*x = AuthProviderDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProviderDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProviderDescription) ProtoMessage() {}

func (x *AuthProviderDescription) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProviderDescription.ProtoReflect.Descriptor instead.
func (*AuthProviderDescription) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{12}
}

func (x *AuthProviderDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthProviderDescription) GetType() AuthProviderType {
	if x != nil {
		return x.Type
	}
	return AuthProviderType_AUTH_PROVIDER_TYPE_UNSPECIFIED
}

func (x *AuthProviderDescription) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AuthProviderDescription) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AuthProviderDescription) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AuthProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Owner:
	//
	//	*AuthProvider_OwnerId
	//	*AuthProvider_OrganizationId
	Owner        isAuthProvider_Owner `protobuf_oneof:"owner"`
	Type         AuthProviderType     `protobuf:"varint,4,opt,name=type,proto3,enum=gitpod.v1.AuthProviderType" json:"type,omitempty"`
	Host         string               `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	Icon         string               `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	Description  string               `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	SettingsUrl  string               `protobuf:"bytes,8,opt,name=settings_url,json=settingsUrl,proto3" json:"settings_url,omitempty"`
	Verified     bool                 `protobuf:"varint,9,opt,name=verified,proto3" json:"verified,omitempty"`
	EnableLogin  bool                 `protobuf:"varint,10,opt,name=enable_login,json=enableLogin,proto3" json:"enable_login,omitempty"`
	Scopes       []string             `protobuf:"bytes,11,rep,name=scopes,proto3" json:"scopes,omitempty"`
	Oauth2Config *OAuth2Config        `protobuf:"bytes,12,opt,name=oauth2_config,json=oauth2Config,proto3" json:"oauth2_config,omitempty"`
}

func (x *AuthProvider) Reset() {
	*x = AuthProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvider) ProtoMessage() {}

func (x *AuthProvider) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProvider.ProtoReflect.Descriptor instead.
func (*AuthProvider) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{13}
}

func (x *AuthProvider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *AuthProvider) GetOwner() isAuthProvider_Owner {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (x *AuthProvider) GetOwnerId() string {
	if x, ok := x.GetOwner().(*AuthProvider_OwnerId); ok {
		return x.OwnerId
	}
	return ""
}

func (x *AuthProvider) GetOrganizationId() string {
	if x, ok := x.GetOwner().(*AuthProvider_OrganizationId); ok {
		return x.OrganizationId
	}
	return ""
}

func (x *AuthProvider) GetType() AuthProviderType {
	if x != nil {
		return x.Type
	}
	return AuthProviderType_AUTH_PROVIDER_TYPE_UNSPECIFIED
}

func (x *AuthProvider) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AuthProvider) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AuthProvider) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AuthProvider) GetSettingsUrl() string {
	if x != nil {
		return x.SettingsUrl
	}
	return ""
}

func (x *AuthProvider) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *AuthProvider) GetEnableLogin() bool {
	if x != nil {
		return x.EnableLogin
	}
	return false
}

func (x *AuthProvider) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *AuthProvider) GetOauth2Config() *OAuth2Config {
	if x != nil {
		return x.Oauth2Config
	}
	return nil
}

type isAuthProvider_Owner interface {
	isAuthProvider_Owner()
}

type AuthProvider_OwnerId struct {
	OwnerId string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3,oneof"`
}

type AuthProvider_OrganizationId struct {
	OrganizationId string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3,oneof"`
}

func (*AuthProvider_OwnerId) isAuthProvider_Owner() {}

func (*AuthProvider_OrganizationId) isAuthProvider_Owner() {}

type OAuth2Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
}

func (x *OAuth2Config) Reset() {
	*x = OAuth2Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_v1_authprovider_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth2Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2Config) ProtoMessage() {}

func (x *OAuth2Config) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_v1_authprovider_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth2Config.ProtoReflect.Descriptor instead.
func (*OAuth2Config) Descriptor() ([]byte, []int) {
	return file_gitpod_v1_authprovider_proto_rawDescGZIP(), []int{14}
}

func (x *OAuth2Config) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuth2Config) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

var File_gitpod_v1_authprovider_proto protoreflect.FileDescriptor

var file_gitpod_v1_authprovider_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x67, 0x69, 0x74, 0x70, 0x6f,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x0d, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x07,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x22, 0xa4, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x42, 0x04, 0x0a, 0x02, 0x69, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x28, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x5a, 0x0a, 0x1a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1c, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x17,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xa2, 0x03, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x12, 0x3c, 0x0a, 0x0d, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x07,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2a, 0xbf, 0x01, 0x0a, 0x10, 0x41, 0x75,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x1e, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10,
	0x01, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x10, 0x02,
	0x12, 0x20, 0x0a, 0x1c, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x49, 0x54, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54,
	0x10, 0x03, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x49, 0x54, 0x42, 0x55, 0x43, 0x4b,
	0x45, 0x54, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x04, 0x32, 0x86, 0x05, 0x0a, 0x13,
	0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x67, 0x69, 0x74, 0x70,
	0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x69, 0x74,
	0x70, 0x6f, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gitpod_v1_authprovider_proto_rawDescOnce sync.Once
	file_gitpod_v1_authprovider_proto_rawDescData = file_gitpod_v1_authprovider_proto_rawDesc
)

func file_gitpod_v1_authprovider_proto_rawDescGZIP() []byte {
	file_gitpod_v1_authprovider_proto_rawDescOnce.Do(func() {
		file_gitpod_v1_authprovider_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitpod_v1_authprovider_proto_rawDescData)
	})
	return file_gitpod_v1_authprovider_proto_rawDescData
}

var file_gitpod_v1_authprovider_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gitpod_v1_authprovider_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_gitpod_v1_authprovider_proto_goTypes = []interface{}{
	(AuthProviderType)(0),                        // 0: gitpod.v1.AuthProviderType
	(*CreateAuthProviderRequest)(nil),            // 1: gitpod.v1.CreateAuthProviderRequest
	(*CreateAuthProviderResponse)(nil),           // 2: gitpod.v1.CreateAuthProviderResponse
	(*GetAuthProviderRequest)(nil),               // 3: gitpod.v1.GetAuthProviderRequest
	(*GetAuthProviderResponse)(nil),              // 4: gitpod.v1.GetAuthProviderResponse
	(*ListAuthProvidersRequest)(nil),             // 5: gitpod.v1.ListAuthProvidersRequest
	(*ListAuthProvidersResponse)(nil),            // 6: gitpod.v1.ListAuthProvidersResponse
	(*ListAuthProviderDescriptionsRequest)(nil),  // 7: gitpod.v1.ListAuthProviderDescriptionsRequest
	(*ListAuthProviderDescriptionsResponse)(nil), // 8: gitpod.v1.ListAuthProviderDescriptionsResponse
	(*UpdateAuthProviderRequest)(nil),            // 9: gitpod.v1.UpdateAuthProviderRequest
	(*UpdateAuthProviderResponse)(nil),           // 10: gitpod.v1.UpdateAuthProviderResponse
	(*DeleteAuthProviderRequest)(nil),            // 11: gitpod.v1.DeleteAuthProviderRequest
	(*DeleteAuthProviderResponse)(nil),           // 12: gitpod.v1.DeleteAuthProviderResponse
	(*AuthProviderDescription)(nil),              // 13: gitpod.v1.AuthProviderDescription
	(*AuthProvider)(nil),                         // 14: gitpod.v1.AuthProvider
	(*OAuth2Config)(nil),                         // 15: gitpod.v1.OAuth2Config
	(*PaginationRequest)(nil),                    // 16: gitpod.v1.PaginationRequest
	(*PaginationResponse)(nil),                   // 17: gitpod.v1.PaginationResponse
}
var file_gitpod_v1_authprovider_proto_depIdxs = []int32{
	0,  // 0: gitpod.v1.CreateAuthProviderRequest.type:type_name -> gitpod.v1.AuthProviderType
	15, // 1: gitpod.v1.CreateAuthProviderRequest.oauth2_config:type_name -> gitpod.v1.OAuth2Config
	14, // 2: gitpod.v1.CreateAuthProviderResponse.auth_provider:type_name -> gitpod.v1.AuthProvider
	14, // 3: gitpod.v1.GetAuthProviderResponse.auth_provider:type_name -> gitpod.v1.AuthProvider
	16, // 4: gitpod.v1.ListAuthProvidersRequest.pagination:type_name -> gitpod.v1.PaginationRequest
	14, // 5: gitpod.v1.ListAuthProvidersResponse.auth_providers:type_name -> gitpod.v1.AuthProvider
	17, // 6: gitpod.v1.ListAuthProvidersResponse.pagination:type_name -> gitpod.v1.PaginationResponse
	16, // 7: gitpod.v1.ListAuthProviderDescriptionsRequest.pagination:type_name -> gitpod.v1.PaginationRequest
	13, // 8: gitpod.v1.ListAuthProviderDescriptionsResponse.descriptions:type_name -> gitpod.v1.AuthProviderDescription
	17, // 9: gitpod.v1.ListAuthProviderDescriptionsResponse.pagination:type_name -> gitpod.v1.PaginationResponse
	14, // 10: gitpod.v1.UpdateAuthProviderResponse.auth_provider:type_name -> gitpod.v1.AuthProvider
	0,  // 11: gitpod.v1.AuthProviderDescription.type:type_name -> gitpod.v1.AuthProviderType
	0,  // 12: gitpod.v1.AuthProvider.type:type_name -> gitpod.v1.AuthProviderType
	15, // 13: gitpod.v1.AuthProvider.oauth2_config:type_name -> gitpod.v1.OAuth2Config
	1,  // 14: gitpod.v1.AuthProviderService.CreateAuthProvider:input_type -> gitpod.v1.CreateAuthProviderRequest
	3,  // 15: gitpod.v1.AuthProviderService.GetAuthProvider:input_type -> gitpod.v1.GetAuthProviderRequest
	5,  // 16: gitpod.v1.AuthProviderService.ListAuthProviders:input_type -> gitpod.v1.ListAuthProvidersRequest
	7,  // 17: gitpod.v1.AuthProviderService.ListAuthProviderDescriptions:input_type -> gitpod.v1.ListAuthProviderDescriptionsRequest
	9,  // 18: gitpod.v1.AuthProviderService.UpdateAuthProvider:input_type -> gitpod.v1.UpdateAuthProviderRequest
	11, // 19: gitpod.v1.AuthProviderService.DeleteAuthProvider:input_type -> gitpod.v1.DeleteAuthProviderRequest
	2,  // 20: gitpod.v1.AuthProviderService.CreateAuthProvider:output_type -> gitpod.v1.CreateAuthProviderResponse
	4,  // 21: gitpod.v1.AuthProviderService.GetAuthProvider:output_type -> gitpod.v1.GetAuthProviderResponse
	6,  // 22: gitpod.v1.AuthProviderService.ListAuthProviders:output_type -> gitpod.v1.ListAuthProvidersResponse
	8,  // 23: gitpod.v1.AuthProviderService.ListAuthProviderDescriptions:output_type -> gitpod.v1.ListAuthProviderDescriptionsResponse
	10, // 24: gitpod.v1.AuthProviderService.UpdateAuthProvider:output_type -> gitpod.v1.UpdateAuthProviderResponse
	12, // 25: gitpod.v1.AuthProviderService.DeleteAuthProvider:output_type -> gitpod.v1.DeleteAuthProviderResponse
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_gitpod_v1_authprovider_proto_init() }
func file_gitpod_v1_authprovider_proto_init() {
	if File_gitpod_v1_authprovider_proto != nil {
		return
	}
	file_gitpod_v1_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gitpod_v1_authprovider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthProviderDescriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAuthProviderDescriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProviderDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_v1_authprovider_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth2Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gitpod_v1_authprovider_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CreateAuthProviderRequest_OwnerId)(nil),
		(*CreateAuthProviderRequest_OrganizationId)(nil),
	}
	file_gitpod_v1_authprovider_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ListAuthProvidersRequest_UserId)(nil),
		(*ListAuthProvidersRequest_OrganizationId)(nil),
	}
	file_gitpod_v1_authprovider_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ListAuthProviderDescriptionsRequest_UserId)(nil),
		(*ListAuthProviderDescriptionsRequest_OrganizationId)(nil),
	}
	file_gitpod_v1_authprovider_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_gitpod_v1_authprovider_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*AuthProvider_OwnerId)(nil),
		(*AuthProvider_OrganizationId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitpod_v1_authprovider_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitpod_v1_authprovider_proto_goTypes,
		DependencyIndexes: file_gitpod_v1_authprovider_proto_depIdxs,
		EnumInfos:         file_gitpod_v1_authprovider_proto_enumTypes,
		MessageInfos:      file_gitpod_v1_authprovider_proto_msgTypes,
	}.Build()
	File_gitpod_v1_authprovider_proto = out.File
	file_gitpod_v1_authprovider_proto_rawDesc = nil
	file_gitpod_v1_authprovider_proto_goTypes = nil
	file_gitpod_v1_authprovider_proto_depIdxs = nil
}
