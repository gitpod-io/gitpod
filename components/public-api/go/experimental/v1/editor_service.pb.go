// Copyright (c) 2023 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: gitpod/experimental/v1/editor_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of the editor, currently browser or desktop.
type EditorOption_EditorType int32

const (
	EditorOption_EDITOR_TYPE_UNSPECIFIED EditorOption_EditorType = 0
	EditorOption_EDITOR_TYPE_BROWSER     EditorOption_EditorType = 1
	EditorOption_EDITOR_TYPE_DESKTOP     EditorOption_EditorType = 2
)

// Enum value maps for EditorOption_EditorType.
var (
	EditorOption_EditorType_name = map[int32]string{
		0: "EDITOR_TYPE_UNSPECIFIED",
		1: "EDITOR_TYPE_BROWSER",
		2: "EDITOR_TYPE_DESKTOP",
	}
	EditorOption_EditorType_value = map[string]int32{
		"EDITOR_TYPE_UNSPECIFIED": 0,
		"EDITOR_TYPE_BROWSER":     1,
		"EDITOR_TYPE_DESKTOP":     2,
	}
)

func (x EditorOption_EditorType) Enum() *EditorOption_EditorType {
	p := new(EditorOption_EditorType)
	*p = x
	return p
}

func (x EditorOption_EditorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditorOption_EditorType) Descriptor() protoreflect.EnumDescriptor {
	return file_gitpod_experimental_v1_editor_service_proto_enumTypes[0].Descriptor()
}

func (EditorOption_EditorType) Type() protoreflect.EnumType {
	return &file_gitpod_experimental_v1_editor_service_proto_enumTypes[0]
}

func (x EditorOption_EditorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditorOption_EditorType.Descriptor instead.
func (EditorOption_EditorType) EnumDescriptor() ([]byte, []int) {
	return file_gitpod_experimental_v1_editor_service_proto_rawDescGZIP(), []int{2, 0}
}

type ListEditorOptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListEditorOptionsRequest) Reset() {
	*x = ListEditorOptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEditorOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorOptionsRequest) ProtoMessage() {}

func (x *ListEditorOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorOptionsRequest.ProtoReflect.Descriptor instead.
func (*ListEditorOptionsRequest) Descriptor() ([]byte, []int) {
	return file_gitpod_experimental_v1_editor_service_proto_rawDescGZIP(), []int{0}
}

type ListEditorOptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*EditorOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *ListEditorOptionsResponse) Reset() {
	*x = ListEditorOptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEditorOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEditorOptionsResponse) ProtoMessage() {}

func (x *ListEditorOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEditorOptionsResponse.ProtoReflect.Descriptor instead.
func (*ListEditorOptionsResponse) Descriptor() ([]byte, []int) {
	return file_gitpod_experimental_v1_editor_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListEditorOptionsResponse) GetOptions() []*EditorOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type EditorOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique identifier for an editor.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human readable title text of the editor (plain text only).
	Title string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type  EditorOption_EditorType `protobuf:"varint,3,opt,name=type,proto3,enum=gitpod.experimental.v1.EditorOption_EditorType" json:"type,omitempty"`
	// The logo for the editor
	Logo string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	// Text of an optional label next to the editor option like “Insiders” (plain
	// text only).
	Label   string                `protobuf:"bytes,5,opt,name=label,proto3" json:"label,omitempty"`
	Version *EditorOption_Version `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *EditorOption) Reset() {
	*x = EditorOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorOption) ProtoMessage() {}

func (x *EditorOption) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorOption.ProtoReflect.Descriptor instead.
func (*EditorOption) Descriptor() ([]byte, []int) {
	return file_gitpod_experimental_v1_editor_service_proto_rawDescGZIP(), []int{2}
}

func (x *EditorOption) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EditorOption) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditorOption) GetType() EditorOption_EditorType {
	if x != nil {
		return x.Type
	}
	return EditorOption_EDITOR_TYPE_UNSPECIFIED
}

func (x *EditorOption) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *EditorOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EditorOption) GetVersion() *EditorOption_Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type EditorOption_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The semantic version of the stable editor image.
	Stable string `protobuf:"bytes,1,opt,name=stable,proto3" json:"stable,omitempty"`
	// The semantic version of the latest editor image.
	Latest string `protobuf:"bytes,2,opt,name=latest,proto3" json:"latest,omitempty"`
}

func (x *EditorOption_Version) Reset() {
	*x = EditorOption_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorOption_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorOption_Version) ProtoMessage() {}

func (x *EditorOption_Version) ProtoReflect() protoreflect.Message {
	mi := &file_gitpod_experimental_v1_editor_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorOption_Version.ProtoReflect.Descriptor instead.
func (*EditorOption_Version) Descriptor() ([]byte, []int) {
	return file_gitpod_experimental_v1_editor_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *EditorOption_Version) GetStable() string {
	if x != nil {
		return x.Stable
	}
	return ""
}

func (x *EditorOption_Version) GetLatest() string {
	if x != nil {
		return x.Latest
	}
	return ""
}

var File_gitpod_experimental_v1_editor_service_proto protoreflect.FileDescriptor

var file_gitpod_experimental_v1_editor_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x67,
	0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x5b, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x83,
	0x03, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f,
	0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x46, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x42, 0x52, 0x4f, 0x57, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x45,
	0x44, 0x49, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x4b, 0x54,
	0x4f, 0x50, 0x10, 0x02, 0x32, 0x8b, 0x01, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7a, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x2e, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f,
	0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_gitpod_experimental_v1_editor_service_proto_rawDescOnce sync.Once
	file_gitpod_experimental_v1_editor_service_proto_rawDescData = file_gitpod_experimental_v1_editor_service_proto_rawDesc
)

func file_gitpod_experimental_v1_editor_service_proto_rawDescGZIP() []byte {
	file_gitpod_experimental_v1_editor_service_proto_rawDescOnce.Do(func() {
		file_gitpod_experimental_v1_editor_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_gitpod_experimental_v1_editor_service_proto_rawDescData)
	})
	return file_gitpod_experimental_v1_editor_service_proto_rawDescData
}

var file_gitpod_experimental_v1_editor_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gitpod_experimental_v1_editor_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gitpod_experimental_v1_editor_service_proto_goTypes = []interface{}{
	(EditorOption_EditorType)(0),      // 0: gitpod.experimental.v1.EditorOption.EditorType
	(*ListEditorOptionsRequest)(nil),  // 1: gitpod.experimental.v1.ListEditorOptionsRequest
	(*ListEditorOptionsResponse)(nil), // 2: gitpod.experimental.v1.ListEditorOptionsResponse
	(*EditorOption)(nil),              // 3: gitpod.experimental.v1.EditorOption
	(*EditorOption_Version)(nil),      // 4: gitpod.experimental.v1.EditorOption.Version
}
var file_gitpod_experimental_v1_editor_service_proto_depIdxs = []int32{
	3, // 0: gitpod.experimental.v1.ListEditorOptionsResponse.options:type_name -> gitpod.experimental.v1.EditorOption
	0, // 1: gitpod.experimental.v1.EditorOption.type:type_name -> gitpod.experimental.v1.EditorOption.EditorType
	4, // 2: gitpod.experimental.v1.EditorOption.version:type_name -> gitpod.experimental.v1.EditorOption.Version
	1, // 3: gitpod.experimental.v1.EditorService.ListEditorOptions:input_type -> gitpod.experimental.v1.ListEditorOptionsRequest
	2, // 4: gitpod.experimental.v1.EditorService.ListEditorOptions:output_type -> gitpod.experimental.v1.ListEditorOptionsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gitpod_experimental_v1_editor_service_proto_init() }
func file_gitpod_experimental_v1_editor_service_proto_init() {
	if File_gitpod_experimental_v1_editor_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gitpod_experimental_v1_editor_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEditorOptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_experimental_v1_editor_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEditorOptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_experimental_v1_editor_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gitpod_experimental_v1_editor_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorOption_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gitpod_experimental_v1_editor_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gitpod_experimental_v1_editor_service_proto_goTypes,
		DependencyIndexes: file_gitpod_experimental_v1_editor_service_proto_depIdxs,
		EnumInfos:         file_gitpod_experimental_v1_editor_service_proto_enumTypes,
		MessageInfos:      file_gitpod_experimental_v1_editor_service_proto_msgTypes,
	}.Build()
	File_gitpod_experimental_v1_editor_service_proto = out.File
	file_gitpod_experimental_v1_editor_service_proto_rawDesc = nil
	file_gitpod_experimental_v1_editor_service_proto_goTypes = nil
	file_gitpod_experimental_v1_editor_service_proto_depIdxs = nil
}
