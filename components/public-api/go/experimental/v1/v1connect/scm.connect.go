// Copyright (c) 2024 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: gitpod/experimental/v1/scm.proto

package v1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1 "github.com/gitpod-io/gitpod/components/public-api/go/experimental/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// SCMServiceName is the fully-qualified name of the SCMService service.
	SCMServiceName = "gitpod.experimental.v1.SCMService"
)

// SCMServiceClient is a client for the gitpod.experimental.v1.SCMService service.
type SCMServiceClient interface {
	// GetSuggestedRepoURLs returns a list of suggested repositories to open for
	// the user.
	GetSuggestedRepoURLs(context.Context, *connect_go.Request[v1.GetSuggestedRepoURLsRequest]) (*connect_go.Response[v1.GetSuggestedRepoURLsResponse], error)
}

// NewSCMServiceClient constructs a client for the gitpod.experimental.v1.SCMService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewSCMServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) SCMServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &sCMServiceClient{
		getSuggestedRepoURLs: connect_go.NewClient[v1.GetSuggestedRepoURLsRequest, v1.GetSuggestedRepoURLsResponse](
			httpClient,
			baseURL+"/gitpod.experimental.v1.SCMService/GetSuggestedRepoURLs",
			opts...,
		),
	}
}

// sCMServiceClient implements SCMServiceClient.
type sCMServiceClient struct {
	getSuggestedRepoURLs *connect_go.Client[v1.GetSuggestedRepoURLsRequest, v1.GetSuggestedRepoURLsResponse]
}

// GetSuggestedRepoURLs calls gitpod.experimental.v1.SCMService.GetSuggestedRepoURLs.
func (c *sCMServiceClient) GetSuggestedRepoURLs(ctx context.Context, req *connect_go.Request[v1.GetSuggestedRepoURLsRequest]) (*connect_go.Response[v1.GetSuggestedRepoURLsResponse], error) {
	return c.getSuggestedRepoURLs.CallUnary(ctx, req)
}

// SCMServiceHandler is an implementation of the gitpod.experimental.v1.SCMService service.
type SCMServiceHandler interface {
	// GetSuggestedRepoURLs returns a list of suggested repositories to open for
	// the user.
	GetSuggestedRepoURLs(context.Context, *connect_go.Request[v1.GetSuggestedRepoURLsRequest]) (*connect_go.Response[v1.GetSuggestedRepoURLsResponse], error)
}

// NewSCMServiceHandler builds an HTTP handler from the service implementation. It returns the path
// on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewSCMServiceHandler(svc SCMServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	mux := http.NewServeMux()
	mux.Handle("/gitpod.experimental.v1.SCMService/GetSuggestedRepoURLs", connect_go.NewUnaryHandler(
		"/gitpod.experimental.v1.SCMService/GetSuggestedRepoURLs",
		svc.GetSuggestedRepoURLs,
		opts...,
	))
	return "/gitpod.experimental.v1.SCMService/", mux
}

// UnimplementedSCMServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedSCMServiceHandler struct{}

func (UnimplementedSCMServiceHandler) GetSuggestedRepoURLs(context.Context, *connect_go.Request[v1.GetSuggestedRepoURLsRequest]) (*connect_go.Response[v1.GetSuggestedRepoURLsResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("gitpod.experimental.v1.SCMService.GetSuggestedRepoURLs is not implemented"))
}
