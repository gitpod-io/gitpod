// Copyright (c) 2020 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/docker/docker/client (interfaces: DistributionAPIClient)

// Package resolve_test is a generated GoMock package.
package resolve_test

import (
	context "context"
	registry "github.com/docker/docker/api/types/registry"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDistributionAPIClient is a mock of DistributionAPIClient interface
type MockDistributionAPIClient struct {
	ctrl     *gomock.Controller
	recorder *MockDistributionAPIClientMockRecorder
}

// MockDistributionAPIClientMockRecorder is the mock recorder for MockDistributionAPIClient
type MockDistributionAPIClientMockRecorder struct {
	mock *MockDistributionAPIClient
}

// NewMockDistributionAPIClient creates a new mock instance
func NewMockDistributionAPIClient(ctrl *gomock.Controller) *MockDistributionAPIClient {
	mock := &MockDistributionAPIClient{ctrl: ctrl}
	mock.recorder = &MockDistributionAPIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDistributionAPIClient) EXPECT() *MockDistributionAPIClientMockRecorder {
	return m.recorder
}

// DistributionInspect mocks base method
func (m *MockDistributionAPIClient) DistributionInspect(arg0 context.Context, arg1, arg2 string) (registry.DistributionInspect, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DistributionInspect", arg0, arg1, arg2)
	ret0, _ := ret[0].(registry.DistributionInspect)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DistributionInspect indicates an expected call of DistributionInspect
func (mr *MockDistributionAPIClientMockRecorder) DistributionInspect(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DistributionInspect", reflect.TypeOf((*MockDistributionAPIClient)(nil).DistributionInspect), arg0, arg1, arg2)
}
