packages:
  - name: app
    type: yarn
    srcs:
      - "public/**"
      - "src/**/*.ts"
      - "src/**/*.tsx"
      - "src/**/*.css"
      - "ee/src/**/*.ts"
      - "ee/src/**/*.tsx"
      - "ee/src/**/*.css"
      - "typings/**"
      - package.json
      - tailwind.config.js
      - tsconfig.json
    deps:
      - components/gitpod-protocol:lib
    argdeps:
      - removeSources
    env:
      - REMOVE_SOURCES=${removeSources}
    config:
      commands:
        build: ["yarn", "build-app"]
      yarnLock: ${coreYarnLockBase}/yarn.lock
      dontTest: true
  - name: lib
    type: yarn
    srcs:
      - "public/**"
      - "ee/public/**"
      - "src/**/*.ts"
      - "src/**/*.tsx"
      - "src/**/*.css"
      - "ee/src/**/*.ts"
      - "ee/src/**/*.tsx"
      - "ee/src/**/*.css"
      - "typings/**"
      - package.json
      - postinstall.js
      - webpack.config.js
      - webpack.entrypoints.js
      - tsconfig.json
      - tsconfig.lib.json
    deps:
      - components/gitpod-protocol:lib
    config:
      packaging: library
      commands:
        build: ["yarn", "build-lib"]
      yarnLock: ${coreYarnLockBase}/yarn.lock
      tsconfig: tsconfig.lib.json
      dontTest: true
  - name: static
    type: generic
    srcs:
      - "conf/**"
      - "public/**"
      - "ee/public/**"
    config:
      commands:
        - ["echo"]
  - name: docker
    type: docker
    deps:
      - :app
      - :static
    argdeps:
      - imageRepoBase
    config:
      dockerfile: leeway.Dockerfile
      image:
        - ${imageRepoBase}/dashboard:${version}
scripts:
  - name: telepresence
    script: |-
      trap "kill 0" EXIT
      export NODE_OPTIONS='--max-old-space-size=3192'
      yarn run webpack-dev-server --mode=development &

      telepresence --swap-deployment dashboard \
                   --method inject-tcp \
                   --expose 13001:80 \
                   --run socat TCP-LISTEN:13001,reuseaddr,fork TCP:localhost:3001
