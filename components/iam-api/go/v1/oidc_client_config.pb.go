// Copyright (c) 2022 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License.AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: iam/v1/oidc_client_config.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Configuration of an OpenID client.
//
// For the metadata describing the configuration of OIDC providers, cf.
// https://openid.net/specs/openid-connect-discovery-1_0.html
type OIDCClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID is the unique identifier for the OIDC Config.
	// Read only.
	Id           string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OidcConfig   *OIDCConfig   `protobuf:"bytes,2,opt,name=oidc_config,json=oidcConfig,proto3" json:"oidc_config,omitempty"`
	Oauth2Config *OAuth2Config `protobuf:"bytes,3,opt,name=oauth2_config,json=oauth2Config,proto3" json:"oauth2_config,omitempty"`
	// Optional.
	OauthOnly bool `protobuf:"varint,4,opt,name=oauth_only,json=oauthOnly,proto3" json:"oauth_only,omitempty"`
	// List of the JWS signing algorithms (alg values) supported by the OP for the
	// ID Token to encode the Claims in a JWT. The algorithm RS256 MUST be
	// included.
	// Optional.
	IdTokenSigningAlgValuesSupported []string `protobuf:"bytes,5,rep,name=id_token_signing_alg_values_supported,json=idTokenSigningAlgValuesSupported,proto3" json:"id_token_signing_alg_values_supported,omitempty"`
	// Time when the config was created.
	// Read-only.
	CreationTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	// Describes the status of this configuration item.
	// Read-only.
	Status *OIDCClientConfigStatus `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *OIDCClientConfig) Reset() {
	*x = OIDCClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDCClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCClientConfig) ProtoMessage() {}

func (x *OIDCClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCClientConfig.ProtoReflect.Descriptor instead.
func (*OIDCClientConfig) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{0}
}

func (x *OIDCClientConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OIDCClientConfig) GetOidcConfig() *OIDCConfig {
	if x != nil {
		return x.OidcConfig
	}
	return nil
}

func (x *OIDCClientConfig) GetOauth2Config() *OAuth2Config {
	if x != nil {
		return x.Oauth2Config
	}
	return nil
}

func (x *OIDCClientConfig) GetOauthOnly() bool {
	if x != nil {
		return x.OauthOnly
	}
	return false
}

func (x *OIDCClientConfig) GetIdTokenSigningAlgValuesSupported() []string {
	if x != nil {
		return x.IdTokenSigningAlgValuesSupported
	}
	return nil
}

func (x *OIDCClientConfig) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *OIDCClientConfig) GetStatus() *OIDCClientConfigStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// The OIDC specific part of the client configuration.
type OIDCConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL using the https scheme with no query or fragment component that the
	// OIDC provider asserts as its Issuer Identifier.
	// Required.
	Issuer string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// A KeySet that can validate the id_token (JSON web token)
	// Either one is required.
	Jwks    string `protobuf:"bytes,2,opt,name=jwks,proto3" json:"jwks,omitempty"`
	JwksUrl string `protobuf:"bytes,3,opt,name=jwks_url,json=jwksUrl,proto3" json:"jwks_url,omitempty"`
	// Provider specific parameters to control the behavior of the consent screen.
	// Optional.
	Hints *ConsentScreenHints `protobuf:"bytes,4,opt,name=hints,proto3" json:"hints,omitempty"`
	// Optional overrides for key mapping to be applied when extracting claims from id_tokens.
	// Should only be set, if an override is required.
	// Optional.
	OverrideClaimMapping *ClaimMappingOverride `protobuf:"bytes,5,opt,name=override_claim_mapping,json=overrideClaimMapping,proto3" json:"override_claim_mapping,omitempty"`
}

func (x *OIDCConfig) Reset() {
	*x = OIDCConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDCConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCConfig) ProtoMessage() {}

func (x *OIDCConfig) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCConfig.ProtoReflect.Descriptor instead.
func (*OIDCConfig) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{1}
}

func (x *OIDCConfig) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *OIDCConfig) GetJwks() string {
	if x != nil {
		return x.Jwks
	}
	return ""
}

func (x *OIDCConfig) GetJwksUrl() string {
	if x != nil {
		return x.JwksUrl
	}
	return ""
}

func (x *OIDCConfig) GetHints() *ConsentScreenHints {
	if x != nil {
		return x.Hints
	}
	return nil
}

func (x *OIDCConfig) GetOverrideClaimMapping() *ClaimMappingOverride {
	if x != nil {
		return x.OverrideClaimMapping
	}
	return nil
}

// Provider specific parameters to control the behavior of the consent screen.
type ConsentScreenHints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Control options for the consent screen.
	// Optional.
	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	// A hint to pre-select the tenant from an AD.
	// Optional.
	DomainHint string `protobuf:"bytes,2,opt,name=domain_hint,json=domainHint,proto3" json:"domain_hint,omitempty"`
	// Optional.
	LoginHint string `protobuf:"bytes,3,opt,name=login_hint,json=loginHint,proto3" json:"login_hint,omitempty"`
}

func (x *ConsentScreenHints) Reset() {
	*x = ConsentScreenHints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsentScreenHints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsentScreenHints) ProtoMessage() {}

func (x *ConsentScreenHints) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsentScreenHints.ProtoReflect.Descriptor instead.
func (*ConsentScreenHints) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{2}
}

func (x *ConsentScreenHints) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ConsentScreenHints) GetDomainHint() string {
	if x != nil {
		return x.DomainHint
	}
	return ""
}

func (x *ConsentScreenHints) GetLoginHint() string {
	if x != nil {
		return x.LoginHint
	}
	return ""
}

// Optional overrides for key mapping to be applied when extracting claims from id_tokens.
type ClaimMappingOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional.
	ClaimEmailKey string `protobuf:"bytes,1,opt,name=claim_email_key,json=claimEmailKey,proto3" json:"claim_email_key,omitempty"`
	// Optional.
	ClaimGroupsKey string `protobuf:"bytes,2,opt,name=claim_groups_key,json=claimGroupsKey,proto3" json:"claim_groups_key,omitempty"`
	// Optional.
	ClaimUsernameKey string `protobuf:"bytes,3,opt,name=claim_username_key,json=claimUsernameKey,proto3" json:"claim_username_key,omitempty"`
}

func (x *ClaimMappingOverride) Reset() {
	*x = ClaimMappingOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimMappingOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimMappingOverride) ProtoMessage() {}

func (x *ClaimMappingOverride) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimMappingOverride.ProtoReflect.Descriptor instead.
func (*ClaimMappingOverride) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{3}
}

func (x *ClaimMappingOverride) GetClaimEmailKey() string {
	if x != nil {
		return x.ClaimEmailKey
	}
	return ""
}

func (x *ClaimMappingOverride) GetClaimGroupsKey() string {
	if x != nil {
		return x.ClaimGroupsKey
	}
	return ""
}

func (x *ClaimMappingOverride) GetClaimUsernameKey() string {
	if x != nil {
		return x.ClaimUsernameKey
	}
	return ""
}

// The OAuth2 specific part of the client configuration.
type OAuth2Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Required.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Required for creation/updates.
	// Empty on read.
	ClientSecret string `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	// Required.
	AuthorizationEndpoint string `protobuf:"bytes,3,opt,name=authorization_endpoint,json=authorizationEndpoint,proto3" json:"authorization_endpoint,omitempty"`
	// Required.
	TokenEndpoint string `protobuf:"bytes,4,opt,name=token_endpoint,json=tokenEndpoint,proto3" json:"token_endpoint,omitempty"`
	// Required.
	ScopesSupported []string `protobuf:"bytes,5,rep,name=scopes_supported,json=scopesSupported,proto3" json:"scopes_supported,omitempty"`
	// Source for additional claims for the token.
	// Additional keys may be used to control the extraction of a profile.
	// Required.
	UserinfoEndpoint string `protobuf:"bytes,6,opt,name=userinfo_endpoint,json=userinfoEndpoint,proto3" json:"userinfo_endpoint,omitempty"`
	// Keys of the userinfo result to extract a profile from.
	// Optional.
	UserinfoKeys *UserInfoKeys `protobuf:"bytes,7,opt,name=userinfo_keys,json=userinfoKeys,proto3" json:"userinfo_keys,omitempty"`
}

func (x *OAuth2Config) Reset() {
	*x = OAuth2Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OAuth2Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuth2Config) ProtoMessage() {}

func (x *OAuth2Config) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuth2Config.ProtoReflect.Descriptor instead.
func (*OAuth2Config) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{4}
}

func (x *OAuth2Config) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuth2Config) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuth2Config) GetAuthorizationEndpoint() string {
	if x != nil {
		return x.AuthorizationEndpoint
	}
	return ""
}

func (x *OAuth2Config) GetTokenEndpoint() string {
	if x != nil {
		return x.TokenEndpoint
	}
	return ""
}

func (x *OAuth2Config) GetScopesSupported() []string {
	if x != nil {
		return x.ScopesSupported
	}
	return nil
}

func (x *OAuth2Config) GetUserinfoEndpoint() string {
	if x != nil {
		return x.UserinfoEndpoint
	}
	return ""
}

func (x *OAuth2Config) GetUserinfoKeys() *UserInfoKeys {
	if x != nil {
		return x.UserinfoKeys
	}
	return nil
}

// Description of keys of a userinfo result.
type UserInfoKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional.
	UserinfoIdKey string `protobuf:"bytes,1,opt,name=userinfo_id_key,json=userinfoIdKey,proto3" json:"userinfo_id_key,omitempty"`
	// Optional.
	UserinfoNameKey string `protobuf:"bytes,2,opt,name=userinfo_name_key,json=userinfoNameKey,proto3" json:"userinfo_name_key,omitempty"`
}

func (x *UserInfoKeys) Reset() {
	*x = UserInfoKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoKeys) ProtoMessage() {}

func (x *UserInfoKeys) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoKeys.ProtoReflect.Descriptor instead.
func (*UserInfoKeys) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{5}
}

func (x *UserInfoKeys) GetUserinfoIdKey() string {
	if x != nil {
		return x.UserinfoIdKey
	}
	return ""
}

func (x *UserInfoKeys) GetUserinfoNameKey() string {
	if x != nil {
		return x.UserinfoNameKey
	}
	return ""
}

// The status of an OIDC client configuration.
type OIDCClientConfigStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OIDCClientConfigStatus) Reset() {
	*x = OIDCClientConfigStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDCClientConfigStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCClientConfigStatus) ProtoMessage() {}

func (x *OIDCClientConfigStatus) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCClientConfigStatus.ProtoReflect.Descriptor instead.
func (*OIDCClientConfigStatus) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{6}
}

type CreateClientConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *OIDCClientConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Optional.
	UseDiscovery bool `protobuf:"varint,2,opt,name=use_discovery,json=useDiscovery,proto3" json:"use_discovery,omitempty"`
}

func (x *CreateClientConfigRequest) Reset() {
	*x = CreateClientConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClientConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientConfigRequest) ProtoMessage() {}

func (x *CreateClientConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientConfigRequest.ProtoReflect.Descriptor instead.
func (*CreateClientConfigRequest) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{7}
}

func (x *CreateClientConfigRequest) GetConfig() *OIDCClientConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateClientConfigRequest) GetUseDiscovery() bool {
	if x != nil {
		return x.UseDiscovery
	}
	return false
}

type CreateClientConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *OIDCClientConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *CreateClientConfigResponse) Reset() {
	*x = CreateClientConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClientConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClientConfigResponse) ProtoMessage() {}

func (x *CreateClientConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClientConfigResponse.ProtoReflect.Descriptor instead.
func (*CreateClientConfigResponse) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{8}
}

func (x *CreateClientConfigResponse) GetConfig() *OIDCClientConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetClientConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetClientConfigRequest) Reset() {
	*x = GetClientConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientConfigRequest) ProtoMessage() {}

func (x *GetClientConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientConfigRequest.ProtoReflect.Descriptor instead.
func (*GetClientConfigRequest) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{9}
}

func (x *GetClientConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetClientConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *OIDCClientConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetClientConfigResponse) Reset() {
	*x = GetClientConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientConfigResponse) ProtoMessage() {}

func (x *GetClientConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientConfigResponse.ProtoReflect.Descriptor instead.
func (*GetClientConfigResponse) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{10}
}

func (x *GetClientConfigResponse) GetConfig() *OIDCClientConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ListClientConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListClientConfigsRequest) Reset() {
	*x = ListClientConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientConfigsRequest) ProtoMessage() {}

func (x *ListClientConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListClientConfigsRequest) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{11}
}

type ListClientConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers    []*OIDCClientConfig `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
	TotalResults int64               `protobuf:"varint,2,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
}

func (x *ListClientConfigsResponse) Reset() {
	*x = ListClientConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClientConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClientConfigsResponse) ProtoMessage() {}

func (x *ListClientConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClientConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListClientConfigsResponse) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{12}
}

func (x *ListClientConfigsResponse) GetProviders() []*OIDCClientConfig {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *ListClientConfigsResponse) GetTotalResults() int64 {
	if x != nil {
		return x.TotalResults
	}
	return 0
}

type UpdateClientConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *OIDCClientConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *UpdateClientConfigRequest) Reset() {
	*x = UpdateClientConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientConfigRequest) ProtoMessage() {}

func (x *UpdateClientConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateClientConfigRequest) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateClientConfigRequest) GetConfig() *OIDCClientConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateClientConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateClientConfigResponse) Reset() {
	*x = UpdateClientConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientConfigResponse) ProtoMessage() {}

func (x *UpdateClientConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateClientConfigResponse) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{14}
}

type DeleteClientConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteClientConfigRequest) Reset() {
	*x = DeleteClientConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClientConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClientConfigRequest) ProtoMessage() {}

func (x *DeleteClientConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClientConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteClientConfigRequest) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteClientConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteClientConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteClientConfigResponse) Reset() {
	*x = DeleteClientConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iam_v1_oidc_client_config_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClientConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClientConfigResponse) ProtoMessage() {}

func (x *DeleteClientConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iam_v1_oidc_client_config_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClientConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteClientConfigResponse) Descriptor() ([]byte, []int) {
	return file_iam_v1_oidc_client_config_proto_rawDescGZIP(), []int{16}
}

var File_iam_v1_oidc_client_config_proto protoreflect.FileDescriptor

var file_iam_v1_oidc_client_config_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x69, 0x61, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfb, 0x02, 0x0a, 0x10, 0x4f,
	0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x33, 0x0a, 0x0b, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49,
	0x44, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6f, 0x69, 0x64, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x0d, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0c, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x4f,
	0x0a, 0x25, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x69,
	0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x20, 0x69,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x0a, 0x4f, 0x49, 0x44,
	0x43, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6a, 0x77, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a,
	0x77, 0x6b, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x77, 0x6b, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x77, 0x6b, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x30,
	0x0a, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x52, 0x0a, 0x16, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x52, 0x14,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0x6c, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x53,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x68, 0x69, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x48,
	0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x68, 0x69, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x69,
	0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x12, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xc1, 0x02, 0x0a, 0x0c,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x35,
	0x0a, 0x16, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x22,
	0x62, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x49, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x4b, 0x65, 0x79, 0x22, 0x18, 0x0a, 0x16, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x72, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x22, 0x4e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49,
	0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x4d,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1c, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdc, 0x03, 0x0a, 0x0b, 0x4f, 0x49, 0x44, 0x43, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x12, 0x20, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x69,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x70, 0x6f, 0x64, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x69,
	0x74, 0x70, 0x6f, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x69, 0x61, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iam_v1_oidc_client_config_proto_rawDescOnce sync.Once
	file_iam_v1_oidc_client_config_proto_rawDescData = file_iam_v1_oidc_client_config_proto_rawDesc
)

func file_iam_v1_oidc_client_config_proto_rawDescGZIP() []byte {
	file_iam_v1_oidc_client_config_proto_rawDescOnce.Do(func() {
		file_iam_v1_oidc_client_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_iam_v1_oidc_client_config_proto_rawDescData)
	})
	return file_iam_v1_oidc_client_config_proto_rawDescData
}

var file_iam_v1_oidc_client_config_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_iam_v1_oidc_client_config_proto_goTypes = []interface{}{
	(*OIDCClientConfig)(nil),           // 0: iam.v1.OIDCClientConfig
	(*OIDCConfig)(nil),                 // 1: iam.v1.OIDCConfig
	(*ConsentScreenHints)(nil),         // 2: iam.v1.ConsentScreenHints
	(*ClaimMappingOverride)(nil),       // 3: iam.v1.ClaimMappingOverride
	(*OAuth2Config)(nil),               // 4: iam.v1.OAuth2Config
	(*UserInfoKeys)(nil),               // 5: iam.v1.UserInfoKeys
	(*OIDCClientConfigStatus)(nil),     // 6: iam.v1.OIDCClientConfigStatus
	(*CreateClientConfigRequest)(nil),  // 7: iam.v1.CreateClientConfigRequest
	(*CreateClientConfigResponse)(nil), // 8: iam.v1.CreateClientConfigResponse
	(*GetClientConfigRequest)(nil),     // 9: iam.v1.GetClientConfigRequest
	(*GetClientConfigResponse)(nil),    // 10: iam.v1.GetClientConfigResponse
	(*ListClientConfigsRequest)(nil),   // 11: iam.v1.ListClientConfigsRequest
	(*ListClientConfigsResponse)(nil),  // 12: iam.v1.ListClientConfigsResponse
	(*UpdateClientConfigRequest)(nil),  // 13: iam.v1.UpdateClientConfigRequest
	(*UpdateClientConfigResponse)(nil), // 14: iam.v1.UpdateClientConfigResponse
	(*DeleteClientConfigRequest)(nil),  // 15: iam.v1.DeleteClientConfigRequest
	(*DeleteClientConfigResponse)(nil), // 16: iam.v1.DeleteClientConfigResponse
	(*timestamppb.Timestamp)(nil),      // 17: google.protobuf.Timestamp
}
var file_iam_v1_oidc_client_config_proto_depIdxs = []int32{
	1,  // 0: iam.v1.OIDCClientConfig.oidc_config:type_name -> iam.v1.OIDCConfig
	4,  // 1: iam.v1.OIDCClientConfig.oauth2_config:type_name -> iam.v1.OAuth2Config
	17, // 2: iam.v1.OIDCClientConfig.creation_time:type_name -> google.protobuf.Timestamp
	6,  // 3: iam.v1.OIDCClientConfig.status:type_name -> iam.v1.OIDCClientConfigStatus
	2,  // 4: iam.v1.OIDCConfig.hints:type_name -> iam.v1.ConsentScreenHints
	3,  // 5: iam.v1.OIDCConfig.override_claim_mapping:type_name -> iam.v1.ClaimMappingOverride
	5,  // 6: iam.v1.OAuth2Config.userinfo_keys:type_name -> iam.v1.UserInfoKeys
	0,  // 7: iam.v1.CreateClientConfigRequest.config:type_name -> iam.v1.OIDCClientConfig
	0,  // 8: iam.v1.CreateClientConfigResponse.config:type_name -> iam.v1.OIDCClientConfig
	0,  // 9: iam.v1.GetClientConfigResponse.config:type_name -> iam.v1.OIDCClientConfig
	0,  // 10: iam.v1.ListClientConfigsResponse.providers:type_name -> iam.v1.OIDCClientConfig
	0,  // 11: iam.v1.UpdateClientConfigRequest.config:type_name -> iam.v1.OIDCClientConfig
	7,  // 12: iam.v1.OIDCService.CreateClientConfig:input_type -> iam.v1.CreateClientConfigRequest
	9,  // 13: iam.v1.OIDCService.GetClientConfig:input_type -> iam.v1.GetClientConfigRequest
	11, // 14: iam.v1.OIDCService.ListClientConfigs:input_type -> iam.v1.ListClientConfigsRequest
	13, // 15: iam.v1.OIDCService.UpdateClientConfig:input_type -> iam.v1.UpdateClientConfigRequest
	15, // 16: iam.v1.OIDCService.DeleteClientConfig:input_type -> iam.v1.DeleteClientConfigRequest
	8,  // 17: iam.v1.OIDCService.CreateClientConfig:output_type -> iam.v1.CreateClientConfigResponse
	10, // 18: iam.v1.OIDCService.GetClientConfig:output_type -> iam.v1.GetClientConfigResponse
	12, // 19: iam.v1.OIDCService.ListClientConfigs:output_type -> iam.v1.ListClientConfigsResponse
	14, // 20: iam.v1.OIDCService.UpdateClientConfig:output_type -> iam.v1.UpdateClientConfigResponse
	16, // 21: iam.v1.OIDCService.DeleteClientConfig:output_type -> iam.v1.DeleteClientConfigResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_iam_v1_oidc_client_config_proto_init() }
func file_iam_v1_oidc_client_config_proto_init() {
	if File_iam_v1_oidc_client_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iam_v1_oidc_client_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDCClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDCConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsentScreenHints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimMappingOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OAuth2Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDCClientConfigStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClientConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClientConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClientConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClientConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iam_v1_oidc_client_config_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClientConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iam_v1_oidc_client_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iam_v1_oidc_client_config_proto_goTypes,
		DependencyIndexes: file_iam_v1_oidc_client_config_proto_depIdxs,
		MessageInfos:      file_iam_v1_oidc_client_config_proto_msgTypes,
	}.Build()
	File_iam_v1_oidc_client_config_proto = out.File
	file_iam_v1_oidc_client_config_proto_rawDesc = nil
	file_iam_v1_oidc_client_config_proto_goTypes = nil
	file_iam_v1_oidc_client_config_proto_depIdxs = nil
}
