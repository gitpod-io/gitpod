# Copyright (c) 2022 Gitpod GmbH. All rights reserved.
# Licensed under the GNU Affero General Public License (AGPL).
# See License-AGPL.txt in the project root for license information.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: workspaces.workspace.gitpod.io
spec:
  group: workspace.gitpod.io
  names:
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Workspace is the Schema for the workspaces API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: WorkspaceSpec defines the desired state of Workspace
            properties:
              admission:
                properties:
                  level:
                    default: Owner
                    enum:
                    - Owner
                    - Everyone
                    type: string
                required:
                - level
                type: object
              class:
                type: string
              envvars:
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              git:
                properties:
                  email:
                    type: string
                  username:
                    type: string
                required:
                - email
                - username
                type: object
              image:
                properties:
                  ide:
                    properties:
                      desktop:
                        type: string
                      supervisor:
                        type: string
                      web:
                        type: string
                    required:
                    - desktop
                    - supervisor
                    - web
                    type: object
                  workspace:
                    properties:
                      ref:
                        type: string
                    type: object
                required:
                - ide
                - workspace
                type: object
              initializer:
                format: byte
                type: string
              ownership:
                properties:
                  owner:
                    type: string
                  team:
                    type: string
                  tenant:
                    type: string
                  workspaceID:
                    type: string
                required:
                - owner
                - workspaceID
                type: object
              ports:
                items:
                  properties:
                    port:
                      format: int32
                      type: integer
                    visibility:
                      default: Owner
                      enum:
                      - Owner
                      - Everyone
                      type: string
                  required:
                  - port
                  - visibility
                  type: object
                minItems: 0
                type: array
              timeout:
                properties:
                  time:
                    type: string
                type: object
              type:
                enum:
                - Regular
                - Prebuild
                - ImageBuild
                type: string
              workspaceLocation:
                type: string
            required:
            - admission
            - class
            - image
            - initializer
            - ownership
            - ports
            - type
            - workspaceLocation
            type: object
          status:
            description: WorkspaceStatus defines the observed state of Workspace
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              git:
                properties:
                  branch:
                    description: branch is branch we're currently on
                    type: string
                  latestCommit:
                    description: latest_commit is the most recent commit on the current
                      branch
                    type: string
                  totalUncommitedFiles:
                    description: the total number of uncommited files
                    format: int64
                    type: integer
                  totalUnpushedCommits:
                    description: the total number of unpushed changes
                    format: int64
                    type: integer
                  totalUntrackedFiles:
                    description: the total number of untracked files
                    format: int64
                    type: integer
                  uncommitedFiles:
                    description: uncommited_files is the number of uncommitted files,
                      possibly truncated
                    items:
                      type: string
                    type: array
                  unpushedCommits:
                    description: unpushed_commits is the number of unpushed changes
                      in the workspace, possibly truncated
                    items:
                      type: string
                    type: array
                  untrackedFiles:
                    description: untracked_files is the number of untracked files
                      in the workspace, possibly truncated
                    items:
                      type: string
                    type: array
                type: object
              headless:
                type: boolean
              ownerToken:
                type: string
              phase:
                default: Unknown
                enum:
                - Unknown
                - Pending
                - Imagebuild
                - Creating
                - Initializing
                - Running
                - Stopping
                - Stopped
                type: string
              podStarts:
                type: integer
              runtime:
                properties:
                  hostIP:
                    type: string
                  nodeName:
                    type: string
                  podIP:
                    type: string
                  podName:
                    type: string
                type: object
              snapshot:
                description: Snapshot contains a snapshot URL if a snapshot was produced
                  prior to shutting the workspace down. This condition is only used
                  for headless workspaces.
                type: string
              url:
                type: string
            required:
            - headless
            - podStarts
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
