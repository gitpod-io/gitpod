// Copyright (c) 2021 Gitpod GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sshkey.proto

package io.gitpod.supervisor.api;

public final class Sshkey {
  private Sshkey() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CreateSSHKeyPairRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:supervisor.CreateSSHKeyPairRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code supervisor.CreateSSHKeyPairRequest}
   */
  public static final class CreateSSHKeyPairRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:supervisor.CreateSSHKeyPairRequest)
      CreateSSHKeyPairRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateSSHKeyPairRequest.newBuilder() to construct.
    private CreateSSHKeyPairRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateSSHKeyPairRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateSSHKeyPairRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CreateSSHKeyPairRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest.class, io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest)) {
        return super.equals(obj);
      }
      io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest other = (io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code supervisor.CreateSSHKeyPairRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:supervisor.CreateSSHKeyPairRequest)
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest.class, io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest.Builder.class);
      }

      // Construct using io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairRequest_descriptor;
      }

      @java.lang.Override
      public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest getDefaultInstanceForType() {
        return io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest build() {
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest buildPartial() {
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest result = new io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest) {
          return mergeFrom((io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest other) {
        if (other == io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:supervisor.CreateSSHKeyPairRequest)
    }

    // @@protoc_insertion_point(class_scope:supervisor.CreateSSHKeyPairRequest)
    private static final io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest();
    }

    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateSSHKeyPairRequest>
        PARSER = new com.google.protobuf.AbstractParser<CreateSSHKeyPairRequest>() {
      @java.lang.Override
      public CreateSSHKeyPairRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateSSHKeyPairRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreateSSHKeyPairRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateSSHKeyPairRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CreateSSHKeyPairResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:supervisor.CreateSSHKeyPairResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string private_key = 1;</code>
     * @return The privateKey.
     */
    java.lang.String getPrivateKey();
    /**
     * <code>string private_key = 1;</code>
     * @return The bytes for privateKey.
     */
    com.google.protobuf.ByteString
        getPrivateKeyBytes();
  }
  /**
   * Protobuf type {@code supervisor.CreateSSHKeyPairResponse}
   */
  public static final class CreateSSHKeyPairResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:supervisor.CreateSSHKeyPairResponse)
      CreateSSHKeyPairResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CreateSSHKeyPairResponse.newBuilder() to construct.
    private CreateSSHKeyPairResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CreateSSHKeyPairResponse() {
      privateKey_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CreateSSHKeyPairResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CreateSSHKeyPairResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              privateKey_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse.class, io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse.Builder.class);
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object privateKey_;
    /**
     * <code>string private_key = 1;</code>
     * @return The privateKey.
     */
    @java.lang.Override
    public java.lang.String getPrivateKey() {
      java.lang.Object ref = privateKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        privateKey_ = s;
        return s;
      }
    }
    /**
     * <code>string private_key = 1;</code>
     * @return The bytes for privateKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrivateKeyBytes() {
      java.lang.Object ref = privateKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        privateKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, privateKey_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(privateKey_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, privateKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse)) {
        return super.equals(obj);
      }
      io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse other = (io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse) obj;

      if (!getPrivateKey()
          .equals(other.getPrivateKey())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPrivateKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code supervisor.CreateSSHKeyPairResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:supervisor.CreateSSHKeyPairResponse)
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse.class, io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse.Builder.class);
      }

      // Construct using io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        privateKey_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.gitpod.supervisor.api.Sshkey.internal_static_supervisor_CreateSSHKeyPairResponse_descriptor;
      }

      @java.lang.Override
      public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse getDefaultInstanceForType() {
        return io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse.getDefaultInstance();
      }

      @java.lang.Override
      public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse build() {
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse buildPartial() {
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse result = new io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse(this);
        result.privateKey_ = privateKey_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse) {
          return mergeFrom((io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse other) {
        if (other == io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse.getDefaultInstance()) return this;
        if (!other.getPrivateKey().isEmpty()) {
          privateKey_ = other.privateKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object privateKey_ = "";
      /**
       * <code>string private_key = 1;</code>
       * @return The privateKey.
       */
      public java.lang.String getPrivateKey() {
        java.lang.Object ref = privateKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          privateKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string private_key = 1;</code>
       * @return The bytes for privateKey.
       */
      public com.google.protobuf.ByteString
          getPrivateKeyBytes() {
        java.lang.Object ref = privateKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          privateKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string private_key = 1;</code>
       * @param value The privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        privateKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string private_key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKey() {
        
        privateKey_ = getDefaultInstance().getPrivateKey();
        onChanged();
        return this;
      }
      /**
       * <code>string private_key = 1;</code>
       * @param value The bytes for privateKey to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        privateKey_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:supervisor.CreateSSHKeyPairResponse)
    }

    // @@protoc_insertion_point(class_scope:supervisor.CreateSSHKeyPairResponse)
    private static final io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse();
    }

    public static io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CreateSSHKeyPairResponse>
        PARSER = new com.google.protobuf.AbstractParser<CreateSSHKeyPairResponse>() {
      @java.lang.Override
      public CreateSSHKeyPairResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateSSHKeyPairResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CreateSSHKeyPairResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CreateSSHKeyPairResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.gitpod.supervisor.api.Sshkey.CreateSSHKeyPairResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_supervisor_CreateSSHKeyPairRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_supervisor_CreateSSHKeyPairRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_supervisor_CreateSSHKeyPairResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_supervisor_CreateSSHKeyPairResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014sshkey.proto\022\nsupervisor\032\034google/api/a" +
      "nnotations.proto\"\031\n\027CreateSSHKeyPairRequ" +
      "est\"/\n\030CreateSSHKeyPairResponse\022\023\n\013priva" +
      "te_key\030\001 \001(\t2\211\001\n\rSSHKeyService\022x\n\020Create" +
      "SSHKeyPair\022#.supervisor.CreateSSHKeyPair" +
      "Request\032$.supervisor.CreateSSHKeyPairRes" +
      "ponse\"\031\202\323\344\223\002\023\"\021/v1/sshkey/createBF\n\030io.g" +
      "itpod.supervisor.apiZ*github.com/gitpod-" +
      "io/gitpod/supervisor/apib\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
        });
    internal_static_supervisor_CreateSSHKeyPairRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_supervisor_CreateSSHKeyPairRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_supervisor_CreateSSHKeyPairRequest_descriptor,
        new java.lang.String[] { });
    internal_static_supervisor_CreateSSHKeyPairResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_supervisor_CreateSSHKeyPairResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_supervisor_CreateSSHKeyPairResponse_descriptor,
        new java.lang.String[] { "PrivateKey", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.api.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
