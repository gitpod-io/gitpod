{
  "swagger": "2.0",
  "info": {
    "title": "token.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TokenService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/token/{kind}/clear/all/{all}": {
      "delete": {
        "operationId": "TokenService_ClearToken2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/supervisorClearTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "all",
            "in": "path",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/v1/token/{kind}/{host}": {
      "post": {
        "operationId": "TokenService_SetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/supervisorSetTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "host",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "token": {
                  "type": "string"
                },
                "expiryDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "reuse": {
                  "$ref": "#/definitions/supervisorTokenReuse"
                }
              }
            }
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/v1/token/{kind}/{host}/{scope}": {
      "get": {
        "operationId": "TokenService_GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/supervisorGetTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "host",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "path",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "minItems": 1
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/v1/token/{kind}/{value}": {
      "delete": {
        "operationId": "TokenService_ClearToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/supervisorClearTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "value",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "all",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    }
  },
  "definitions": {
    "ProvideTokenRequestRegisterProvider": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "supervisorClearTokenResponse": {
      "type": "object"
    },
    "supervisorGetTokenRequest": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "supervisorGetTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "user": {
          "type": "string",
          "description": "* The username of the account associated with the token."
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "supervisorProvideTokenResponse": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/supervisorGetTokenRequest"
        }
      }
    },
    "supervisorSetTokenRequest": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "scope": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "token": {
          "type": "string"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "reuse": {
          "$ref": "#/definitions/supervisorTokenReuse"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "supervisorSetTokenResponse": {
      "type": "object"
    },
    "supervisorTokenReuse": {
      "type": "string",
      "enum": [
        "REUSE_NEVER",
        "REUSE_EXACTLY",
        "REUSE_WHEN_POSSIBLE"
      ],
      "default": "REUSE_NEVER",
      "description": " - REUSE_NEVER: REUSE_NEVER means the token can never be re-used.\nThis mode only makes sense when providing a token in response to a request.\n - REUSE_EXACTLY: REUSE_EXACTLY means the token can only be reused when the requested scopes\nexactly match those of the token.\n - REUSE_WHEN_POSSIBLE: REUSE_WHEN_POSSIBLE means the token can be reused when the requested scopes\nare a subset of the token's scopes."
    }
  }
}
