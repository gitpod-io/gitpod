name: Run integration tests
description: Runs an integration test suite against an existing preview environment

inputs:
  test_suite:
    description: "Test suite to run"
    default: workspace
  notify_slack_webhook:
    description: "Optional Slack webhook to notify on test success/failure"
    default: ""
  preview_name:
    description: "Name of the preview environment to run the tests against"
    required: true
  github_token:
    description: "The GitHub token to use when authenticating with GitHub"
    required: true
  latest_ide_version:
    description: "Use the latest IDE version"
    required: false
    default: ""
  test_build_id:
    description: "The build ID of the test run. Used in the IDE integration tests."
    required: false
  test_build_url:
    description: "The build URL of the test run. Used in the IDE integration tests."
    required: false
  test_build_ref:
    description: "The build ref of the test run. Used in the IDE integration tests."
    required: false
  integration_test_username:
    description: "The username for integration test"
    required: true
  integration_test_usertoken:
    description: "The username for integration test"
    required: true
  identity_provider:
    description: "GCP workload identity provider"
    required: true
  service_account:
    description: "GCP service account"
    required: true
  leeway_segment_key:
    description: "leeway analytics key"
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - id: env-vars
      name: configure env variables
      shell: bash
      run: |
        {
            echo "LEEWAY_SEGMENT_KEY=${{ inputs.leeway_segment_key }}"
            echo "LEEWAY_WORKSPACE_ROOT=$GITHUB_WORKSPACE"
            echo "HOME=/home/gitpod"
        }  >> "$GITHUB_ENV"
    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: "${{ inputs.identity_provider }}"
        service_account: "${{ inputs.service_account }}"
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        skip_install: true
    - id: docker
      name: configure docker
      shell: bash
      run: |
        gcloud auth configure-docker eu.gcr.io --quiet
    - name: Setup
      shell: bash
      env:
        PREVIEW_NAME: ${{ inputs.preview_name }}
      run: |
        leeway run dev/preview/previewctl:install
        previewctl install-context --branch "${PREVIEW_NAME}" --log-level debug --timeout 10m

    - name: Integration Test
      id: integration-test
      shell: bash
      env:
        ROBOQUAT_TOKEN: ${{ inputs.github_token }}
        INTEGRATION_TEST_USERNAME: ${{ inputs.integration_test_username }}
        INTEGRATION_TEST_USER_TOKEN: ${{ inputs.integration_test_usertoken }}
        PREVIEW_NAME: ${{ inputs.preview_name }}
        TEST_USE_LATEST_VERSION: ${{ inputs.latest_ide_version }}
        TEST_BUILD_ID: ${{ inputs.test_build_id }}
        TEST_BUILD_URL: ${{ inputs.test_build_url }}
        TEST_BUILD_REF: ${{ inputs.test_build_ref }}
      run: |
        set -euo pipefail

        printf -v start_time '%(%s)T'

        pushd test
        set +e
        ./run.sh -s "${{ inputs.test_suite }}"
        RC=${PIPESTATUS[0]}
        set -e
        popd

        printf -v end_time '%(%s)T'
        duration_sec=$((end_time - start_time))
        duration_min=$((duration_sec / 60))
        duration_sec=$((duration_sec % 60))
        duration="${duration_min}m${duration_sec}s"
        echo "duration=${duration}" >> $GITHUB_OUTPUT

        exit $RC
    - uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: "test/**/TEST-*.xml"
      if: always()
    - name: Test Summary
      id: test_summary
      uses: test-summary/action@v2
      with:
        paths: "test/**/TEST-*.xml"
        show: "all"
      if: always()
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      if: ${{ (success() || failure()) && inputs.notify_slack_webhook != '' }}
      env:
        SLACK_WEBHOOK: ${{ inputs.notify_slack_webhook }}
        SLACK_ICON_EMOJI: ":test_tube:"
        SLACK_USERNAME: "Integration Tests: ${{ inputs.test_suite }}"
        SLACK_COLOR: ${{ steps.integration-test.outcome }}
        SLACK_MESSAGE: "${{ steps.test_summary.outputs.passed }} tests passed, ${{ steps.test_summary.outputs.failed }} tests failed, ${{ steps.test_summary.outputs.skipped }} tests skipped (took ${{ steps.integration-test.outputs.duration }})"
        SLACK_FOOTER: "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Workflow logs>"
