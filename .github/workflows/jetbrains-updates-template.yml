on:
  workflow_call:
    inputs:
      productName:
        type: string
        required: true
      productId:
        type: string
        required: true
      productCode:
        type: string
        required: true
      productType:
        type: string
        required: true
    secrets:
      slackWebhook:
        required: true

jobs:
  update-jetbrains:
    runs-on: ubuntu-latest
    steps:
      - name: Latest Release
        id: latest-release
        run: |
          data=$(curl -sSL "https://data.services.jetbrains.com/products?code=${{ inputs.productCode }}&release.type=${{ inputs.productType }}&fields=distributions%2Clink%2Cname%2Creleases&_=$(date +%s)000")
          link=$(echo "$data" | jq -r '.[0].releases[0].downloads.linux.link')
          build=$(echo "$data" | jq -r '.[0].releases[0].build')
          build2=$(echo "$build" | sed 's/\./-/g')
          echo "::set-output name=result::$link"
          echo "::set-output name=version::$build"
          echo "::set-output name=version2::$build2"
      - uses: actions/checkout@v2
      - name: Used Release
        id: used-release
        run: echo "::set-output name=result::$(yq e '.defaultArgs.${{ inputs.productId }}DownloadUrl' WORKSPACE.yaml)"
      - name: No Update Available
        if: steps.latest-release.outputs.result == steps.used-release.outputs.result
        run: |
          echo "Nothing to do."
          echo "Latest release: ${{ steps.latest-release.outputs.result }}"
          echo "Used release:   ${{ steps.used-release.outputs.result }}"
      - name: Update Available
        if: steps.latest-release.outputs.result != steps.used-release.outputs.result
        run: |
          echo "There is an update available!"
          echo "Latest release: ${{ steps.latest-release.outputs.result }}"
          echo "Used release:   ${{ steps.used-release.outputs.result }}"
          yq -i e '.defaultArgs.${{ inputs.productId }}DownloadUrl = "${{ steps.latest-release.outputs.result }}"' WORKSPACE.yaml
          git diff
      - name: Create Pull Request
        if: steps.latest-release.outputs.result != steps.used-release.outputs.result
        uses: peter-evans/create-pull-request@v3
        with:
          title: "[${{ inputs.productId }}] Update IDE image to build version ${{ steps.latest-release.outputs.version }}"
          body: |
            ## Description
            This PR updates the ${{ inputs.productName }} IDE image to the latest release version.

            ## How to test
            Go to the preferences and select ${{ inputs.productName }} as desktop IDE. Start a workspace and verify that the new IDE version works.

            ## Release Notes
            ```release-note
            Update ${{ inputs.productName }} IDE image to version ${{ steps.latest-release.outputs.version }}.
            ```
          commit-message: "[${{ inputs.productId }}] Update IDE image to build version ${{ steps.latest-release.outputs.version }}"
          branch: "jetbrains/${{ inputs.productId }}-${{ steps.latest-release.outputs.version2 }}"
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.slackWebhook }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: ${{ inputs.productName }}
