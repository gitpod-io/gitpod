---
name: "Publish draft pre-release"

on:
  push:
    tags:
      - "*-rc*"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check_step.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current branch
        id: check_step
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "::set-output name=branch::$branch"
          echo "Branch is $branch."

  generate-release-note:
    needs: [check]
    runs-on: ubuntu-latest
    container: eu.gcr.io/gitpod-core-dev/dev/changelog:0.0.36
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "${{ github.event.base_ref }}"
          git checkout -b ${{ needs.check.outputs.branch }}
          echo "testing" > install/installer/docs/release-note.md
          if [[ $(git status --porcelain) ]]; then
            git config --global user.name $GITHUB_USER
            git config --global user.email $GITHUB_EMAIL
            git add install/installer/docs/release-note.md
            git commit -m "[release-note] upload release note"
            git push origin ${{ needs.check.outputs.branch }}
          fi
        env:
          GITHUB_USER: roboquat
          GITHUB_EMAIL: roboquat@gitpod.io
          TOKEN: ${{ secrets.ROBOQUAT_AUTOMATIC_CHANGELOG }}
        shell: bash

  release:
    needs: [generate-release-note]
    runs-on: ubuntu-latest
    steps:
    - name: Get release note
      id: note
      run: echo ::set-output name=releasenote::$(cat install/installer/docs/release-note.md)
    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.ROBOQUAT_AUTOMATIC_CHANGELOG }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
        body: |
          ${{ steps.note.outputs.releasenote }}
