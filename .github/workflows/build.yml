name: Build
on:
  pull_request:
    types: [opened, synchronize, edited]

jobs:
  # We are building "previewctl" outside of "build" because we want to start
  # the infrastructure job as early as possible (before a full build is done)
  # and that job requires previewctl
  previewctl:
    if: ${{ contains(github.event.pull_request.body, '[x] /werft with-github-actions') && contains(github.event.pull_request.body, '[x] /werft with-preview') }}
    concurrency:
      group: ${{ github.head_ref || github.ref }}-previewctl
      cancel-in-progress: true
    runs-on: [self-hosted]
    container:
      image: eu.gcr.io/gitpod-core-dev/dev/dev-environment:mads-leeway-v0.7.3.4
    steps:
      - uses: actions/checkout@v3
      - name: Build previewctl
        shell: bash
        env:
          HOME: /home/gitpod
          PREVIEW_ENV_DEV_SA_KEY: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          # Authenticate with GCP so we can use the Leeway cache
          export PREVIEW_ENV_DEV_SA_KEY_PATH="$HOME/.config/gcloud/preview-environment-dev-sa.json"
          echo "${PREVIEW_ENV_DEV_SA_KEY}" > "${PREVIEW_ENV_DEV_SA_KEY_PATH}"
          gcloud auth activate-service-account --key-file "${PREVIEW_ENV_DEV_SA_KEY_PATH}"

          export LEEWAY_WORKSPACE_ROOT="$(pwd)"
          leeway build dev/preview/previewctl:cli

  infrastructure:
    runs-on: [self-hosted]
    needs: [previewctl]
    concurrency:
      group: ${{ github.head_ref || github.ref }}-infrastructure
    steps:
      - uses: actions/checkout@v3
      - name: Create preview environment infrastructure
        env:
          TF_VAR_infra_provider: ${{ contains(github.event.pull_request.body, '[X] /werft with-gce-vm') && 'gce' || 'harvester' }}
        id: create
        uses: ./.github/actions/preview-create
        with:
          sa_key: ${{ secrets.GCP_CREDENTIALS }}

  build:
    if: ${{ contains(github.event.pull_request.body, '[x] /werft with-github-actions') }}
    runs-on: [self-hosted]
    concurrency:
      group: ${{ github.head_ref || github.ref }}-build
      cancel-in-progress: true
    outputs:
      version: ${{ steps.leeway.outputs.version }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_TCP_PORT: 23306
    container:
      image: eu.gcr.io/gitpod-core-dev/dev/dev-environment:mads-leeway-v0.7.3.4
      env:
        DB_HOST: mysql
    steps:
      - uses: actions/checkout@v3
      - name: Configure workspace
        run: |
          cp -r /__w/gitpod/gitpod /workspace
          # Needed by google-github-actions/setup-gcloud
          sudo chown -R gitpod:gitpod /__t
          # Needed by docker/login-action
          sudo chmod goa+rw /var/run/docker.sock
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - uses: docker/login-action@v2
        with:
          registry: eu.gcr.io
          username: oauth2accesstoken
          password: "${{ steps.auth.outputs.access_token }}"
      - name: "Determine Branch"
        id: branches
        uses: transferwise/sanitize-branch-name@v1
      - name: Leeway Vet
        shell: bash
        working-directory: /workspace/gitpod
        run: |
          leeway vet --ignore-warnings
      - name: Pre-Commit Checks
        shell: bash
        working-directory: /workspace/gitpod
        run: |
          RESULT=0
          pre-commit run --show-diff-on-failure || RESULT=$?
          if [ $RESULT -ne 0 ]; then
            echo "::error title=The Pre-Commit Checks Failed.::Please run 'pre-commit run --show-diff-on-failure'"
          fi
          exit "$RESULT"
      - name: Check License Headers
        shell: bash
        working-directory: /workspace/gitpod
        run: |
          RESULT=0
          LICENCE_HEADER_CHECK_ONLY=true leeway run components:update-license-header || RESULT=$?
          if [ $RESULT -ne 0 ]; then
            echo "::error title=There are some license headers missing.::Please run 'leeway run components:update-license-header'"
          fi
          exit "$RESULT"
      - name: Get Secrets from GCP
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v1'
        with:
          secrets: |-
            segment-io-token:gitpod-core-dev/segment-io-token
      - name: Parse PullRequest
        shell: bash
        working-directory: /workspace/gitpod
        env:
          PR_DESC: '${{ github.event.pull_request.body }}'
        run: |
          PR_NO_CACHE=${{ contains(github.event.pull_request.body, '[x] leeway-no-cache') }}
          PR_NO_TEST=${{ contains(github.event.pull_request.body, '[x] /werft no-test') }}
          PR_LEEWAY_TARGET=$(echo "$PR_DESC" | sed -n -e 's/^.*leeway-target=//p' | sed 's/\r$//')

          echo "PR_NO_CACHE=$PR_NO_CACHE" >> $GITHUB_ENV
          echo "PR_NO_TEST=$PR_NO_TEST"   >> $GITHUB_ENV
          echo "PR_LEEWAY_TARGET=$PR_LEEWAY_TARGET" >> $GITHUB_ENV
      - name: Leeway Build
        id: leeway
        shell: bash
        working-directory: /workspace/gitpod
        env:
          JAVA_HOME: /home/gitpod/.sdkman/candidates/java/current
          VERSION: "${{ steps.branches.outputs.sanitized-branch-name }}.${{github.run_number}}"
          SEGMENT_IO_TOKEN: '${{ steps.secrets.outputs.segment-io-token }}'
        run: |
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          [[ "$PR_NO_CACHE" = "true" ]] && CACHE="none"       || CACHE="remote"
          [[ "$PR_NO_TEST"  = "true" ]] && TEST="--dont-test" || TEST=""
          [[ -z "$PR_LEEWAY_TARGET" ]] && PR_LEEWAY_TARGET="components:all-ci"

          mkdir -p /__w/gitpod/gitpod/test-coverage-report

          RESULT=0
          set -x
          leeway build $PR_LEEWAY_TARGET \
            --cache $CACHE \
            $TEST \
            -Dversion=$VERSION \
            -DSEGMENT_IO_TOKEN=$SEGMENT_IO_TOKEN \
            -DpublishToNPM=false \
            --coverage-output-path=/__w/gitpod/gitpod/test-coverage-report \
            --report report.html || RESULT=$?
          set +x

          cat report.html >> $GITHUB_STEP_SUMMARY
          exit $RESULT
      - name: "Upload Test Coverage Report"
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage-report
          if-no-files-found: ignore
          path: |
            test-coverage-report

  install:
    name: "Install Gitpod"
    needs: [build, infrastructure]
    runs-on: [self-hosted]
    concurrency:
      group: ${{ github.head_ref || github.ref }}-install
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Gitpod to the preview environment
        id: deploy-gitpod
        uses: ./.github/actions/deploy-gitpod
        with:
          sa_key: ${{ secrets.GCP_CREDENTIALS }}
          version: ${{needs.build.outputs.version}}

  monitoring:
    name: "Install Monitoring Satellite"
    needs: [infrastructure]
    runs-on: [self-hosted]
    concurrency:
      group: ${{ github.head_ref || github.ref }}-monitoring
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Deploy monitoring satellite to the preview environment
        id: deploy-monitoring-satellite
        uses: ./.github/actions/deploy-monitoring-satellite
        with:
          sa_key: ${{ secrets.GCP_CREDENTIALS }}
