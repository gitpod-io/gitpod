tasks:
    removeADCFile:
        command: |
            if [[ -n "${GCP_ADC_FILE}" ]]; then
              echo "$GCP_ADC_FILE" > "/home/gitpod/.config/gcloud/application_default_credentials.json"
              yes | gcloud auth application-default revoke
              gp env -u GCP_ADC_FILE
            fi
            exit 0
        name: 'Remove GCP_ADC_FILE'
        triggeredBy:
            - postDevcontainerStart
    installLocalAppCli:
        command: |
            leeway run components/local-app:install-cli
            leeway run components/local-app:cli-completion
            exit 0
        name: 'Install `gitpod` CLI'
        triggeredBy:
            - postDevcontainerStart
    configurePreview:
        command: INSTALL_CONTEXT=true leeway run dev/preview:configure-workspace
        dependsOn:
            - installPreviewctl
        name: 'Preview environment configuration'
        triggeredBy:
            - postDevcontainerStart
    buildJava:
        command: |
            if [ -z "$RUN_GRADLE_TASK" ]; then
              read -r -p "Press enter to continue Java gradle task"
            fi
            leeway exec --package components/supervisor-api/java:lib --package components/gitpod-protocol/java:lib -- ./gradlew build
            leeway exec --package components/ide/jetbrains/backend-plugin:plugin-latest --package components/ide/jetbrains/gateway-plugin:publish-latest --parallel -- ./gradlew buildPlugin
        name: 'Java: build with Gradle'
    setupClaudeCode:
        command: |
            if [[ -z "${CLAUDE_JSON}" ]]; then
              echo "Skipping setup for Claude Code. Setup a CLAUDE_JSON variable to reuse Claude Code in workspaces."
            else
              echo $CLAUDE_JSON > ~/.claude.json
            fi
        name: 'claude code'
        triggeredBy:
            - postDevcontainerStart
    installPreviewctl:
        command: leeway run dev/preview/previewctl:install
        name: 'Preview environment configuration: init'
    installInstallerDependencies:
        command: |
            (cd install/installer && make deps)
            exit 0
        name: 'Installer dependencies'
        triggeredBy:
            - postDevcontainerStart
    buildTypescript:
        command: yarn --network-timeout 100000 && yarn build
        name: 'TypeScript: install and build'
        triggeredBy:
            - postDevcontainerStart
    setupPreCommit:
        command: |
            pre-commit install --install-hooks
            exit 0
        name: 'Install pre-commit hooks'
        triggeredBy:
            - postDevcontainerStart
    initGo:
        command: |
            ./components/gitpod-protocol/go/scripts/generate-config.sh
            leeway exec --filter-type go -v -- go mod verify
        name: 'Go: init'
        triggeredBy:
            - postDevcontainerStart
