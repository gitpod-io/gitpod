installation:
  stage: devstaging
  tenant: gitpod-core
  region: europe-west1
  cluster: "00"
  shortname: "dev"
hostname: staging.gitpod-dev.com
imagePrefix: eu.gcr.io/gitpod-core-dev/build/
certificatesSecret:
  secretName: proxy-config-certificates
  fullChainName: tls.crt
  chainName: tls.crt
  keyName: tls.key
version: not-set
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: gitpod.io/workload_meta
          operator: In
          values:
          - "true"
authProviders: []
tracing:
  endoint: http://jaeger-collector:14268/api/traces
  samplerType: const
  samplerParam: "1"

components:
  server:
    replicas: 1
    makeNewUsersAdmin: true # for development
    theiaPluginsBucketName: gitpod-core-dev-plugins
    wsman:
    - name: "local"
      address: "ws-manager:8080"
    - name: "dev"
      address: "ws-manager-dev:8080"

  registryFacade:
    daemonSet: true

  workspace:
    # configure GCP registry
    pullSecret:
      secretName: gcp-sa-registry-auth
    affinity:
      default: "gitpod.io/workload_workspace"
    templates:
      default:
        spec:
          dnsConfig:
            nameservers:
            - 1.1.1.1
            - 8.8.8.8
          dnsPolicy: None   # do NOT query against K8s DNS (https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/)
          env:
          - name: THEIA_PREVENT_METADATA_ACCESS
            value: true
      regular:
        spec:
          containers:
          - name: "workspace"
            env:
            - name: THEIA_RATELIMIT_LOG
              value: "50"
      prebuild:
        spec:
          containers:
          - name: workspace
            # Intended to reduce the density for prebuilds
            resources:
              limits:
                cpu: "5"
                memory: 12Gi
              requests:
                cpu: 1m
                ephemeral-storage: 5Gi
                memory: 4608Mi  # = 2 * 2304Mi
  
  # Allow per-branch ingress from another, in-cluster proxy
  proxy:
    replicas: 1
    ports:
      http:
        expose: true
        containerPort: 80
        nodePort: null
      https:
        expose: true
        containerPort: 443
        nodePort: null
      metrics:
        containerPort: 9145
    serviceSessionAffinity: "None"
    serviceExternalTrafficPolicy: null
    serviceType: "ClusterIP"
    deployIngressService: false
    loadBalancerIP: null

  # Enable events trace
  wsManager:
    eventTraceLogLocation: "/tmp/evts.json"
     # TODO: [geropl] Why is this not part of values.yaml?
    additionalConfig:
      theiaSupervisorToken: "354c0b368f2b4a93b7b812564e663d23"

  # Use Hosts SSD for perf and to not spam the boot disk
  nodeDaemon:
    theiaHostBasePath: /mnt/disks/ssd0

  imageBuilder:
    hostDindData: "/mnt/disks/ssd0/builder"
    # configure GCP registry
    registry:
      name: eu.gcr.io/gitpod-core-dev/registry
      secretName: gcp-sa-registry-auth
      path: gcp-sa-registry-auth
    registryCerts: []

  wsDaemon:
    hostWorkspaceArea: /mnt/disks/ssd0/workspaces
    volumes:
    - name: gcloud-tmp
      hostPath:
        path: /mnt/disks/ssd0/sync-tmp
        type: DirectoryOrCreate
    volumeMounts:
    - mountPath: /mnt/sync-tmp
      name: gcloud-tmp
    userNamespaces:
      shiftfsModuleLoader:
        enabled: true

  # Enable ws-proxy in dev
  wsProxy:
    name: "ws-proxy"
    disabled: false
    replicas: 1

# configure GCP registry
docker-registry:
  enabled: false

minio:
  serviceAccount:
    name: ws-daemon
    create: false