# debug using `werft run github -f -s .werft/installer-tests.ts -j .werft/eks-installer-tests.yaml -a debug=true`
pod:
  serviceAccount: werft
  affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: dev/workload
          operator: In
          values:
          - "builds"
  securityContext:
    runAsUser: 0
  volumes:
  - name: sh-playground-sa-perm
    secret:
      secretName: sh-playground-sa-perm
  - name: sh-playground-dns-perm
    secret:
      secretName: sh-playground-dns-perm
  - name: sh-aks-perm
    secret:
      secretName: aks-credentials
  containers:
  - name: nightly-test
    image: eu.gcr.io/gitpod-core-dev/dev/dev-environment:cw-werft-cred.0
    workingDir: /workspace
    imagePullPolicy: Always
    volumeMounts:
    - name: sh-playground-sa-perm
      mountPath: /mnt/secrets/sh-playground-sa-perm
    - name: sh-playground-dns-perm # this sa is used for the DNS management
      mountPath: /mnt/secrets/sh-playground-dns-perm
    env:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: aws-credentials
          key: aws-access-key
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: aws-credentials
          key: aws-secret-key
    - name: AWS_REGION
      valueFrom:
        secretKeyRef:
          name: aws-credentials
          key: aws-region
    - name: WERFT_HOST
      value: "werft.werft.svc.cluster.local:7777"
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/mnt/secrets/sh-playground-sa-perm/sh-sa.json"
    - name: WERFT_K8S_NAMESPACE
      value: "werft"
    - name: WERFT_K8S_LABEL
      value: "component=werft"
    - name: TF_VAR_sa_creds
      value: "/mnt/secrets/sh-playground-sa-perm/sh-sa.json"
    - name: TF_VAR_dns_sa_creds
      value: "/mnt/secrets/sh-playground-dns-perm/sh-dns-sa.json"
    - name: NODENAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    command:
      - bash
      - -c
      - |
        sleep 1
        set -Eeuo pipefail

        sudo chown -R gitpod:gitpod /workspace
        sudo apt update && apt install gettext-base

        export TF_VAR_TEST_ID="$(echo $RANDOM | md5sum | head -c 5; echo)"

        (cd .werft && yarn install && mv node_modules ..) | werft log slice prep
        printf '{{ toJson . }}' > context.json
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

        npx ts-node .werft/installer-tests.ts "STANDARD_EKS_TEST"
# The bit below makes this a cron job
# plugins:
#   cron: "15 3 * * *"
