# debug using `werft run github -f -s .werft/installer-tests.ts -j .werft/self-hosted-installer-tests.yaml -a debug=true`
pod:
  serviceAccount: werft
  restartPolicy: Never
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: dev/workload
            operator: In
            values:
            - "builds"
  securityContext:
    runAsUser: 0
  volumes:
  - name: sh-playground-sa-perm
    secret:
      secretName: sh-playground-sa-perm
  - name: sh-playground-dns-perm
    secret:
      secretName: sh-playground-dns-perm
  - name: sh-aks-perm
    secret:
      secretName: aks-credentials
  containers:
  - name: nightly-test
    image: eu.gcr.io/gitpod-core-dev/dev/dev-environment:aledbf-oci-tool-gha.14121
    workingDir: /workspace
    imagePullPolicy: Always
    volumeMounts:
    - name: sh-playground-sa-perm
      mountPath: /mnt/secrets/sh-playground-sa-perm
    - name: sh-playground-dns-perm # this sa is used for the DNS management
      mountPath: /mnt/secrets/sh-playground-dns-perm
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: "/mnt/secrets/sh-playground-sa-perm/sh-sa.json"
    - name: TF_VAR_sa_creds
      value: "/mnt/secrets/sh-playground-sa-perm/sh-sa.json"
    - name: TF_VAR_dns_sa_creds
      value: "/mnt/secrets/sh-playground-dns-perm/sh-dns-sa.json"
    - name: ARM_SUBSCRIPTION_ID
      valueFrom:
        secretKeyRef:
          name: aks-credentials
          key: subscriptionid
    - name: ARM_TENANT_ID
      valueFrom:
        secretKeyRef:
          name: aks-credentials
          key: tenantid
    - name: ARM_CLIENT_ID
      valueFrom:
        secretKeyRef:
          name: aks-credentials
          key: clientid
    - name: ARM_CLIENT_SECRET
      valueFrom:
        secretKeyRef:
          name: aks-credentials
          key: clientsecret
    - name: NODENAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    - name: USER_TOKEN # this is for the integration tests
      valueFrom:
        secretKeyRef:
          name: integration-test-user
          key: token
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: aws-credentials
          key: aws-access-key
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: aws-credentials
          key: aws-secret-key
    - name: AWS_REGION
      valueFrom:
        secretKeyRef:
          name: aws-credentials
          key: aws-region
    - name: IDE_SLACK_NOTIFICATION_PATH
      valueFrom:
        secretKeyRef:
          name: slack-webhook-urls
          key: ide_jobs
    - name: WS_SLACK_NOTIFICATION_PATH
      valueFrom:
        secretKeyRef:
          name: slack-webhook-urls
          key: workspace_jobs
    - name: SH_SLACK_NOTIFICATION_PATH
      valueFrom:
        secretKeyRef:
          name: slack-webhook-urls
          key: self_hosted_jobs
    - name: self_hosted_jobs
      value: "true"
    command:
      - bash
      - -c
      - |
        sleep 1
        set -Eeuo pipefail

        sudo chown -R gitpod:gitpod /workspace
        sudo apt update && apt install gettext-base

        curl -sLS https://get.k3sup.dev | sh
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

        (cd .werft && yarn install && mv node_modules ..) | werft log slice prep
        printf '{{ toJson . }}' > context.json

        export domain="{{ .Annotations.subdomain }}"
        if [[ "$domain" == "<no value>" ]]; then
          echo "Cleanup all old workspaces"
        else
          export TF_VAR_TEST_ID="$domain"
        fi

        TESTCONFIG="CLEANUP_OLD_TESTS"

        npx ts-node .werft/installer-tests.ts ${TESTCONFIG}
