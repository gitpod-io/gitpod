# debug using `werft run github -f -s .werft/installer-tests.ts -j .werft/gke-installer-tests.yaml -a debug=true`
args:
- name: subdomain
  desc: "Subdomain to use. A terraform workspace of same name will be used"
  required: false
  default: ""
- name: domain
  desc: "domain to use. Make sure there is a DNS zone by the same name ('.' replaces by '-' under the project 'dns-for-playgrounds')"
  required: false
  default: "tests.gitpod-self-hosted.com"
- name: channel
  desc: "Replicated channel to use"
  required: false
  default: ""
- name: replicatedApp
  desc: "Replicated App to use"
  required: false
  default: ""
- name: version
  desc: "Version of gitpod to install(in the case of upgrade tests, this is the initial install version and will later get upgraded to latest"
  required: false
  default: ""
- name: skipTests
  desc: "Set this to true to skip integration tests"
  required: false
  default: false
- name: selfSigned
  desc: "Set this to true to generate and use a private self-signed certificate"
  required: false
  default: false
- name: upgrade
  desc: "Set this to true to run KOTS upgrade from the specified version to the latest version"
  required: false
  default: false
- name: preview
  desc: "Setting preview to true creates a self-hosted preview for you to consume"
  required: false
  default: true
- name: deps
  desc: "Specify if the dependencies(storage, db, registry) should be external or incluster. If unset, a random combination will be chosen. options:[external, incluster]"
  required: false
pod:
  serviceAccount: werft
  restartPolicy: Never
  affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: dev/workload
              operator: In
              values:
                - "builds"
  securityContext:
    runAsUser: 0
  volumes:
    - name: sh-playground-sa-perm
      secret:
        secretName: sh-playground-sa-perm
    - name: sh-playground-dns-perm
      secret:
        secretName: sh-playground-dns-perm
    - name: self-hosted-github-oauth
      secret:
        secretName: self-hosted-github-oauth
  containers:
    - name: nightly-test
      image: eu.gcr.io/gitpod-core-dev/dev/dev-environment:aa-update-img-tf-version.0
      workingDir: /workspace
      imagePullPolicy: Always
      volumeMounts:
        - name: sh-playground-sa-perm
          mountPath: /mnt/secrets/sh-playground-sa-perm
        - name: sh-playground-dns-perm # this sa is used for the DNS management
          mountPath: /mnt/secrets/sh-playground-dns-perm
        - name: self-hosted-github-oauth
          mountPath: "/mnt/secrets/github-oauth"
      env:
        - name: GITHUB_SCM_OAUTH
          value: "/mnt/secrets/github-oauth/provider"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/mnt/secrets/sh-playground-sa-perm/sh-sa.json"
        - name: TF_VAR_sa_creds
          value: "/mnt/secrets/sh-playground-sa-perm/sh-sa.json"
        - name: TF_VAR_dns_sa_creds
          value: "/mnt/secrets/sh-playground-dns-perm/sh-dns-sa.json"
        - name: NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: IDE_SLACK_NOTIFICATION_PATH
          valueFrom:
            secretKeyRef:
              name: slack-webhook-urls
              key: ide_jobs
        - name: WS_SLACK_NOTIFICATION_PATH
          valueFrom:
            secretKeyRef:
              name: slack-webhook-urls
              key: workspace_jobs
        - name: SH_SLACK_NOTIFICATION_PATH
          valueFrom:
            secretKeyRef:
              name: slack-webhook-urls
              key: self_hosted_jobs
        - name: REPLICATED_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: replicated
              key: token
        - name: REPLICATED_APP
          valueFrom:
            secretKeyRef:
              name: replicated
              key: app
        - name: ROBOQUAT_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-roboquat-automatic-changelog
              key: token
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: integration-test-user
              key: username
        - name: USER_TOKEN # this is for the integration tests
          valueFrom:
            secretKeyRef:
              name: integration-test-user
              key: token
        - name: self_hosted_jobs
          value: true
      command:
        - bash
        - -c
        - |
          sleep 1
          set -Eeuo pipefail

          sudo chown -R gitpod:gitpod /workspace
          sudo apt update && apt install gettext-base

          # install mkcert
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert

          export domain="{{ .Annotations.subdomain }}"
          if [[ "$domain" == "<no value>" ]]; then
            export TF_VAR_TEST_ID=$(echo $RANDOM | md5sum | head -c 5; echo)-gcp
          else
            export TF_VAR_TEST_ID="$domain"
          fi

          (cd .werft && yarn install && mv node_modules ..) | werft log slice prep
          printf '{{ toJson . }}' > context.json

          npm config set update-notifier false
          npx ts-node .werft/installer-tests.ts "STANDARD_GKE_TEST"
# The bit below makes this a cron job
plugins:
  cron: "15 4 * * *"
