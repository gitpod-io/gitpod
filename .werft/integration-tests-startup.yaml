pod:
  serviceAccount: werft
  nodeSelector:
    dev/workload: builds
  imagePullSecrets:
  - name: eu-gcr-io-pull-secret
  volumes:
  - name: gcp-sa
    secret:
      secretName: gcp-sa-gitpod-dev-deployer
  - name: config
    emptyDir: {}
  containers:
  - name: gcloud
    image: eu.gcr.io/gitpod-core-dev/dev/dev-environment:prs-ws-man-bridge-audit.10
    workingDir: /workspace
    imagePullPolicy: Always
    env:
    - name: NODENAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    volumeMounts:
    - name: gcp-sa
      mountPath: /mnt/secrets/gcp-sa
      readOnly: true
    - name: config
      mountPath: /config
      readOnly: false
    command:
    - bash
    - -c
    - |
      set -euo pipefail

      function cleanup ()
      {
        werft run github -a namespace=staging-gitpod-test-main --remote-job-path .werft/wipe-devstaging.yaml github.com/gitpod-io/gitpod:main
      }


      echo "[prep] preparing config."
      gcloud auth activate-service-account --key-file /mnt/secrets/gcp-sa/service-account.json
      export GOOGLE_APPLICATION_CREDENTIALS="/home/gitpod/.config/gcloud/legacy_credentials/cd-gitpod-deployer@gitpod-core-dev.iam.gserviceaccount.com/adc.json"
      export DOCKER_HOST=tcp://$NODENAME:2375
      echo "[prep] copied config..."
      echo "[prep|DONE]"

      # this is because we don't want to increate gitpod-build-main number, we can choose a name
      sudo cp .werft/build.yaml .werft/test.yaml
      # version is actual namespace that werft is build, --job-file should be same with above
      VERSION=$(werft run github -j .werft/test.yaml github.com/gitpod-io/gitpod:main)
      echo "[build test environment] start ${VERSION}"

      # clean preview environment when the script exits
      trap cleanup SIGINT SIGTERM EXIT

      until werft job get ${VERSION} -o yaml | yq r - "phase" | grep '4' > /dev/null; do
          sleep 1
      done
      echo "[build test environment] done"
      echo "[build test environment|DONE]"

      # we need get integration-test version like: jp-run-integration-test.61

      # INTEGRATION_VERSION=$(docker run eu.gcr.io/gitpod-core-dev/build/versions:${VERSION} cat versions.yaml | yq r - 'components.integrationTest.version')

      # only for test now
      INTEGRATION_VERSION=jp-run-integration-test.80
      echo "[version] ${INTEGRATION_VERSION}"

      TEST_BUILD_ID=$(werft run github -a version=${INTEGRATION_VERSION} -a namespace=staging-gitpod-test-main -j .werft/run-integration-tests-ide.yaml -a testPattern=ide.test github.com/gitpod-io/gitpod:main)
      until werft job get ${TEST_BUILD_ID} -o yaml | yq r - "phase" | grep '4' > /dev/null; do
          sleep 1
      done

      werft job get ${TEST_BUILD_ID} -o yaml | yq r - "conditions.success" > /dev/null | grep "true"