# Copyright (c) 2023 Gitpod GmbH. All rights reserved.
# Licensed under the GNU Affero General Public License (AGPL).
# See License.AGPL.txt in the project root for license information.

schema: |-
  definition user {}

  definition organization {
    // Organization specific roles
    relation owner: user
    relation member: user

    // Membership is the union of all organization specific roles
    permission membership = owner + member

    // Operations on organizations
    permission organization_read = owner + member
    permission organization_write = owner

    // // Operations on Organization's Members
    permission organization_members_read = owner + member
    permission organization_members_write = owner + member

    permission project_create = owner
  }

  definition project {
    relation org: organization

    // A subject is an editor, if:
    //  * the user is directly assigned as an editor
    relation editor: user
    // A subject is a viewer, if:
    //  * the user is directly assigned as a viewer
    //  * the project has granted access to everyone who has membership in an organization
    relation viewer: user | organization#membership

    // Project can be modified by:
    //  * Organization owners
    //  * The user has direct editor relation
    permission project_write = org->owner + editor
    // Project can be accessed by:
    //  * Organization Owners
    //  * Direct editors
    //  * Direct viewers
    permission project_read = editor + viewer
  }

# relationships to be used for assertions & validation
relationships: |-

  // We have an organization org_1, which has some members & owners
  organization:org_1#owner@user:user_0
  organization:org_1#member@user:user_1
  organization:org_1#member@user:user_2

  // org_1 has a project
  project:project_1#org@organization:org_1
  // project_1 can be accessed by anyone in the organization - it's visibility is public
  project:project_1#viewer@organization:org_1#membership


  // We have another organization org_2, which has some users, some of which are also members of org_1
  organization:org_2#owner@user:user_0
  organization:org_2#member@user:user_1
  organization:org_2#member@user:user_10

  // org_2 has a project project_2
  project:project_2#org@organization:org_2
  // user_1 is viewer of project_2
  project:project_2#viewer@user:user_1


# assertions should assert that a particular permission holds, or not
assertions:
  assertTrue:
    - "organization:org_1#organization_read@user:user_0"
    # user 0 can edit project_0, because they are the Org Owner
    - "project:project_1#project_write@user:user_0"

  assertFalse:
    # user 10 cannot access project_1
    - "project:project_1#project_read@user:user_10"
    - "project:project_2#project_write@user:user_10"
    # organization member cannot write to an organization
    - "organization:org1#organization_write@user:user2"

    # non-member/owner cannot access organization
    - "organization:org1#organization_read@user:user3"
    - "organization:org1#organization_write@user:user3"
    - "organization:org1#organization_members_read@user:user3"
    - "organization:org1#organization_members_write@user:user3"

# validation should assert that a particular relation exists between an entity, and a subject
# validations are not used to assert that a permission exists
validation:
  organization:org_1#member:
    - "[user:user_1] is <organization:org_1#member>"
    - "[user:user_2] is <organization:org_1#member>"
  organization:org_1#membership:
    - "[user:user_0] is <organization:org_1#owner>"
    - "[user:user_1] is <organization:org_1#member>"
    - "[user:user_2] is <organization:org_1#member>"
  organization:org_1#owner:
    - "[user:user_0] is <organization:org_1#owner>"
  project:project_1#project_read:
    - "[organization:org_1#membership] is <project:project_1#viewer>"
    - "[user:user_0] is <organization:org_1#owner>"
    - "[user:user_1] is <organization:org_1#member>"
    - "[user:user_2] is <organization:org_1#member>"
  project:project_2#project_read:
    - "[user:user_1] is <project:project_2#viewer>"
  project:project_2#project_write:
    - "[user:user_0] is <organization:org_2#owner>"
