---
# networking.k8s.io/v1/NetworkPolicy blobserve
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
  name: blobserve
  namespace: default
spec:
  ingress:
    - {}
  podSelector:
    matchLabels:
      app: gitpod
      component: blobserve
  policyTypes:
    - Ingress

---
# networking.k8s.io/v1/NetworkPolicy ide-metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
  name: ide-metrics
  namespace: default
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              component: proxy
        - podSelector:
            matchLabels:
              component: ide-proxy
      ports:
        - port: 3000
          protocol: TCP
  podSelector:
    matchLabels:
      app: gitpod
      component: ide-metrics
  policyTypes:
    - Ingress

---
# networking.k8s.io/v1/NetworkPolicy ide-service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: ide-service
  namespace: default
spec:
  ingress:
    - ports:
        - port: 9001
          protocol: TCP
  podSelector:
    matchLabels:
      app: gitpod
      component: ide-service
  policyTypes:
    - Ingress

---
# networking.k8s.io/v1/NetworkPolicy openvsx-proxy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: openvsx-proxy
  namespace: default
spec:
  ingress:
    - ports:
        - port: 8080
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              chart: monitoring
          podSelector:
            matchLabels:
              component: server
      ports:
        - port: 8080
          protocol: TCP
  podSelector:
    matchLabels:
      app: gitpod
      component: openvsx-proxy
  policyTypes:
    - Ingress

---
# v1/ResourceQuota gitpod-resource-quota
apiVersion: v1
kind: ResourceQuota
metadata:
  creationTimestamp: null
  name: gitpod-resource-quota
  namespace: default
spec:
  hard:
    pods: 10k
  scopeSelector:
    matchExpressions:
    - operator: In
      scopeName: PriorityClass
      values:
      - system-node-critical
status: {}
---
# cert-manager.io/v1/Issuer ca-issuer
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: cluster
  name: ca-issuer
  namespace: default
spec:
  ca:
    secretName: ca-issuer-ca
status: {}
---
# cert-manager.io/v1/Issuer gitpod-selfsigned-issuer
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: cluster
  name: gitpod-selfsigned-issuer
  namespace: default
spec:
  selfSigned: {}
status: {}
---
# cert-manager.io/v1/Certificate builtin-registry-certs
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: docker-registry
  name: builtin-registry-certs
  namespace: default
spec:
  dnsNames:
  - registry.default.svc.cluster.local
  duration: 2160h0m0s
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: ca-issuer
  secretName: builtin-registry-certs
  secretTemplate:
    labels:
      app: gitpod
      component: docker-registry
status: {}
---
# cert-manager.io/v1/Certificate ca-issuer-ca
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: cluster
  name: ca-issuer-ca
  namespace: default
spec:
  commonName: ca-issuer-ca
  duration: 2160h0m0s
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: gitpod-selfsigned-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: ca-issuer-ca
  secretTemplate:
    labels:
      app: gitpod
      component: cluster
status: {}
---
# v1/ServiceAccount blobserve
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
  name: blobserve
  namespace: default
---
# v1/ServiceAccount docker-registry
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: docker-registry
  name: docker-registry
  namespace: default
---
# v1/ServiceAccount gitpod
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: gitpod
  name: gitpod
  namespace: default
---
# v1/ServiceAccount ide-metrics
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
  name: ide-metrics
  namespace: default
---
# v1/ServiceAccount ide-proxy
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-proxy
  name: ide-proxy
  namespace: default
---
# v1/ServiceAccount ide-service
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: ide-service
  namespace: default
---
# v1/ServiceAccount nobody
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: nobody
  name: nobody
  namespace: default
---
# v1/ServiceAccount openvsx-proxy
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: openvsx-proxy
  namespace: default
---
# v1/Secret builtin-registry-auth
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5naXRwb2QuZXhhbXBsZS5jb20iOnsiYXV0aCI6ImVIZDVRMGRsTlZVd1RrRnFObFZsYVhFM1RqQTZWbE5UYkcxaFMxZFFhaTVRVVhCdFZXWnNWR1E9In19fQ==
  password: VlNTbG1hS1dQai5QUXBtVWZsVGQ=
  user: eHd5Q0dlNVUwTkFqNlVlaXE3TjA=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: docker-registry
  name: builtin-registry-auth
  namespace: default
type: kubernetes.io/dockerconfigjson
---
# v1/Secret registry-secret
# Source: docker-registry/charts/docker-registry/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    heritage: Helm
    release: docker-registry
type: Opaque
data:
  haSharedSecret: "bVZZaFJrcXRhdGxyemthaQ=="
  proxyUsername: ""
  proxyPassword: ""
---
# v1/ConfigMap blobserve
apiVersion: v1
data:
  config.json: |-
    {
      "blobserve": {
        "port": 32224,
        "timeout": "5s",
        "repos": {
          "eu.gcr.io/gitpod-core-dev/build/ide/code": {
            "workdir": "/ide",
            "replacements": [
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "vscode-cdn.net",
                "replacement": "gitpod.example.com"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "open-vsx.org",
                "replacement": "open-vsx.gitpod.example.com"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.api.js",
                "search": "{{extensionsGalleryItemUrl}}",
                "replacement": "https://open-vsx.org/vscode/item"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "{{extensionsGalleryItemUrl}}",
                "replacement": "https://open-vsx.org/vscode/item"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.api.js",
                "search": "{{trustedDomain}}",
                "replacement": "https://open-vsx.org"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "{{trustedDomain}}",
                "replacement": "https://open-vsx.org"
              },
              {
                "path": "/ide/out/vs/workbench/workbench.web.main.js",
                "search": "ide.gitpod.io/code/markeplace.json",
                "replacement": "ide.gitpod.example.com/code/marketplace.json"
              }
            ],
            "inlineStatic": [
              {
                "search": "${window.location.origin}",
                "replacement": "."
              },
              {
                "search": "value.startsWith(window.location.origin)",
                "replacement": "value.startsWith(window.location.origin) || value.startsWith('${ide}')"
              },
              {
                "search": "./out",
                "replacement": "${ide}/out"
              },
              {
                "search": "./node_modules",
                "replacement": "${ide}/node_modules"
              },
              {
                "search": "/_supervisor/frontend",
                "replacement": "${supervisor}"
              }
            ]
          },
          "eu.gcr.io/gitpod-core-dev/build/supervisor": {
            "workdir": "/.supervisor/frontend"
          }
        },
        "allowAnyRepo": false,
        "blobSpace": {
          "location": "/mnt/cache/blobserve",
          "maxSizeBytes": 1073741824
        }
      },
      "dockerAuth": "/mnt/pull-secret/pull-secret.json",
      "pprofAddr": "127.0.0.1:6060",
      "prometheusAddr": "127.0.0.1:9500",
      "readinessProbeAddr": ":8086"
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
  name: blobserve
  namespace: default
---
# v1/ConfigMap gitpod
apiVersion: v1
data:
  config.yaml: |
    apiVersion: v1
    authProviders: []
    blockNewUsers:
      enabled: false
      passlist: []
    certificate:
      kind: secret
      name: https-certificates
    containerRegistry:
      inCluster: true
      privateBaseImageAllowList: []
    database:
      inCluster: true
    disableDefinitelyGp: true
    domain: gitpod.example.com
    kind: IDE
    metadata:
      region: local
      shortname: default
    objectStorage:
      inCluster: true
      resources:
        requests:
          memory: 2Gi
    observability:
      logLevel: info
    openVSX:
      url: https://open-vsx.org
    repository: eu.gcr.io/gitpod-core-dev/build
    workspace:
      maxLifetime: 36h0m0s
      prebuildPVC:
        size: 30Gi
        snapshotClass: ""
        storageClass: ""
      pvc:
        size: 30Gi
        snapshotClass: ""
        storageClass: ""
      resources:
        requests:
          cpu: "1"
          memory: 2Gi
      runtime:
        containerdRuntimeDir: /var/lib/containerd/io.containerd.runtime.v2.task/k8s.io
        containerdSocket: /run/containerd/containerd.sock
        fsShiftMethod: fuse
  versions.json: |-
    {
      "versions": {
        "version": "pd-ide-metrics.23",
        "components": {
          "agentSmith": {
            "version": "test"
          },
          "blobserve": {
            "version": "test"
          },
          "caUpdater": {
            "version": "test"
          },
          "contentService": {
            "version": "test"
          },
          "dashboard": {
            "version": "test"
          },
          "dbMigrations": {
            "version": "test"
          },
          "dbSync": {
            "version": "test"
          },
          "iam": {
            "version": "test"
          },
          "ideProxy": {
            "version": "test"
          },
          "ideMetrics": {
            "version": "test"
          },
          "ideService": {
            "version": "test"
          },
          "imageBuilder": {
            "version": ""
          },
          "imageBuilderMk3": {
            "version": "test",
            "builderImage": {
              "version": "test"
            }
          },
          "installationTelemetry": {
            "version": "test"
          },
          "integrationTests": {
            "version": ""
          },
          "openVSXProxy": {
            "version": "test"
          },
          "paymentEndpoint": {
            "version": "test"
          },
          "proxy": {
            "version": "test"
          },
          "public-api-server": {
            "version": "test"
          },
          "refreshCredential": {
            "version": "test"
          },
          "registryFacade": {
            "version": "test"
          },
          "server": {
            "version": "test"
          },
          "serviceWaiter": {
            "version": "test"
          },
          "toxic-config": {
            "version": "test"
          },
          "usage": {
            "version": "test"
          },
          "workspace": {
            "codeImage": {
              "version": "test"
            },
            "dockerUp": {
              "version": "test"
            },
            "supervisor": {
              "version": "test"
            },
            "workspacekit": {
              "version": "test"
            },
            "desktopIdeImages": {
              "codeDesktop": {
                "version": "test"
              },
              "codeDesktopInsiders": {
                "version": "test"
              },
              "intellij": {
                "version": "test"
              },
              "intellijLatest": {
                "version": "test"
              },
              "goland": {
                "version": "test"
              },
              "golandLatest": {
                "version": "test"
              },
              "pycharm": {
                "version": "test"
              },
              "pycharmLatest": {
                "version": "test"
              },
              "phpstorm": {
                "version": "test"
              },
              "phpstormLatest": {
                "version": "test"
              },
              "rubymine": {
                "version": "test"
              },
              "rubymineLatest": {
                "version": "test"
              },
              "webstorm": {
                "version": "test"
              },
              "webstormLatest": {
                "version": "test"
              },
              "rider": {
                "version": "test"
              },
              "riderLatest": {
                "version": "test"
              },
              "clion": {
                "version": "test"
              },
              "clionLatest": {
                "version": "test"
              },
              "jbBackendPlugin": {
                "version": "test"
              },
              "jbBackendPluginLatest": {
                "version": "test"
              },
              "jbLauncher": {
                "version": "test"
              }
            }
          },
          "wsDaemon": {
            "version": "test",
            "userNamespaces": {
              "seccompProfileInstaller": {
                "version": "test"
              },
              "shiftfsModuleLoader": {
                "version": "test"
              }
            }
          },
          "wsManager": {
            "version": "test"
          },
          "wsManagerBridge": {
            "version": "test"
          },
          "wsProxy": {
            "version": "test"
          }
        }
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: gitpod
  name: gitpod
  namespace: default
---
# v1/ConfigMap gitpod-app
apiVersion: v1
data:
  app.yaml: |
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: builtin-registry-certs
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: docker-registry
      namespace: default
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: builtin-registry-auth
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: docker-registry
      name: docker-registry
      namespace: default
    ---
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: cluster
      name: gitpod-selfsigned-issuer
      namespace: default
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: cluster
      name: ca-issuer-ca
      namespace: default
    ---
    apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: cluster
      name: ca-issuer
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      creationTimestamp: null
      name: default-kube-rbac-proxy
    ---
    apiVersion: v1
    kind: ResourceQuota
    metadata:
      creationTimestamp: null
      name: gitpod-resource-quota
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      name: default-ns-nobody
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: nobody
      name: nobody
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod
      namespace: default
    ---
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod-telemetry
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: default
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: default
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: default-blobserve-kube-rbac-proxy
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
        kind: service
      name: blobserve
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: ide-metrics
      namespace: default
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: ide-metrics
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: default-ide-metrics-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: ide-metrics
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: ide-metrics
      namespace: default
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
        kind: service
      name: ide-metrics
      namespace: default
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: ide-metrics
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: ide-metrics
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-service
      namespace: default
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-service
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: default-ide-service-kube-rbac-proxy
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-service
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-service
      namespace: default
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
        kind: service
      name: ide-service
      namespace: default
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-service
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-config
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server-ide-config
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-service
      namespace: default
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
      name: ide-proxy
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
      name: ide-proxy
      namespace: default
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
        kind: service
      name: ide-proxy
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
      name: ide-proxy
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy-config
      namespace: default
    ---
    apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: default
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: default-openvsx-proxy-kube-rbac-proxy
    ---
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: default
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
        kind: service
      name: openvsx-proxy
      namespace: default
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: default
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-2.2.2
        heritage: Helm
        release: docker-registry
      name: registry-secret
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-2.2.2
        heritage: Helm
        release: docker-registry
      name: registry-config
      namespace: default
    ---
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        app: registry
        chart: docker-registry-2.2.2
        heritage: Helm
        release: docker-registry
      name: registry
      namespace: default
    ---
    apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-2.2.2
        heritage: Helm
        release: docker-registry
      name: registry
      namespace: default
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        app: docker-registry
        chart: docker-registry-2.2.2
        heritage: Helm
        release: docker-registry
      name: registry
      namespace: default
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod-app
      name: gitpod-app
      namespace: default
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: gitpod-app
  name: gitpod-app
  namespace: default

---
# v1/ConfigMap ide-config
apiVersion: v1
data:
  config.json: |-
    {
      "gpRunImage": "registry.hub.docker.com/gitpod/gp-run:latest",
      "supervisorImage": "eu.gcr.io/gitpod-core-dev/build/supervisor:test",
      "ideOptions": {
        "options": {
          "clion": {
            "orderKey": "11",
            "title": "CLion",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/clionLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/clion:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/clion:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "code": {
            "orderKey": "00",
            "title": "VS Code",
            "type": "browser",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/vscode.svg",
            "label": "Browser",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/code:commit-fdf6a08a681c53ddd97c7bae9acc7d49158a41a0",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/code:nightly"
          },
          "code-desktop": {
            "orderKey": "02",
            "title": "VS Code",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/vscode.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/code-desktop:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/code-desktop-insiders:test"
          },
          "goland": {
            "orderKey": "05",
            "title": "GoLand",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/golandLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/goland:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/goland:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "intellij": {
            "orderKey": "04",
            "title": "IntelliJ IDEA",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/intellijIdeaLogo.svg",
            "label": "Ultimate",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/intellij:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/intellij:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "phpstorm": {
            "orderKey": "07",
            "title": "PhpStorm",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/phpstormLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/phpstorm:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/phpstorm:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "pycharm": {
            "orderKey": "06",
            "title": "PyCharm",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/pycharmLogo.svg",
            "label": "Professional",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/pycharm:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/pycharm:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "rider": {
            "orderKey": "10",
            "title": "Rider",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/riderLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/rider:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/rider:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "rubymine": {
            "orderKey": "08",
            "title": "RubyMine",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/rubymineLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/rubymine:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/rubymine:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "webstorm": {
            "orderKey": "09",
            "title": "WebStorm",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/webstormLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/webstorm:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/webstorm:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          }
        },
        "defaultIde": "code",
        "defaultDesktopIde": "code-desktop",
        "clients": {
          "jetbrains-gateway": {
            "defaultDesktopIDE": "intellij",
            "desktopIDEs": [
              "intellij",
              "goland",
              "pycharm",
              "phpstorm",
              "rubymine",
              "webstorm",
              "rider",
              "clion"
            ],
            "installationSteps": [
              "If you don't see an open dialog in your browser, make sure you have the \u003ca target='_blank' class='gp-link' href='https://www.gitpod.io/docs/ides-and-editors/jetbrains-gateway#getting-started-jetbrains-gateway'\u003eJetBrains Gateway with Gitpod Plugin\u003c/a\u003e installed on your machine, and then click \u003cb\u003e${OPEN_LINK_LABEL}\u003c/b\u003e below."
            ]
          },
          "vscode": {
            "defaultDesktopIDE": "code-desktop",
            "desktopIDEs": [
              "code-desktop"
            ],
            "installationSteps": [
              "If you don't see an open dialog in your browser, make sure you have \u003ca target='_blank' class='gp-link' href='https://code.visualstudio.com/download'\u003eVS Code\u003c/a\u003e installed on your machine, and then click \u003cb\u003e${OPEN_LINK_LABEL}\u003c/b\u003e below."
            ]
          },
          "vscode-insiders": {
            "defaultDesktopIDE": "code-desktop",
            "desktopIDEs": [
              "code-desktop"
            ],
            "installationSteps": [
              "If you don't see an open dialog in your browser, make sure you have \u003ca target='_blank' class='gp-link' href='https://code.visualstudio.com/insiders'\u003eVS Code Insiders\u003c/a\u003e installed on your machine, and then click \u003cb\u003e${OPEN_LINK_LABEL}\u003c/b\u003e below."
            ]
          }
        }
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: ide-config
  namespace: default
---
# v1/ConfigMap ide-metrics
apiVersion: v1
data:
  config.json: |-
    {
      "server": {
        "port": 3000,
        "ratelimits": null,
        "counterMetrics": [
          {
            "name": "grpc_server_handled_total",
            "help": "Total number of RPCs completed on the server, regardless of success or failure.",
            "labels": [
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_code",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "grpc_server_msg_received_total",
            "help": "Total number of RPC stream messages received on the server.",
            "labels": [
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "grpc_server_msg_sent_total",
            "help": "Total number of gRPC stream messages sent by the server.",
            "labels": [
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "grpc_server_started_total",
            "help": "Total number of RPCs started on the server",
            "labels": [
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "gitpod_supervisor_frontend_error_total",
            "help": "Total count of supervisor frontend client errors",
            "labels": [
              {
                "name": "resource",
                "allowValues": [
                  "vscode-web-workbench",
                  "unknown"
                ],
                "defaultValue": "unknown"
              },
              {
                "name": "error",
                "allowValues": [
                  "LoadError",
                  "Unknown"
                ],
                "defaultValue": "Unknown"
              }
            ]
          },
          {
            "name": "gitpod_vscode_web_load_total",
            "help": "Total count of attempts to load VS Code Web workbench",
            "labels": [
              {
                "name": "status",
                "allowValues": [
                  "loading",
                  "failed"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "gitpod_supervisor_frontend_client_total",
            "help": "Total count of supervisor frontend client",
            "labels": null
          },
          {
            "name": "gitpod_vscode_extension_gallery_operation_total",
            "help": "Total count of extension operations",
            "labels": [
              {
                "name": "operation",
                "allowValues": [
                  "install",
                  "update",
                  "uninstall",
                  "unknown"
                ],
                "defaultValue": "unknown"
              },
              {
                "name": "status",
                "allowValues": [
                  "success",
                  "failure",
                  "unknown"
                ],
                "defaultValue": "unknown"
              },
              {
                "name": "galleryHost",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "gitpod_vscode_extension_gallery_query_total",
            "help": "Total count of extension gallery queries",
            "labels": [
              {
                "name": "status",
                "allowValues": [
                  "success",
                  "failure",
                  "unknown"
                ],
                "defaultValue": "unknown"
              },
              {
                "name": "statusCode",
                "allowValues": [
                  "100",
                  "101",
                  "102",
                  "103",
                  "104",
                  "105",
                  "106",
                  "107",
                  "108",
                  "109",
                  "110",
                  "111",
                  "112",
                  "113",
                  "114",
                  "115",
                  "116",
                  "117",
                  "118",
                  "119",
                  "120",
                  "121",
                  "122",
                  "123",
                  "124",
                  "125",
                  "126",
                  "127",
                  "128",
                  "129",
                  "130",
                  "131",
                  "132",
                  "133",
                  "134",
                  "135",
                  "136",
                  "137",
                  "138",
                  "139",
                  "140",
                  "141",
                  "142",
                  "143",
                  "144",
                  "145",
                  "146",
                  "147",
                  "148",
                  "149",
                  "150",
                  "151",
                  "152",
                  "153",
                  "154",
                  "155",
                  "156",
                  "157",
                  "158",
                  "159",
                  "160",
                  "161",
                  "162",
                  "163",
                  "164",
                  "165",
                  "166",
                  "167",
                  "168",
                  "169",
                  "170",
                  "171",
                  "172",
                  "173",
                  "174",
                  "175",
                  "176",
                  "177",
                  "178",
                  "179",
                  "180",
                  "181",
                  "182",
                  "183",
                  "184",
                  "185",
                  "186",
                  "187",
                  "188",
                  "189",
                  "190",
                  "191",
                  "192",
                  "193",
                  "194",
                  "195",
                  "196",
                  "197",
                  "198",
                  "199",
                  "200",
                  "201",
                  "202",
                  "203",
                  "204",
                  "205",
                  "206",
                  "207",
                  "208",
                  "209",
                  "210",
                  "211",
                  "212",
                  "213",
                  "214",
                  "215",
                  "216",
                  "217",
                  "218",
                  "219",
                  "220",
                  "221",
                  "222",
                  "223",
                  "224",
                  "225",
                  "226",
                  "227",
                  "228",
                  "229",
                  "230",
                  "231",
                  "232",
                  "233",
                  "234",
                  "235",
                  "236",
                  "237",
                  "238",
                  "239",
                  "240",
                  "241",
                  "242",
                  "243",
                  "244",
                  "245",
                  "246",
                  "247",
                  "248",
                  "249",
                  "250",
                  "251",
                  "252",
                  "253",
                  "254",
                  "255",
                  "256",
                  "257",
                  "258",
                  "259",
                  "260",
                  "261",
                  "262",
                  "263",
                  "264",
                  "265",
                  "266",
                  "267",
                  "268",
                  "269",
                  "270",
                  "271",
                  "272",
                  "273",
                  "274",
                  "275",
                  "276",
                  "277",
                  "278",
                  "279",
                  "280",
                  "281",
                  "282",
                  "283",
                  "284",
                  "285",
                  "286",
                  "287",
                  "288",
                  "289",
                  "290",
                  "291",
                  "292",
                  "293",
                  "294",
                  "295",
                  "296",
                  "297",
                  "298",
                  "299",
                  "300",
                  "301",
                  "302",
                  "303",
                  "304",
                  "305",
                  "306",
                  "307",
                  "308",
                  "309",
                  "310",
                  "311",
                  "312",
                  "313",
                  "314",
                  "315",
                  "316",
                  "317",
                  "318",
                  "319",
                  "320",
                  "321",
                  "322",
                  "323",
                  "324",
                  "325",
                  "326",
                  "327",
                  "328",
                  "329",
                  "330",
                  "331",
                  "332",
                  "333",
                  "334",
                  "335",
                  "336",
                  "337",
                  "338",
                  "339",
                  "340",
                  "341",
                  "342",
                  "343",
                  "344",
                  "345",
                  "346",
                  "347",
                  "348",
                  "349",
                  "350",
                  "351",
                  "352",
                  "353",
                  "354",
                  "355",
                  "356",
                  "357",
                  "358",
                  "359",
                  "360",
                  "361",
                  "362",
                  "363",
                  "364",
                  "365",
                  "366",
                  "367",
                  "368",
                  "369",
                  "370",
                  "371",
                  "372",
                  "373",
                  "374",
                  "375",
                  "376",
                  "377",
                  "378",
                  "379",
                  "380",
                  "381",
                  "382",
                  "383",
                  "384",
                  "385",
                  "386",
                  "387",
                  "388",
                  "389",
                  "390",
                  "391",
                  "392",
                  "393",
                  "394",
                  "395",
                  "396",
                  "397",
                  "398",
                  "399",
                  "400",
                  "401",
                  "402",
                  "403",
                  "404",
                  "405",
                  "406",
                  "407",
                  "408",
                  "409",
                  "410",
                  "411",
                  "412",
                  "413",
                  "414",
                  "415",
                  "416",
                  "417",
                  "418",
                  "419",
                  "420",
                  "421",
                  "422",
                  "423",
                  "424",
                  "425",
                  "426",
                  "427",
                  "428",
                  "429",
                  "430",
                  "431",
                  "432",
                  "433",
                  "434",
                  "435",
                  "436",
                  "437",
                  "438",
                  "439",
                  "440",
                  "441",
                  "442",
                  "443",
                  "444",
                  "445",
                  "446",
                  "447",
                  "448",
                  "449",
                  "450",
                  "451",
                  "452",
                  "453",
                  "454",
                  "455",
                  "456",
                  "457",
                  "458",
                  "459",
                  "460",
                  "461",
                  "462",
                  "463",
                  "464",
                  "465",
                  "466",
                  "467",
                  "468",
                  "469",
                  "470",
                  "471",
                  "472",
                  "473",
                  "474",
                  "475",
                  "476",
                  "477",
                  "478",
                  "479",
                  "480",
                  "481",
                  "482",
                  "483",
                  "484",
                  "485",
                  "486",
                  "487",
                  "488",
                  "489",
                  "490",
                  "491",
                  "492",
                  "493",
                  "494",
                  "495",
                  "496",
                  "497",
                  "498",
                  "499",
                  "500",
                  "501",
                  "502",
                  "503",
                  "504",
                  "505",
                  "506",
                  "507",
                  "508",
                  "509",
                  "510",
                  "511",
                  "512",
                  "513",
                  "514",
                  "515",
                  "516",
                  "517",
                  "518",
                  "519",
                  "520",
                  "521",
                  "522",
                  "523",
                  "524",
                  "525",
                  "526",
                  "527",
                  "528",
                  "529",
                  "530",
                  "531",
                  "532",
                  "533",
                  "534",
                  "535",
                  "536",
                  "537",
                  "538",
                  "539",
                  "540",
                  "541",
                  "542",
                  "543",
                  "544",
                  "545",
                  "546",
                  "547",
                  "548",
                  "549",
                  "550",
                  "551",
                  "552",
                  "553",
                  "554",
                  "555",
                  "556",
                  "557",
                  "558",
                  "559",
                  "560",
                  "561",
                  "562",
                  "563",
                  "564",
                  "565",
                  "566",
                  "567",
                  "568",
                  "569",
                  "570",
                  "571",
                  "572",
                  "573",
                  "574",
                  "575",
                  "576",
                  "577",
                  "578",
                  "579",
                  "580",
                  "581",
                  "582",
                  "583",
                  "584",
                  "585",
                  "586",
                  "587",
                  "588",
                  "589",
                  "590",
                  "591",
                  "592",
                  "593",
                  "594",
                  "595",
                  "596",
                  "597",
                  "598",
                  "599",
                  "unknown"
                ],
                "defaultValue": "unknown"
              },
              {
                "name": "errorCode",
                "allowValues": [
                  "canceled",
                  "timeout",
                  "failed",
                  "unknown"
                ],
                "defaultValue": "unknown"
              },
              {
                "name": "galleryHost",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "grpc_client_started_total",
            "help": "Total number of RPCs started on the client.",
            "labels": [
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          },
          {
            "name": "grpc_client_handled_total",
            "help": "Total number of RPCs completed by the client, regardless of success or failure.",
            "labels": [
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_code",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ]
          }
        ],
        "histogramMetrics": [
          {
            "name": "gitpod_vscode_extension_gallery_operation_duration_seconds",
            "help": "Duration of extension operations in seconds",
            "labels": [
              {
                "name": "operation",
                "allowValues": [
                  "install",
                  "update",
                  "uninstall",
                  "unknown"
                ],
                "defaultValue": "unknown"
              },
              {
                "name": "galleryHost",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ],
            "buckets": [
              0.1,
              0.5,
              1,
              5,
              10,
              15,
              30
            ]
          },
          {
            "name": "gitpod_vscode_extension_gallery_query_duration_seconds",
            "help": "Duration of extension gallery query in seconds",
            "labels": [
              {
                "name": "galleryHost",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ],
            "buckets": [
              0.1,
              0.5,
              1,
              5,
              10,
              15,
              30
            ]
          }
        ],
        "aggregatedHistogramMetrics": [
          {
            "name": "grpc_server_handling_seconds",
            "help": "Histogram of response latency (seconds) of gRPC that had been application-level handled by the server.",
            "labels": [
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ],
            "buckets": [
              0.005,
              0.025,
              0.05,
              0.1,
              0.5,
              1,
              2.5,
              5,
              30,
              60,
              120,
              240,
              600
            ]
          },
          {
            "name": "supervisor_ide_ready_duration_total",
            "help": "the IDE startup time",
            "labels": [
              {
                "name": "kind",
                "allowValues": [
                  "web",
                  "desktop"
                ],
                "defaultValue": ""
              }
            ],
            "buckets": [
              0.1,
              0.5,
              1,
              1.5,
              2,
              2.5,
              5,
              10
            ]
          },
          {
            "name": "supervisor_initializer_bytes_second",
            "help": "initializer speed in bytes per second",
            "labels": [
              {
                "name": "kind",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ],
            "buckets": [
              1048576,
              2097152,
              4194304,
              8388608,
              16777216,
              33554432,
              67108864,
              134217728,
              268435456,
              536870912,
              1073741824,
              2147483648
            ]
          },
          {
            "name": "grpc_client_handling_seconds",
            "help": "Histogram of response latency (seconds) of the gRPC until it is finished by the application.",
            "labels": [
              {
                "name": "grpc_type",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_service",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              },
              {
                "name": "grpc_method",
                "allowValues": [
                  "*"
                ],
                "defaultValue": ""
              }
            ],
            "buckets": [
              0.1,
              0.2,
              0.5,
              1,
              2,
              5,
              10
            ]
          }
        ],
        "errorReporting": {
          "allowComponents": [
            "supervisor-frontend",
            "vscode-workbench",
            "vscode-server",
            "vscode-web",
            "gitpod-cli"
          ]
        }
      },
      "debug": false,
      "pprof": {
        "addr": ""
      },
      "prometheus": {
        "addr": "127.0.0.1:9500"
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
  name: ide-metrics
  namespace: default
---
# v1/ConfigMap ide-service
apiVersion: v1
data:
  config.json: |-
    {
      "server": {
        "services": {
          "grpc": {
            "address": "0.0.0.0:9001"
          }
        }
      },
      "ideConfigPath": "/ide-config/config.json"
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: ide-service
  namespace: default
---
# v1/ConfigMap openvsx-proxy-config
apiVersion: v1
data:
  config.json: |-
    {
      "log_debug": false,
      "cache_duration_regular": "5m0s",
      "cache_duration_backup": "72h0m0s",
      "url_upstream": "https://open-vsx.org",
      "url_local": "https://open-vsx.gitpod.example.com",
      "max_idle_conns": 1000,
      "max_idle_conns_per_host": 1000,
      "redis_addr": "localhost:6379",
      "prometheusAddr": "127.0.0.1:9500",
      "allow_cache_domain": [
        "open-vsx.org"
      ]
    }
  redis.conf: "\nmaxmemory 100mb\nmaxmemory-policy allkeys-lfu\n\t"
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: openvsx-proxy-config
  namespace: default
---
# v1/ConfigMap registry-config
# Source: docker-registry/charts/docker-registry/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    heritage: Helm
    release: docker-registry
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    http:
      addr: :5000
      debug:
        addr: :5001
        prometheus:
          enabled: false
          path: /metrics
      headers:
        X-Content-Type-Options:
        - nosniff
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    version: 0.1
---
# v1/ConfigMap server-ide-config
apiVersion: v1
data:
  config.json: |-
    {
      "gpRunImage": "registry.hub.docker.com/gitpod/gp-run:latest",
      "supervisorImage": "eu.gcr.io/gitpod-core-dev/build/supervisor:test",
      "ideOptions": {
        "options": {
          "clion": {
            "orderKey": "11",
            "title": "CLion",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/clionLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/clion:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/clion:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "code": {
            "orderKey": "00",
            "title": "VS Code",
            "type": "browser",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/vscode.svg",
            "label": "Browser",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/code:commit-fdf6a08a681c53ddd97c7bae9acc7d49158a41a0",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/code:nightly"
          },
          "code-desktop": {
            "orderKey": "02",
            "title": "VS Code",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/vscode.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/code-desktop:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/code-desktop-insiders:test"
          },
          "goland": {
            "orderKey": "05",
            "title": "GoLand",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/golandLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/goland:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/goland:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "intellij": {
            "orderKey": "04",
            "title": "IntelliJ IDEA",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/intellijIdeaLogo.svg",
            "label": "Ultimate",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/intellij:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/intellij:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "phpstorm": {
            "orderKey": "07",
            "title": "PhpStorm",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/phpstormLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/phpstorm:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/phpstorm:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "pycharm": {
            "orderKey": "06",
            "title": "PyCharm",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/pycharmLogo.svg",
            "label": "Professional",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/pycharm:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/pycharm:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "rider": {
            "orderKey": "10",
            "title": "Rider",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/riderLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/rider:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/rider:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "rubymine": {
            "orderKey": "08",
            "title": "RubyMine",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/rubymineLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/rubymine:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/rubymine:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          },
          "webstorm": {
            "orderKey": "09",
            "title": "WebStorm",
            "type": "desktop",
            "logo": "https://ide.gitpod.example.com/image/ide-logo/webstormLogo.svg",
            "image": "eu.gcr.io/gitpod-core-dev/build/ide/webstorm:test",
            "latestImage": "eu.gcr.io/gitpod-core-dev/build/ide/webstorm:latest",
            "pluginImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
            "pluginLatestImage": "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
            "imageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:test",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ],
            "latestImageLayers": [
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-backend-plugin:latest",
              "eu.gcr.io/gitpod-core-dev/build/ide/jb-launcher:test"
            ]
          }
        },
        "defaultIde": "code",
        "defaultDesktopIde": "code-desktop",
        "clients": {
          "jetbrains-gateway": {
            "defaultDesktopIDE": "intellij",
            "desktopIDEs": [
              "intellij",
              "goland",
              "pycharm",
              "phpstorm",
              "rubymine",
              "webstorm",
              "rider",
              "clion"
            ],
            "installationSteps": [
              "If you don't see an open dialog in your browser, make sure you have the \u003ca target='_blank' class='gp-link' href='https://www.gitpod.io/docs/ides-and-editors/jetbrains-gateway#getting-started-jetbrains-gateway'\u003eJetBrains Gateway with Gitpod Plugin\u003c/a\u003e installed on your machine, and then click \u003cb\u003e${OPEN_LINK_LABEL}\u003c/b\u003e below."
            ]
          },
          "vscode": {
            "defaultDesktopIDE": "code-desktop",
            "desktopIDEs": [
              "code-desktop"
            ],
            "installationSteps": [
              "If you don't see an open dialog in your browser, make sure you have \u003ca target='_blank' class='gp-link' href='https://code.visualstudio.com/download'\u003eVS Code\u003c/a\u003e installed on your machine, and then click \u003cb\u003e${OPEN_LINK_LABEL}\u003c/b\u003e below."
            ]
          },
          "vscode-insiders": {
            "defaultDesktopIDE": "code-desktop",
            "desktopIDEs": [
              "code-desktop"
            ],
            "installationSteps": [
              "If you don't see an open dialog in your browser, make sure you have \u003ca target='_blank' class='gp-link' href='https://code.visualstudio.com/insiders'\u003eVS Code Insiders\u003c/a\u003e installed on your machine, and then click \u003cb\u003e${OPEN_LINK_LABEL}\u003c/b\u003e below."
            ]
          }
        }
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: server
  name: server-ide-config
  namespace: default
---
# v1/PersistentVolumeClaim registry
# Source: docker-registry/charts/docker-registry/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: registry
  namespace: default
  labels:
    app: registry
    chart: "docker-registry-2.2.2"
    release: "docker-registry"
    heritage: "Helm"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# rbac.authorization.k8s.io/v1/ClusterRole default-kube-rbac-proxy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: default-kube-rbac-proxy
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# rbac.authorization.k8s.io/v1/ClusterRoleBinding default-blobserve-kube-rbac-proxy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
  name: default-blobserve-kube-rbac-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-kube-rbac-proxy
subjects:
- kind: ServiceAccount
  name: blobserve
  namespace: default
---
# rbac.authorization.k8s.io/v1/ClusterRoleBinding default-ide-metrics-kube-rbac-proxy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
  name: default-ide-metrics-kube-rbac-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-kube-rbac-proxy
subjects:
- kind: ServiceAccount
  name: ide-metrics
  namespace: default
---
# rbac.authorization.k8s.io/v1/ClusterRoleBinding default-ide-service-kube-rbac-proxy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: default-ide-service-kube-rbac-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-kube-rbac-proxy
subjects:
- kind: ServiceAccount
  name: ide-service
  namespace: default
---
# rbac.authorization.k8s.io/v1/ClusterRoleBinding default-openvsx-proxy-kube-rbac-proxy
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: default-openvsx-proxy-kube-rbac-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-kube-rbac-proxy
subjects:
- kind: ServiceAccount
  name: openvsx-proxy
  namespace: default
---
# rbac.authorization.k8s.io/v1/ClusterRoleBinding ide-metrics
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
  name: ide-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ide-metrics
subjects:
- kind: ServiceAccount
  name: ide-metrics
  namespace: default
---
# rbac.authorization.k8s.io/v1/ClusterRoleBinding ide-service
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: ide-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ide-service
subjects:
- kind: ServiceAccount
  name: ide-service
  namespace: default
---
# rbac.authorization.k8s.io/v1/RoleBinding blobserve
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
  name: blobserve
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:restricted-root-user
subjects:
- kind: ServiceAccount
  name: blobserve
---
# rbac.authorization.k8s.io/v1/RoleBinding default-ns-nobody
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: default-ns-nobody
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:unprivileged
subjects:
- kind: ServiceAccount
  name: nobody
  namespace: default
---
# rbac.authorization.k8s.io/v1/RoleBinding docker-registry
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: docker-registry
  name: docker-registry
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:restricted-root-user
subjects:
- kind: ServiceAccount
  name: docker-registry
---
# rbac.authorization.k8s.io/v1/RoleBinding gitpod
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: gitpod
  name: gitpod
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:restricted-root-user
subjects:
- kind: ServiceAccount
  name: gitpod
---
# rbac.authorization.k8s.io/v1/RoleBinding ide-metrics
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
  name: ide-metrics
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:restricted-root-user
subjects:
- kind: ServiceAccount
  name: ide-metrics
---
# rbac.authorization.k8s.io/v1/RoleBinding ide-proxy
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-proxy
  name: ide-proxy
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:restricted-root-user
subjects:
- kind: ServiceAccount
  name: ide-proxy
---
# rbac.authorization.k8s.io/v1/RoleBinding ide-service
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: ide-service
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:restricted-root-user
subjects:
- kind: ServiceAccount
  name: ide-service
---
# rbac.authorization.k8s.io/v1/RoleBinding openvsx-proxy
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: openvsx-proxy
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: default-ns-psp:restricted-root-user
subjects:
- kind: ServiceAccount
  name: openvsx-proxy
---
# v1/Service blobserve
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
    kind: service
  name: blobserve
  namespace: default
spec:
  ports:
  - name: service
    port: 4000
    protocol: TCP
    targetPort: 32224
  selector:
    app: gitpod
    component: blobserve
  type: ClusterIP
status:
  loadBalancer: {}
---
# v1/Service ide-metrics
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
    kind: service
  name: ide-metrics
  namespace: default
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: gitpod
    component: ide-metrics
  type: ClusterIP
status:
  loadBalancer: {}
---
# v1/Service ide-proxy
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-proxy
    kind: service
  name: ide-proxy
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: gitpod
    component: ide-proxy
  type: ClusterIP
status:
  loadBalancer: {}
---
# v1/Service ide-service
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
    kind: service
  name: ide-service
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: gitpod
    component: ide-service
  type: ClusterIP
status:
  loadBalancer: {}
---
# v1/Service openvsx-proxy
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
    kind: service
  name: openvsx-proxy
  namespace: default
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  - name: metrics
    port: 9500
    protocol: TCP
    targetPort: 9500
  selector:
    app: gitpod
    component: openvsx-proxy
  type: ClusterIP
status:
  loadBalancer: {}
---
# v1/Service registry
# Source: docker-registry/charts/docker-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    release: docker-registry
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      protocol: TCP
      name: https-443
      targetPort: 5000
  selector:
    app: docker-registry
    release: docker-registry
---
# apps/v1/StatefulSet openvsx-proxy
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: openvsx-proxy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: openvsx-proxy
  serviceName: openvsx-proxy
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: abc77df6fd99cdbb10a25a4e54f17ad9407f29b9bf966edab17a15024359c560
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: gitpod.io/workload_ide
                    operator: Exists
      containers:
        - args:
            - /config/config.json
          env:
            - name: GITPOD_DOMAIN
              value: gitpod.example.com
            - name: GITPOD_INSTALLATION_SHORTNAME
              value: default
            - name: GITPOD_REGION
              value: local
            - name: HOST_URL
              value: https://gitpod.example.com
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBE_DOMAIN
              value: svc.cluster.local
            - name: LOG_LEVEL
              value: info
          image: eu.gcr.io/gitpod-core-dev/build/openvsx-proxy:test
          imagePullPolicy: IfNotPresent
          name: openvsx-proxy
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9500
              name: metrics
          readinessProbe:
            httpGet:
              path: /openvsx-proxy-status
              port: 8080
          resources:
            requests:
              cpu: 1m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /config
              name: config
        - command:
            - redis-server
            - /config/redis.conf
          env:
            - name: MASTER
              value: "true"
          image: docker.io/library/redis:6.2
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
          resources:
            requests:
              cpu: 1m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data
              name: redis-data
        - args:
            - --logtostderr
            - --insecure-listen-address=[$(IP)]:9500
            - --upstream=http://127.0.0.1:9500/
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: quay.io/brancz/kube-rbac-proxy:v0.12.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 9500
              name: metrics
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      serviceAccountName: openvsx-proxy
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: openvsx-proxy-config
          name: config
  updateStrategy: {}
  volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        labels:
          app: gitpod
          component: openvsx-proxy
        name: redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
      status: {}

---
# apps/v1/Deployment blobserve
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: blobserve
  name: blobserve
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: blobserve
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: 0d9d1c68723466a253996f0a96bf0682ce57b89ebcb4ae1e4a643dd788ef1cab
      creationTimestamp: null
      labels:
        app: gitpod
        component: blobserve
      name: blobserve
      namespace: default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_ide
                operator: Exists
      containers:
      - args:
        - run
        - /mnt/config/config.json
        env:
        - name: GITPOD_DOMAIN
          value: gitpod.example.com
        - name: GITPOD_INSTALLATION_SHORTNAME
          value: default
        - name: GITPOD_REGION
          value: local
        - name: HOST_URL
          value: https://gitpod.example.com
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBE_DOMAIN
          value: svc.cluster.local
        - name: LOG_LEVEL
          value: info
        - name: JAEGER_DISABLED
          value: "true"
        image: eu.gcr.io/gitpod-core-dev/build/blobserve:test
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 8086
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        name: blobserve
        ports:
        - containerPort: 32224
          name: service
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8086
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          requests:
            cpu: 100m
            memory: 32Mi
        securityContext:
          privileged: false
          runAsUser: 1000
        volumeMounts:
        - mountPath: /mnt/config
          name: config
          readOnly: true
        - mountPath: /mnt/cache
          name: cache
        - mountPath: /mnt/pull-secret
          name: pull-secret
      - args:
        - --logtostderr
        - --insecure-listen-address=[$(IP)]:9500
        - --upstream=http://127.0.0.1:9500/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/brancz/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 9500
          name: metrics
        resources:
          requests:
            cpu: 1m
            memory: 30Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
      enableServiceLinks: false
      serviceAccountName: blobserve
      volumes:
      - emptyDir: {}
        name: cache
      - configMap:
          name: blobserve
        name: config
      - name: pull-secret
        secret:
          items:
          - key: .dockerconfigjson
            path: pull-secret.json
          secretName: builtin-registry-auth
status: {}
---
# apps/v1/Deployment ide-metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-metrics
  name: ide-metrics
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: ide-metrics
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: d42da55c46ab5e8278c46a30a13e4f2c614ad4f340863a57c91fc6183a1068fc
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-metrics
      name: ide-metrics
      namespace: default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_meta
                operator: Exists
      containers:
      - args:
        - run
        - --config
        - /config/config.json
        env:
        - name: GITPOD_DOMAIN
          value: gitpod.example.com
        - name: GITPOD_INSTALLATION_SHORTNAME
          value: default
        - name: GITPOD_REGION
          value: local
        - name: HOST_URL
          value: https://gitpod.example.com
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBE_DOMAIN
          value: svc.cluster.local
        - name: LOG_LEVEL
          value: info
        image: eu.gcr.io/gitpod-core-dev/build/ide-metrics:test
        imagePullPolicy: IfNotPresent
        name: ide-metrics
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 3
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
      - args:
        - --logtostderr
        - --insecure-listen-address=[$(IP)]:9500
        - --upstream=http://127.0.0.1:9500/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/brancz/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 9500
          name: metrics
        resources:
          requests:
            cpu: 1m
            memory: 30Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      serviceAccountName: ide-metrics
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: ide-metrics
        name: config
status: {}
---
# apps/v1/Deployment ide-proxy
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-proxy
  name: ide-proxy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: ide-proxy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-proxy
      name: ide-proxy
      namespace: default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_meta
                operator: Exists
      containers:
      - env:
        - name: GITPOD_DOMAIN
          value: gitpod.example.com
        - name: GITPOD_INSTALLATION_SHORTNAME
          value: default
        - name: GITPOD_REGION
          value: local
        - name: HOST_URL
          value: https://gitpod.example.com
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBE_DOMAIN
          value: svc.cluster.local
        - name: LOG_LEVEL
          value: info
        image: eu.gcr.io/gitpod-core-dev/build/ide-proxy:test
        imagePullPolicy: IfNotPresent
        name: ide-proxy
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 32Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      serviceAccountName: ide-proxy
      terminationGracePeriodSeconds: 30
status: {}
---
# apps/v1/Deployment ide-service
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ide-service
  name: ide-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: ide-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: 96f0e9e2b0ef57685361631147d448545bddf8e1230493ac99530513b2fe7783
      creationTimestamp: null
      labels:
        app: gitpod
        component: ide-service
      name: ide-service
      namespace: default
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: gitpod.io/workload_meta
                operator: Exists
      containers:
      - args:
        - run
        - --config
        - /config/config.json
        env:
        - name: GITPOD_DOMAIN
          value: gitpod.example.com
        - name: GITPOD_INSTALLATION_SHORTNAME
          value: default
        - name: GITPOD_REGION
          value: local
        - name: HOST_URL
          value: https://gitpod.example.com
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBE_DOMAIN
          value: svc.cluster.local
        - name: LOG_LEVEL
          value: info
        image: eu.gcr.io/gitpod-core-dev/build/ide-service:test
        imagePullPolicy: IfNotPresent
        name: ide-service
        ports:
        - containerPort: 9001
          name: grpc
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 9501
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
        - mountPath: /ide-config
          name: ide-config
          readOnly: true
      - args:
        - --logtostderr
        - --insecure-listen-address=[$(IP)]:9500
        - --upstream=http://127.0.0.1:9500/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/brancz/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 9500
          name: metrics
        resources:
          requests:
            cpu: 1m
            memory: 30Mi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      serviceAccountName: ide-service
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: ide-service
        name: config
      - configMap:
          name: ide-config
        name: ide-config
status: {}
---
# apps/v1/Deployment registry
# Source: docker-registry/charts/docker-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: default
  labels:
    app: docker-registry
    chart: docker-registry-2.2.2
    release: docker-registry
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: docker-registry
      release: docker-registry
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: docker-registry
        release: docker-registry
      annotations:
        checksum/config: 699dd382179068f3354c330fcce38625e2861d97b962074b4f57005d40497b00
        checksum/secret: 6fe5d819b2ea20bf72ad31384d4886d6f64dd1f0d237703ac3aff11c1e0737fd
        
        gitpod.io/checksum_config: 1c66f4ccdb7f6331da2edaecefcb40f6c1b6315c9277eb0418fef3cc584a28bd
    spec:
      serviceAccountName: docker-registry
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: docker-registry
          image: "docker.io/library/registry:2.8.1"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/registry
          - serve
          - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 5000
          resources: 
            {}
          env: 
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: registry-secret
                  key: haSharedSecret
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: /etc/ssl/docker/tls.crt
            - name: REGISTRY_HTTP_TLS_KEY
              value: /etc/ssl/docker/tls.key
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          volumeMounts: 
            - name: "registry-config"
              mountPath: "/etc/docker/registry"
            - name: data
              mountPath: /var/lib/registry/
            - mountPath: /etc/ssl/docker
              name: tls-cert
              readOnly: true
      volumes: 
        - name: registry-config
          configMap:
            name: registry-config
        - name: data
          persistentVolumeClaim:
            claimName: registry
        - name: tls-cert
          secret:
            secretName: builtin-registry-certs
---
# batch/v1/CronJob gitpod-telemetry
apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: gitpod
  name: gitpod-telemetry
  namespace: default
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
      labels:
        app: gitpod
        component: gitpod
      name: gitpod-telemetry
      namespace: default
    spec:
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: gitpod
            component: gitpod
          name: gitpod-telemetry
          namespace: default
        spec:
          containers:
          - args:
            - send
            env:
            - name: GITPOD_INSTALLATION_VERSION
              value: pd-ide-metrics.23
            - name: GITPOD_INSTALLATION_PLATFORM
              value: unknown
            - name: SERVER_URL
              value: http://server.default.svc.cluster.local:9000
            image: eu.gcr.io/gitpod-core-dev/build/installation-telemetry:test
            imagePullPolicy: IfNotPresent
            name: gitpod-telemetry
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
          enableServiceLinks: false
          initContainers:
          - args:
            - -v
            - database
            env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: mysql
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: mysql
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql
            - name: DB_ENCRYPTION_KEYS
              valueFrom:
                secretKeyRef:
                  key: encryptionKeys
                  name: mysql
            image: eu.gcr.io/gitpod-core-dev/build/service-waiter:test
            name: database-waiter
            resources: {}
            securityContext:
              allowPrivilegeEscalation: false
              privileged: false
              runAsUser: 31001
          restartPolicy: OnFailure
          serviceAccountName: gitpod
  schedule: '@daily'
  successfulJobsHistoryLimit: 3
status: {}
