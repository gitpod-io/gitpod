# Copyright (c) 2022 Gitpod GmbH. All rights reserved.
# Licensed under the MIT License. See License-MIT.txt in the project root for license information.

apiVersion: troubleshoot.sh/v1beta2
kind: Preflight
metadata:
  name: gitpod
spec:
  collectors:
    - run:
        collectorName: database
        image: eu.gcr.io/gitpod-core-dev/build/kots-config-check/database:sje-kots-config-check.9
        name: database
        args:
          - '{{repl ConfigOption "db_incluster" }}' # DB_IN_CLUSTER_ENABLED
          - '{{repl ConfigOption "db_cloudsql_enabled" }}' # DB_CLOUDSQL_ENABLED
          - '{{repl ConfigOption "db_username" }}' # DB_USERNAME
          - '{{repl ConfigOption "db_password" }}' # DB_PASSWORD
          - '{{repl ConfigOption "db_host" }}' # DB_HOST
          - '{{repl ConfigOption "db_port" }}' # DB_PORT
          - '{{repl ConfigOption "db_cloudsql_instance" }}' # CloudSQL instances
          - '{{repl ConfigOption "db_gcp_credentials" }}' # CloudSQL credentials file
    - run:
        collectorName: "kernel"
        image: alpine/semver
        name: kernel
        command:
          - /bin/sh
          - -c
        args:
          - semver --coerce --range '>=5.4.0' $(uname -r) || echo invalid
  analyzers:
    - clusterVersion:
        outcomes:
          - fail:
              when: "< 1.20.0"
              message: The application requires Kubernetes 1.20.0 or later, and recommends 1.21.0.
              uri: https://www.kubernetes.io
          - warn:
              when: "< 1.21.0"
              message: Your cluster meets the minimum version of Kubernetes, but we recommend you update to 1.21.0 or later.
              uri: https://kubernetes.io
          - pass:
              message: Your cluster meets the recommended and required versions of Kubernetes.
    - textAnalyze:
        checkName: Kernel version is 5.4.0 or above
        fileName: kernel/kernel.log
        regex: invalid
        outcomes:
          - pass:
              when: "false"
              message: Kernel version valid
          - fail:
              when: "true"
              message: Kernel must be 5.4.0 or above
    - containerRuntime:
        outcomes:
          - pass:
              when: "== containerd"
              message: containerd runtime was found.
          - fail:
              message: Did not find containerd runtime.
    - distribution:
        outcomes:
          - fail:
              when: == openshift
              message: OpenShift is not supported
          - pass:
              message: The cluster is using a support distribution
    - nodeResources:
        checkName: At least one node must "gitpod.io/workload_meta" label
        filters:
          selector:
            matchLabel:
              gitpod.io/workload_meta: "true"
        outcomes:
          - fail:
              when: "count() < 1"
              message: There must be at least one node with the label "gitpod.io/workload_meta" and value "true"
          - pass:
              message: Node with label exists
    - nodeResources:
        checkName: At least one node must have "gitpod.io/workload_ide" label
        filters:
          selector:
            matchLabel:
              gitpod.io/workload_ide: "true"
        outcomes:
          - fail:
              when: "count() < 1"
              message: There must be at least one node with the label "gitpod.io/workload_ide" and value "true"
          - pass:
              message: Node with label exists
    - nodeResources:
        checkName: At least one node must have "gitpod.io/workload_workspace_services" label
        filters:
          selector:
            matchLabel:
              gitpod.io/workload_workspace_services: "true"
        outcomes:
          - fail:
              when: "count() < 1"
              message: There must be at least one node with the label "gitpod.io/workload_workspace_services" and value "true"
          - pass:
              message: Node with label exists
    - nodeResources:
        checkName: At least one node must have "gitpod.io/workload_workspace_regular" label
        filters:
          selector:
            matchLabel:
              gitpod.io/workload_workspace_regular: "true"
        outcomes:
          - fail:
              when: "count() < 1"
              message: There must be at least one node with the label "gitpod.io/workload_workspace_regular" and value "true"
          - pass:
              message: Node with label exists
    - nodeResources:
        checkName: At least one node must have "gitpod.io/workload_workspace_headless" label
        filters:
          selector:
            matchLabel:
              gitpod.io/workload_workspace_headless: "true"
        outcomes:
          - fail:
              when: "count() < 1"
              message: There must be at least one node with the label "gitpod.io/workload_workspace_headless" and value "true"
          - pass:
              message: Node with label exists
    - customResourceDefinition:
        checkName: Cert-manager is installed
        customResourceDefinitionName: certificates.cert-manager.io
        outcomes:
          - fail:
              message: Custom resource definition `certificates.cert-manager.io` was not found in the cluster. Please [install `cert-manager`](https://cert-manager.io/docs/installation/) to proceed.
          - pass:
              message: Cert-manager is installed and available.
    - nodeResources:
        checkName: CPU Cores per node
        outcomes:
          - fail:
              when: "min(cpuCapacity) < 2"
              message: The cluster must contain at least 2 cores
          - warn:
              when: "min(cpuCapacity) < 4"
              message: The cluster must contain at least 4 cores
          - pass:
              message: There are at least 4 cores in the cluster
    - nodeResources:
        checkName: Memory per node
        outcomes:
          - fail:
              when: "min(memoryCapacity) < 8G"
              message: The cluster must have least 8GB of memory
          - warn:
              when: "min(memoryCapacity) < 16G"
              message: The cluster must have least 16GB of memory
          - pass:
              message: There is at least 16GB of memory in the cluster
    - storageClass:
        checkName: Check for default storage class
        outcomes:
          - fail:
              message: No default storage class found
          - pass:
              message: Default storage class found
    - textAnalyze:
        checkName: Database connection is valid
        fileName: database/database.log
        regexGroups: 'connection: (?P<Connection>\w+)'
        outcomes:
          - pass:
              when: "Connection == ok"
              message: Database connection is valid
          - fail:
              message: Database connection is invalid. Please check your settings and that the database is accessible from your cluster
    - textAnalyze:
        checkName: Database version is valid
        fileName: database/database.log
        regexGroups: 'version: (?P<Version>\d(\.\d+)?)'
        outcomes:
          - pass:
              when: "Version == 5.7"
              message: Database version is valid
          - warn:
              message: Database version could not be verified. This should be MySQL 5.7
