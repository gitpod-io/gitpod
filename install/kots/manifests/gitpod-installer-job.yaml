# The installer job is where the magic happens. It generates
# the config and installs Gitpod
apiVersion: batch/v1
kind: Job
metadata:
  name: installer
  labels:
    app: gitpod
    component: gitpod-installer
spec:
  ttlSecondsAfterFinished: 60
  template:
    metadata:
      labels:
        app: gitpod
        component: gitpod-installer
    spec:
      serviceAccountName: installer
      restartPolicy: OnFailure
      initContainers:
        # Checks that the cert-manager installation is complete
        - name: cert-manager
          image: alpine/helm
          command:
            - /bin/sh
            - -c
          args:
            - |
              set -e
              echo "Gitpod: Install jq"
              apk add --no-cache jq
              echo "Gitpod: Perform the check"
              while [ "$(helm status -n {{repl Namespace }} cert-manager -o json | jq '.info.status == "deployed"')" = "false" ];
              do
                echo "Gitpod: Release not found - will retry in 10s"
                sleep 10
              done
              echo "Gitpod: Release found - goodbye"
      containers:
        - name: installer
          # This will normally be the release tag - using this tag as need the license evaluator
          image: 'eu.gcr.io/gitpod-core-dev/build/installer:main.2569'
          env:
            - name: CONFIG_FILE
              value: /tmp/gitpod-config.yaml
          command:
            - /bin/sh
            - -c
          args:
            - |
              set -e

              echo "Gitpod: Generate the base Installer config"
              /app/installer init > "${CONFIG_FILE}"

              echo "Gitpod: Inject the Replicated variables into the config"
              yq e -i '.domain = "{{repl ConfigOption "domain" }}"' "${CONFIG_FILE}"

              echo "Gitpod: Generate the Kubernetes objects and apply"
              /app/installer render -c "${CONFIG_FILE}" --namespace {{repl Namespace }} | kubectl apply -f -

              echo "Gitpod: Installer job finished - goodbye"
