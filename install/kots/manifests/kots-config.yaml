# Copyright (c) 2022 Gitpod GmbH. All rights reserved.
# Licensed under the GNU Affero General Public License (AGPL).
# See License.AGPL.txt in the project root for license information.

apiVersion: kots.io/v1beta1
kind: Config
metadata:
  name: gitpod
spec:
  groups:
    - name: general
      title: General settings
      description: General settings for your Gitpod instance
      items:
        - name: domain
          title: What is your domain name?
          help_text: This will be the URL that you use to access your Gitpod instance. This should be in the format "gitpod.domain.com".
          type: text
          required: true
        - name: openVsxUrl
          title: What is your Open VSX Registry URL?
          help_text: This will be the URL that you use to access [Open VSX](https://open-vsx.org). This should be a fully qualified domain name, including `https://`. Will default to `https://open-vsx.org` if not set.
          type: text

    - name: container_registry
      title: Container registry
      description: Gitpod [requires a container registry](https://www.gitpod.io/docs/self-hosted/latest/reference-architecture/single-cluster-ref-arch#oci-image-registry) to push and store workspace images. This can either be an in-cluster or external container registry.
      items:
        - name: reg_incluster
          title: Use in-cluster container registry
          type: bool
          default: "1"
          help_text: You may either use an in-cluster container registry or configure your own external container registry for better performance. This container registry must be accessible from your Kubernetes cluster.
          recommended: false

        - name: reg_incluster_storage
          title: In-cluster Storage provider
          type: select_one
          when: '{{repl (ConfigOptionEquals "reg_incluster" "1") }}'
          default: none
          help_text: You may configure your Docker registry to use an external storage backend. This setting is recommended for AWS users instead of using Elastic Container Registry.
          items:
            - name: none
              title: None
            - name: s3
              title: S3

        # S3 help_text
        - name: reg_incluster_storage_s3_region
          title: Storage region
          type: text
          required: true
          when: '{{repl and (ConfigOptionEquals "reg_incluster" "1") (ConfigOptionEquals "reg_incluster_storage" "s3") }}'
          help_text: ID of the region where your storage exists, such as `eu-west-2`.

        - name: reg_incluster_storage_s3_endpoint
          title: Endpoint
          type: text
          required: true
          value: s3.amazonaws.com
          when: '{{repl and (ConfigOptionEquals "reg_incluster" "1") (ConfigOptionEquals "reg_incluster_storage" "s3") }}'
          help_text: The endpoint used to connect to the S3 storage. If not using the `us-east-1` region, this should be `s3.<region>.amazonaws.com`.

        - name: reg_incluster_storage_s3_bucketname
          title: S3 bucket name
          type: text
          required: true
          when: '{{repl and (ConfigOptionEquals "reg_incluster" "1") (ConfigOptionEquals "reg_incluster_storage" "s3") }}'
          help_text: The name of the bucket to act as your S3 storage backend.

        - name: reg_incluster_storage_s3_accesskey
          title: S3 access key
          type: text
          required: true
          when: '{{repl and (ConfigOptionEquals "reg_incluster" "1") (ConfigOptionEquals "reg_incluster_storage" "s3") }}'
          help_text: The access key to use for authentication of your S3 storage backend.

        - name: reg_incluster_storage_s3_secretkey
          title: S3 secret key
          type: password
          when: '{{repl and (ConfigOptionEquals "reg_incluster" "1") (ConfigOptionEquals "reg_incluster_storage" "s3") }}'
          required: true
          help_text: The secret key to use for authentication of your S3 storage backend.

        - name: reg_url
          title: Container registry URL
          type: text
          when: '{{repl ConfigOptionEquals "reg_incluster" "0" }}'
          required: true
          help_text: The container registry URL. This will usually be the fully qualified domain of your registry.

        - name: reg_server
          title: Container registry server
          type: text
          when: '{{repl ConfigOptionEquals "reg_incluster" "0" }}'
          help_text: The container registry server. This is used when [generating your credentials](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line). Depending upon your provider, this may or may not be the same as the registry URL. If not specified, the URL will be used.

        - name: reg_username
          title: Container registry username
          type: text
          when: '{{repl ConfigOptionEquals "reg_incluster" "0" }}'
          required: true
          help_text: The username for your container registry.

        - name: reg_password
          title: Container registry password
          type: password
          when: '{{repl ConfigOptionEquals "reg_incluster" "0" }}'
          required: true
          help_text: The password for your container registry.

        - name: reg_docker_config_enable
          title: Configure additional registry credentials for pulling workspace images
          type: bool
          default: "0"
          help_text: This is useful when you have base workspace images in private registries other than the above configured ones.

        - name: reg_docker_config
          title: Registry credentials
          when: '{{repl ConfigOptionEquals "reg_docker_config_enable" "1" }}'
          type: file
          required: true
          help_text: "Docker [config JSON file](https://docs.docker.com/engine/reference/commandline/cli/#sample-configuration-file) with auth credentials used to access private registries, for workspace images. **NB.** All of the registries in the config will be automatically added to the [`privateBaseImageAllowList`](http://gitpod.io/docs/self-hosted/latest/advanced/private-registries)."

    - name: database
      title: Database
      description: Gitpod requires an instance of MySQL 5.7 for data storage. This can either be an in-cluster or external database.
      items:
        - name: db_incluster
          title: Use MySQL in-cluster
          type: bool
          default: "1"
          help_text: You may either use an in-cluster database or configure your own external database for better performance. This database must be accessible from your Kubernetes cluster.
          recommended: false

        - name: db_cloudsql_enabled
          title: Use Google Cloud SQL Proxy
          when: '{{repl (ConfigOptionEquals "db_incluster" "0") }}'
          type: bool
          default: "0"
          help_text: "Gitpod natively supports [Google Cloud SQL Proxy](https://cloud.google.com/sql/docs/mysql/sql-proxy) to secure the connection. If this is not used, you will need to ensure that the database route is secured. **NB.** this only works with GCP provided databases."

        - name: db_cloudsql_instance
          title: CloudSQL connection name
          type: text
          when: '{{repl and (ConfigOptionEquals "db_incluster" "0") (ConfigOptionEquals "db_cloudsql_enabled" "1") }}'
          required: true
          help_text: The CloudSQL connection name. This will be in the format "<project>:<region>:<instance-name>".

        - name: db_encryption_keys
          title: Encryption keys
          type: text
          hidden: true
          required: true
          value: '[{"name":"general","version":1,"primary":true,"material":"4uGh1q8y2DYryJwrVMHs0kWXJlqvHWWt/KJuNi04edI="}]'

        - name: db_host
          title: Host
          type: text
          when: '{{repl and (ConfigOptionEquals "db_incluster" "0") (ConfigOptionEquals "db_cloudsql_enabled" "0") }}'
          required: true
          help_text: The host of your database. This can be an IP address or a URL.

        - name: db_username
          title: Username
          when: '{{repl (ConfigOptionEquals "db_incluster" "0") }}'
          type: text
          value: gitpod
          required: true
          help_text: The username for your database.

        - name: db_password
          title: Password
          when: '{{repl (ConfigOptionEquals "db_incluster" "0") }}'
          type: password
          required: true
          help_text: The password for your database.

        - name: db_port
          title: Port
          type: text
          when: '{{repl and (ConfigOptionEquals "db_incluster" "0") (ConfigOptionEquals "db_cloudsql_enabled" "0") }}'
          value: "3306"
          required: true
          help_text: The port for your database.

        - name: db_gcp_credentials
          title: GCP service account key
          when: '{{repl and (ConfigOptionEquals "db_incluster" "0") (ConfigOptionEquals "db_cloudsql_enabled" "1") }}'
          type: file
          required: true
          help_text: Download a [service account key](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) with the `roles/cloudsql.client` role attached.

    - name: storage
      title: Object storage
      description: Gitpod requires object storage to store workspace data. This can either be in-cluster or an external S3 (AWS), Azure or GCP instance.
      items:
        - name: store_provider
          title: Storage provider
          type: select_one
          default: incluster
          help_text: You may either use in-cluster object storage or configure your own external object storage for better performance. This must be accessible from your Kubernetes cluster.
          items:
            - name: incluster
              title: In-cluster
            - name: azure
              title: Azure
            - name: gcp
              title: GCP
            - name: s3
              title: S3

        # Azure help_text
        - name: store_region
          title: Storage region
          type: text
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "azure") }}'
          help_text: ID of the region where your storage exists, such as `uksouth`.

        # GCP help_text
        - name: store_region
          title: Storage region
          type: text
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "gcp") }}'
          help_text: ID of the region where your storage exists, such as `europe-west2`.

        # S3 help_text
        - name: store_region
          title: Storage region
          type: text
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "s3") }}'
          help_text: ID of the region where your storage exists, such as `eu-west-2`.

        - name: store_azure_account_name
          title: Account name
          type: text
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "azure") }}'
          help_text: The globally-unique storage account name.

        - name: store_azure_access_key
          title: Access key
          type: password
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "azure") }}'
          help_text: The access key for the storage account.

        - name: store_gcp_project
          title: Project ID
          type: text
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "gcp") }}'
          help_text: The ID of your GCP project.

        - name: store_gcp_credentials
          title: Service account key
          type: file
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "gcp") }}'
          help_text: Download a [service account key](https://cloud.google.com/iam/docs/creating-managing-service-account-keys) with the `roles/storage.admin` and `roles/storage.objectAdmin` roles attached.

        - name: store_s3_endpoint
          title: Endpoint
          type: text
          required: true
          value: s3.amazonaws.com
          when: '{{repl (ConfigOptionEquals "store_provider" "s3") }}'
          help_text: The endpoint used to connect to the S3 storage.

        - name: store_s3_bucket
          title: S3 bucket name
          type: text
          required: false
          when: '{{repl (ConfigOptionEquals "store_provider" "s3") }}'
          help_text: Name of S3 bucket to be used as storage. If left empty, Gitpod will create bucket per each user. If set, then all data will be stored inside one bucket.

        - name: store_s3_access_key_id
          title: Access Key
          type: text
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "s3") }}'
          help_text: Access key of IAM user's credentials with `AmazonS3FullAccess` policy.

        - name: store_s3_secret_access_key
          title: Secret Key
          type: password
          required: true
          when: '{{repl (ConfigOptionEquals "store_provider" "s3") }}'
          help_text: Secret key of IAM user's credentials with `AmazonS3FullAccess` policy.

    - name: certs
      title: TLS certificates
      description: Certificates are required to maintain a secure connection. The DNS names must be for `$DOMAIN`, `*.$DOMAIN` and `*.ws.$DOMAIN`.
      items:
        - name: tls_self_signed_enabled
          title: Use a self-signed TLS certificate
          type: bool
          default: "0"
          help_text: |
            A self-signed certficate should only be used if applying TLS termination to your load balancer or other proxy.

            If you are terminating your TLS connection with this certificate, you will need to download the [CA](https://en.wikipedia.org/wiki/Certificate_authority)
            certificate and install it to your browser.

            To download the certificate, run
            `kubectl get secrets -n {{repl Namespace }}  ca-issuer-ca -o jsonpath='{.data.ca\.crt}' | base64 -d > ./ca.crt`

        - name: cert_manager_enabled
          title: Use cert-manager
          type: bool
          default: "1"
          when: '{{repl ConfigOptionEquals "tls_self_signed_enabled" "0" }}'
          help_text: Automate certificate management with [cert-manager](https://cert-manager.io).

        - name: cert_manager_issuer_name
          title: Issuer name
          type: text
          value: gitpod-issuer
          required: true
          when: '{{repl and (ConfigOptionEquals "tls_self_signed_enabled" "0") (ConfigOptionEquals "cert_manager_enabled" "1") }}'
          help_text: The name of the issuer you wish to use to generate your certificate. This will be the Kubernetes resource name.

        - name: cert_manager_issuer
          title: Issuer type
          type: select_one
          default: "ClusterIssuer" # Default to ClusterIssuer so it can be stored in a different namespace
          required: true
          when: '{{repl and (ConfigOptionEquals "tls_self_signed_enabled" "0") (ConfigOptionEquals "cert_manager_enabled" "1") }}'
          help_text: A [DNS01](https://cert-manager.io/docs/configuration/acme/dns01) `Issuer` or `ClusterIssuer` is required on the cluster to generate the certificate.
          items:
            - name: ClusterIssuer
              title: Cluster issuer
            - name: Issuer
              title: Issuer

        - name: tls_crt
          title: Certificate
          type: file
          required: true
          when: '{{repl and (ConfigOptionEquals "tls_self_signed_enabled" "0") (ConfigOptionEquals "cert_manager_enabled" "0") }}'
          help_text: A file containing the TLS crt.

        - name: tls_key
          title: Private key
          type: file
          required: true
          when: '{{repl and (ConfigOptionEquals "tls_self_signed_enabled" "0") (ConfigOptionEquals "cert_manager_enabled" "0") }}'
          help_text: A file containing the TLS private key.

        - name: tls_ca_crt
          title: CA certificate
          type: file
          when: '{{repl and (ConfigOptionEquals "tls_self_signed_enabled" "0") (ConfigOptionEquals "cert_manager_enabled" "0") }}'
          help_text: A file containing the Certificate Authority certificate. To be used if your certificate is signed by a non-public CA.

    - name: features
      title: Additional features
      items:
        - name: ssh_gateway
          title: Allow login to your workspace via SSH
          type: bool
          default: "0"
          help_text: 'Enabling the SSH gateway allows use of additional desktop IDEs. IMPORTANT: This uses port 22 on your Kubernetes nodes. When enabled, this will prevent login to the cluster via SSH. If you wish to maintain SSH access to your cluster, please configure another SSH port on your nodes.'

    - name: user_management
      title: User management
      items:
        - name: user_management_block_enabled
          title: Limit user registration
          type: bool
          default: "0"
          help_text: New registrations can be limited to users in specific domains.

        - name: user_management_block_passlist
          title: Allow registration for domain(s)
          type: text
          when: '{{repl (ConfigOptionEquals "user_management_block_enabled" "1") }}'
          help_text: |
            Enable users with email addresses in these domains to register for this service. This must be the primary email address set for the provider.

            Add the domain only (eg, `gitpod.io`). Separate multiple domains with spaces.

    - name: advanced
      title: Advanced Options
      description: Here are advanced options that you should only make use of in coordination with us or when you know what you are doing.
      items:
        - name: advanced_mode_enabled
          title: Enable advanced options
          type: bool
          default: "0"
          help_text: Enables advanced customization options. Enable only when you know what you are doing!

        - name: installer_timeout
          title: Installer timeout
          type: select_one
          default: 5m
          when: '{{repl ConfigOptionEquals "advanced_mode_enabled" "1" }}'
          help_text: Override the timeout for the Installer.
          items:
            - name: 5m
              title: 5 minutes
            - name: 10m
              title: 10 minutes
            - name: 30m
              title: 30 minutes
            - name: 1h
              title: 1 hour
            - name: 90m
              title: 90 minutes
            - name: 2h
              title: 2 hours

        - name: customization_patch
          title: Gitpod customization patch (YAML file)
          type: file
          required: false
          when: '{{repl ConfigOptionEquals "advanced_mode_enabled" "1" }}'
          help_text: |
            A file configured to override annotations, labels and environment variables in components. See our
            [advanced documentation](https://www.gitpod.io/docs/configure/self-hosted/latest/advanced/customization) for
            more details and the format.

        - name: config_patch
          title: Gitpod config patch (YAML file)
          type: file
          required: false
          when: '{{repl ConfigOptionEquals "advanced_mode_enabled" "1" }}'
          help_text: A file with Gitpod config that will be used to patch the generated Gitpod config. Usually provided by Gitpod as a way to tailor your installation.

    - name: components
      title: Components
      description: Customize your component configuration
      when: '{{repl ConfigOptionEquals "advanced_mode_enabled" "1" }}'
      items:
        - name: component_proxy_service_serviceType
          title: Proxy service type
          default: ""
          help_text: |
            Select the [Service Type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
            for the Proxy service. If using anything other than "Load Balancer", you are responsible for configuring your network to route
            traffic through to the `proxy` service.
          type: select_one
          items:
            - name: ""
              title: Load balancer
            - name: ClusterIP
              title: Cluster IP
            - name: NodePort
              title: Node port

    - name: experimental
      title: Experimental options
      description: Experimental options without any support
      when: 'false'
      items:
        - name: enable_proxy_settings
          title: Enable proxy settings
          type: bool
          default: "0"
          help_text: Enable HTTP_PROXY support for the Gitpod application. This is currently an experimental feature.
